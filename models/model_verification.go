/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the Verification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Verification{}

// Verification struct for Verification
type Verification struct {
	Id *string `json:"id,omitempty"`
	Type *VerificationType `json:"type,omitempty"`
	RecordType *VerificationRecordType `json:"record_type,omitempty"`
	// +E164 formatted phone number.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// The identifier of the associated Verify profile.
	VerifyProfileId *string `json:"verify_profile_id,omitempty"`
	// Send a self-generated numeric code to the end-user
	CustomCode NullableString `json:"custom_code,omitempty"`
	// This is the number of seconds before the code of the request is expired. Once this request has expired, the code will no longer verify the user. Note: this will override the `default_verification_timeout_secs` on the Verify profile.
	TimeoutSecs *int32 `json:"timeout_secs,omitempty"`
	Status *VerificationStatus `json:"status,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewVerification instantiates a new Verification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerification() *Verification {
	this := Verification{}
	return &this
}

// NewVerificationWithDefaults instantiates a new Verification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationWithDefaults() *Verification {
	this := Verification{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Verification) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Verification) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Verification) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Verification) GetType() VerificationType {
	if o == nil || IsNil(o.Type) {
		var ret VerificationType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetTypeOk() (*VerificationType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Verification) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given VerificationType and assigns it to the Type field.
func (o *Verification) SetType(v VerificationType) {
	o.Type = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *Verification) GetRecordType() VerificationRecordType {
	if o == nil || IsNil(o.RecordType) {
		var ret VerificationRecordType
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetRecordTypeOk() (*VerificationRecordType, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *Verification) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given VerificationRecordType and assigns it to the RecordType field.
func (o *Verification) SetRecordType(v VerificationRecordType) {
	o.RecordType = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Verification) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Verification) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Verification) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetVerifyProfileId returns the VerifyProfileId field value if set, zero value otherwise.
func (o *Verification) GetVerifyProfileId() string {
	if o == nil || IsNil(o.VerifyProfileId) {
		var ret string
		return ret
	}
	return *o.VerifyProfileId
}

// GetVerifyProfileIdOk returns a tuple with the VerifyProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetVerifyProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyProfileId) {
		return nil, false
	}
	return o.VerifyProfileId, true
}

// HasVerifyProfileId returns a boolean if a field has been set.
func (o *Verification) HasVerifyProfileId() bool {
	if o != nil && !IsNil(o.VerifyProfileId) {
		return true
	}

	return false
}

// SetVerifyProfileId gets a reference to the given string and assigns it to the VerifyProfileId field.
func (o *Verification) SetVerifyProfileId(v string) {
	o.VerifyProfileId = &v
}

// GetCustomCode returns the CustomCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Verification) GetCustomCode() string {
	if o == nil || IsNil(o.CustomCode.Get()) {
		var ret string
		return ret
	}
	return *o.CustomCode.Get()
}

// GetCustomCodeOk returns a tuple with the CustomCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Verification) GetCustomCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomCode.Get(), o.CustomCode.IsSet()
}

// HasCustomCode returns a boolean if a field has been set.
func (o *Verification) HasCustomCode() bool {
	if o != nil && o.CustomCode.IsSet() {
		return true
	}

	return false
}

// SetCustomCode gets a reference to the given NullableString and assigns it to the CustomCode field.
func (o *Verification) SetCustomCode(v string) {
	o.CustomCode.Set(&v)
}
// SetCustomCodeNil sets the value for CustomCode to be an explicit nil
func (o *Verification) SetCustomCodeNil() {
	o.CustomCode.Set(nil)
}

// UnsetCustomCode ensures that no value is present for CustomCode, not even an explicit nil
func (o *Verification) UnsetCustomCode() {
	o.CustomCode.Unset()
}

// GetTimeoutSecs returns the TimeoutSecs field value if set, zero value otherwise.
func (o *Verification) GetTimeoutSecs() int32 {
	if o == nil || IsNil(o.TimeoutSecs) {
		var ret int32
		return ret
	}
	return *o.TimeoutSecs
}

// GetTimeoutSecsOk returns a tuple with the TimeoutSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetTimeoutSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutSecs) {
		return nil, false
	}
	return o.TimeoutSecs, true
}

// HasTimeoutSecs returns a boolean if a field has been set.
func (o *Verification) HasTimeoutSecs() bool {
	if o != nil && !IsNil(o.TimeoutSecs) {
		return true
	}

	return false
}

// SetTimeoutSecs gets a reference to the given int32 and assigns it to the TimeoutSecs field.
func (o *Verification) SetTimeoutSecs(v int32) {
	o.TimeoutSecs = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Verification) GetStatus() VerificationStatus {
	if o == nil || IsNil(o.Status) {
		var ret VerificationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetStatusOk() (*VerificationStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Verification) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given VerificationStatus and assigns it to the Status field.
func (o *Verification) SetStatus(v VerificationStatus) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Verification) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Verification) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Verification) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Verification) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Verification) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Verification) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o Verification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Verification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.VerifyProfileId) {
		toSerialize["verify_profile_id"] = o.VerifyProfileId
	}
	if o.CustomCode.IsSet() {
		toSerialize["custom_code"] = o.CustomCode.Get()
	}
	if !IsNil(o.TimeoutSecs) {
		toSerialize["timeout_secs"] = o.TimeoutSecs
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableVerification struct {
	value *Verification
	isSet bool
}

func (v NullableVerification) Get() *Verification {
	return v.value
}

func (v *NullableVerification) Set(val *Verification) {
	v.value = val
	v.isSet = true
}

func (v NullableVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerification(val *Verification) *NullableVerification {
	return &NullableVerification{value: val, isSet: true}
}

func (v NullableVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



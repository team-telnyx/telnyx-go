/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TranscriptionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranscriptionConfig{}

// TranscriptionConfig The settings associated with speech to text for the voice assistant. This is only relevant if the assistant uses a text-to-text language model. Any assistant using a model with native audio support (e.g. `fixie-ai/ultravox-v0_4`) will ignore this field.
type TranscriptionConfig struct {
	// The speech to text model to be used by the voice assistant.  - `distil-whisper/distil-large-v2` is lower latency but English-only. - `openai/whisper-large-v3-turbo` is multi-lingual with automatic language detection but slightly higher latency. - `google` is a multi-lingual option, please describe the language in the `language` field.
	Model *string `json:"model,omitempty"`
}

// NewTranscriptionConfig instantiates a new TranscriptionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptionConfig() *TranscriptionConfig {
	this := TranscriptionConfig{}
	var model string = "distil-whisper/distil-large-v2"
	this.Model = &model
	return &this
}

// NewTranscriptionConfigWithDefaults instantiates a new TranscriptionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptionConfigWithDefaults() *TranscriptionConfig {
	this := TranscriptionConfig{}
	var model string = "distil-whisper/distil-large-v2"
	this.Model = &model
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *TranscriptionConfig) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionConfig) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *TranscriptionConfig) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *TranscriptionConfig) SetModel(v string) {
	o.Model = &v
}

func (o TranscriptionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranscriptionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

type NullableTranscriptionConfig struct {
	value *TranscriptionConfig
	isSet bool
}

func (v NullableTranscriptionConfig) Get() *TranscriptionConfig {
	return v.value
}

func (v *NullableTranscriptionConfig) Set(val *TranscriptionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionConfig(val *TranscriptionConfig) *NullableTranscriptionConfig {
	return &NullableTranscriptionConfig{value: val, isSet: true}
}

func (v NullableTranscriptionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



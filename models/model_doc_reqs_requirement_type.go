/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the DocReqsRequirementType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocReqsRequirementType{}

// DocReqsRequirementType struct for DocReqsRequirementType
type DocReqsRequirementType struct {
	AcceptanceCriteria *DocReqsRequirementTypeAcceptanceCriteria `json:"acceptance_criteria,omitempty"`
	// Describes the requirement type
	Description *string `json:"description,omitempty"`
	// Provides one or more example of acceptable documents
	Example *string `json:"example,omitempty"`
	// Defines the type of this requirement type
	Type *string `json:"type,omitempty"`
	// A short descriptive name for this requirement_type
	Name *string `json:"name,omitempty"`
	// Identifies the type of the resource
	RecordType *string `json:"record_type,omitempty"`
	// Identifies the associated document
	Id *string `json:"id,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewDocReqsRequirementType instantiates a new DocReqsRequirementType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocReqsRequirementType() *DocReqsRequirementType {
	this := DocReqsRequirementType{}
	return &this
}

// NewDocReqsRequirementTypeWithDefaults instantiates a new DocReqsRequirementType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocReqsRequirementTypeWithDefaults() *DocReqsRequirementType {
	this := DocReqsRequirementType{}
	return &this
}

// GetAcceptanceCriteria returns the AcceptanceCriteria field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetAcceptanceCriteria() DocReqsRequirementTypeAcceptanceCriteria {
	if o == nil || IsNil(o.AcceptanceCriteria) {
		var ret DocReqsRequirementTypeAcceptanceCriteria
		return ret
	}
	return *o.AcceptanceCriteria
}

// GetAcceptanceCriteriaOk returns a tuple with the AcceptanceCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetAcceptanceCriteriaOk() (*DocReqsRequirementTypeAcceptanceCriteria, bool) {
	if o == nil || IsNil(o.AcceptanceCriteria) {
		return nil, false
	}
	return o.AcceptanceCriteria, true
}

// HasAcceptanceCriteria returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasAcceptanceCriteria() bool {
	if o != nil && !IsNil(o.AcceptanceCriteria) {
		return true
	}

	return false
}

// SetAcceptanceCriteria gets a reference to the given DocReqsRequirementTypeAcceptanceCriteria and assigns it to the AcceptanceCriteria field.
func (o *DocReqsRequirementType) SetAcceptanceCriteria(v DocReqsRequirementTypeAcceptanceCriteria) {
	o.AcceptanceCriteria = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DocReqsRequirementType) SetDescription(v string) {
	o.Description = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetExample() string {
	if o == nil || IsNil(o.Example) {
		var ret string
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetExampleOk() (*string, bool) {
	if o == nil || IsNil(o.Example) {
		return nil, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasExample() bool {
	if o != nil && !IsNil(o.Example) {
		return true
	}

	return false
}

// SetExample gets a reference to the given string and assigns it to the Example field.
func (o *DocReqsRequirementType) SetExample(v string) {
	o.Example = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DocReqsRequirementType) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DocReqsRequirementType) SetName(v string) {
	o.Name = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *DocReqsRequirementType) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DocReqsRequirementType) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DocReqsRequirementType) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DocReqsRequirementType) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirementType) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DocReqsRequirementType) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DocReqsRequirementType) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o DocReqsRequirementType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocReqsRequirementType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptanceCriteria) {
		toSerialize["acceptance_criteria"] = o.AcceptanceCriteria
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Example) {
		toSerialize["example"] = o.Example
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableDocReqsRequirementType struct {
	value *DocReqsRequirementType
	isSet bool
}

func (v NullableDocReqsRequirementType) Get() *DocReqsRequirementType {
	return v.value
}

func (v *NullableDocReqsRequirementType) Set(val *DocReqsRequirementType) {
	v.value = val
	v.isSet = true
}

func (v NullableDocReqsRequirementType) IsSet() bool {
	return v.isSet
}

func (v *NullableDocReqsRequirementType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocReqsRequirementType(val *DocReqsRequirementType) *NullableDocReqsRequirementType {
	return &NullableDocReqsRequirementType{value: val, isSet: true}
}

func (v NullableDocReqsRequirementType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocReqsRequirementType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the WebhookPortingOrderDeletedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookPortingOrderDeletedPayload{}

// WebhookPortingOrderDeletedPayload The webhook payload for the porting_order.deleted event
type WebhookPortingOrderDeletedPayload struct {
	// Identifies the porting order that was deleted.
	Id *string `json:"id,omitempty"`
	// Identifies the customer reference associated with the porting order.
	CustomerReference *string `json:"customer_reference,omitempty"`
	// ISO 8601 formatted date indicating when the porting order was deleted.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
}

// NewWebhookPortingOrderDeletedPayload instantiates a new WebhookPortingOrderDeletedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookPortingOrderDeletedPayload() *WebhookPortingOrderDeletedPayload {
	this := WebhookPortingOrderDeletedPayload{}
	return &this
}

// NewWebhookPortingOrderDeletedPayloadWithDefaults instantiates a new WebhookPortingOrderDeletedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookPortingOrderDeletedPayloadWithDefaults() *WebhookPortingOrderDeletedPayload {
	this := WebhookPortingOrderDeletedPayload{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookPortingOrderDeletedPayload) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderDeletedPayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookPortingOrderDeletedPayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookPortingOrderDeletedPayload) SetId(v string) {
	o.Id = &v
}

// GetCustomerReference returns the CustomerReference field value if set, zero value otherwise.
func (o *WebhookPortingOrderDeletedPayload) GetCustomerReference() string {
	if o == nil || IsNil(o.CustomerReference) {
		var ret string
		return ret
	}
	return *o.CustomerReference
}

// GetCustomerReferenceOk returns a tuple with the CustomerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderDeletedPayload) GetCustomerReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReference) {
		return nil, false
	}
	return o.CustomerReference, true
}

// HasCustomerReference returns a boolean if a field has been set.
func (o *WebhookPortingOrderDeletedPayload) HasCustomerReference() bool {
	if o != nil && !IsNil(o.CustomerReference) {
		return true
	}

	return false
}

// SetCustomerReference gets a reference to the given string and assigns it to the CustomerReference field.
func (o *WebhookPortingOrderDeletedPayload) SetCustomerReference(v string) {
	o.CustomerReference = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *WebhookPortingOrderDeletedPayload) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderDeletedPayload) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *WebhookPortingOrderDeletedPayload) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *WebhookPortingOrderDeletedPayload) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

func (o WebhookPortingOrderDeletedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookPortingOrderDeletedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CustomerReference) {
		toSerialize["customer_reference"] = o.CustomerReference
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	return toSerialize, nil
}

type NullableWebhookPortingOrderDeletedPayload struct {
	value *WebhookPortingOrderDeletedPayload
	isSet bool
}

func (v NullableWebhookPortingOrderDeletedPayload) Get() *WebhookPortingOrderDeletedPayload {
	return v.value
}

func (v *NullableWebhookPortingOrderDeletedPayload) Set(val *WebhookPortingOrderDeletedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookPortingOrderDeletedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookPortingOrderDeletedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookPortingOrderDeletedPayload(val *WebhookPortingOrderDeletedPayload) *NullableWebhookPortingOrderDeletedPayload {
	return &NullableWebhookPortingOrderDeletedPayload{value: val, isSet: true}
}

func (v NullableWebhookPortingOrderDeletedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookPortingOrderDeletedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



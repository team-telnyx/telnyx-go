/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the RCSFrom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RCSFrom{}

// RCSFrom struct for RCSFrom
type RCSFrom struct {
	// agent ID
	AgentId *string `json:"agent_id,omitempty"`
	Carrier *string `json:"carrier,omitempty"`
	AgentName *string `json:"agent_name,omitempty"`
}

// NewRCSFrom instantiates a new RCSFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRCSFrom() *RCSFrom {
	this := RCSFrom{}
	return &this
}

// NewRCSFromWithDefaults instantiates a new RCSFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRCSFromWithDefaults() *RCSFrom {
	this := RCSFrom{}
	return &this
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *RCSFrom) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RCSFrom) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *RCSFrom) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *RCSFrom) SetAgentId(v string) {
	o.AgentId = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *RCSFrom) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RCSFrom) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *RCSFrom) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *RCSFrom) SetCarrier(v string) {
	o.Carrier = &v
}

// GetAgentName returns the AgentName field value if set, zero value otherwise.
func (o *RCSFrom) GetAgentName() string {
	if o == nil || IsNil(o.AgentName) {
		var ret string
		return ret
	}
	return *o.AgentName
}

// GetAgentNameOk returns a tuple with the AgentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RCSFrom) GetAgentNameOk() (*string, bool) {
	if o == nil || IsNil(o.AgentName) {
		return nil, false
	}
	return o.AgentName, true
}

// HasAgentName returns a boolean if a field has been set.
func (o *RCSFrom) HasAgentName() bool {
	if o != nil && !IsNil(o.AgentName) {
		return true
	}

	return false
}

// SetAgentName gets a reference to the given string and assigns it to the AgentName field.
func (o *RCSFrom) SetAgentName(v string) {
	o.AgentName = &v
}

func (o RCSFrom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RCSFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	if !IsNil(o.AgentName) {
		toSerialize["agent_name"] = o.AgentName
	}
	return toSerialize, nil
}

type NullableRCSFrom struct {
	value *RCSFrom
	isSet bool
}

func (v NullableRCSFrom) Get() *RCSFrom {
	return v.value
}

func (v *NullableRCSFrom) Set(val *RCSFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableRCSFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableRCSFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRCSFrom(val *RCSFrom) *NullableRCSFrom {
	return &NullableRCSFrom{value: val, isSet: true}
}

func (v NullableRCSFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRCSFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



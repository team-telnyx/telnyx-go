/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SIMCardOrderPreviewTotalCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SIMCardOrderPreviewTotalCost{}

// SIMCardOrderPreviewTotalCost struct for SIMCardOrderPreviewTotalCost
type SIMCardOrderPreviewTotalCost struct {
	// A string representing the cost amount.
	Amount *string `json:"amount,omitempty"`
	// ISO 4217 currency string.
	Currency *string `json:"currency,omitempty"`
}

// NewSIMCardOrderPreviewTotalCost instantiates a new SIMCardOrderPreviewTotalCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSIMCardOrderPreviewTotalCost() *SIMCardOrderPreviewTotalCost {
	this := SIMCardOrderPreviewTotalCost{}
	return &this
}

// NewSIMCardOrderPreviewTotalCostWithDefaults instantiates a new SIMCardOrderPreviewTotalCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSIMCardOrderPreviewTotalCostWithDefaults() *SIMCardOrderPreviewTotalCost {
	this := SIMCardOrderPreviewTotalCost{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SIMCardOrderPreviewTotalCost) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreviewTotalCost) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SIMCardOrderPreviewTotalCost) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *SIMCardOrderPreviewTotalCost) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *SIMCardOrderPreviewTotalCost) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreviewTotalCost) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *SIMCardOrderPreviewTotalCost) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *SIMCardOrderPreviewTotalCost) SetCurrency(v string) {
	o.Currency = &v
}

func (o SIMCardOrderPreviewTotalCost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SIMCardOrderPreviewTotalCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableSIMCardOrderPreviewTotalCost struct {
	value *SIMCardOrderPreviewTotalCost
	isSet bool
}

func (v NullableSIMCardOrderPreviewTotalCost) Get() *SIMCardOrderPreviewTotalCost {
	return v.value
}

func (v *NullableSIMCardOrderPreviewTotalCost) Set(val *SIMCardOrderPreviewTotalCost) {
	v.value = val
	v.isSet = true
}

func (v NullableSIMCardOrderPreviewTotalCost) IsSet() bool {
	return v.isSet
}

func (v *NullableSIMCardOrderPreviewTotalCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSIMCardOrderPreviewTotalCost(val *SIMCardOrderPreviewTotalCost) *NullableSIMCardOrderPreviewTotalCost {
	return &NullableSIMCardOrderPreviewTotalCost{value: val, isSet: true}
}

func (v NullableSIMCardOrderPreviewTotalCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSIMCardOrderPreviewTotalCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



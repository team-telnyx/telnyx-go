/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GcbChannelZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcbChannelZone{}

// GcbChannelZone struct for GcbChannelZone
type GcbChannelZone struct {
	RecordType string `json:"record_type"`
	// List of countries (in ISO 3166-2, capitalized) members of the billing channel zone
	Countries []string `json:"countries"`
	Id string `json:"id"`
	Name string `json:"name"`
	Channels int64 `json:"channels"`
	// ISO 8601 formatted date of when the channel zone was created
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date of when the channel zone was updated
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type _GcbChannelZone GcbChannelZone

// NewGcbChannelZone instantiates a new GcbChannelZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcbChannelZone(recordType string, countries []string, id string, name string, channels int64) *GcbChannelZone {
	this := GcbChannelZone{}
	this.RecordType = recordType
	this.Countries = countries
	this.Id = id
	this.Name = name
	this.Channels = channels
	return &this
}

// NewGcbChannelZoneWithDefaults instantiates a new GcbChannelZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcbChannelZoneWithDefaults() *GcbChannelZone {
	this := GcbChannelZone{}
	return &this
}

// GetRecordType returns the RecordType field value
func (o *GcbChannelZone) GetRecordType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetRecordTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordType, true
}

// SetRecordType sets field value
func (o *GcbChannelZone) SetRecordType(v string) {
	o.RecordType = v
}

// GetCountries returns the Countries field value
func (o *GcbChannelZone) GetCountries() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetCountriesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Countries, true
}

// SetCountries sets field value
func (o *GcbChannelZone) SetCountries(v []string) {
	o.Countries = v
}

// GetId returns the Id field value
func (o *GcbChannelZone) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GcbChannelZone) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GcbChannelZone) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GcbChannelZone) SetName(v string) {
	o.Name = v
}

// GetChannels returns the Channels field value
func (o *GcbChannelZone) GetChannels() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetChannelsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channels, true
}

// SetChannels sets field value
func (o *GcbChannelZone) SetChannels(v int64) {
	o.Channels = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GcbChannelZone) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GcbChannelZone) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GcbChannelZone) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GcbChannelZone) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcbChannelZone) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GcbChannelZone) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GcbChannelZone) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GcbChannelZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcbChannelZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["record_type"] = o.RecordType
	toSerialize["countries"] = o.Countries
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["channels"] = o.Channels
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *GcbChannelZone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_type",
		"countries",
		"id",
		"name",
		"channels",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGcbChannelZone := _GcbChannelZone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGcbChannelZone)

	if err != nil {
		return err
	}

	*o = GcbChannelZone(varGcbChannelZone)

	return err
}

type NullableGcbChannelZone struct {
	value *GcbChannelZone
	isSet bool
}

func (v NullableGcbChannelZone) Get() *GcbChannelZone {
	return v.value
}

func (v *NullableGcbChannelZone) Set(val *GcbChannelZone) {
	v.value = val
	v.isSet = true
}

func (v NullableGcbChannelZone) IsSet() bool {
	return v.isSet
}

func (v *NullableGcbChannelZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcbChannelZone(val *GcbChannelZone) *NullableGcbChannelZone {
	return &NullableGcbChannelZone{value: val, isSet: true}
}

func (v NullableGcbChannelZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcbChannelZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConversationInsightConversationInsightsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversationInsightConversationInsightsInner{}

// ConversationInsightConversationInsightsInner struct for ConversationInsightConversationInsightsInner
type ConversationInsightConversationInsightsInner struct {
	// Insight result from the conversation. If the insight has a JSON schema, this will be stringified JSON object.
	Result string `json:"result"`
	// Unique identifier for the insight configuration.
	InsightId string `json:"insight_id"`
}

type _ConversationInsightConversationInsightsInner ConversationInsightConversationInsightsInner

// NewConversationInsightConversationInsightsInner instantiates a new ConversationInsightConversationInsightsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationInsightConversationInsightsInner(result string, insightId string) *ConversationInsightConversationInsightsInner {
	this := ConversationInsightConversationInsightsInner{}
	this.Result = result
	this.InsightId = insightId
	return &this
}

// NewConversationInsightConversationInsightsInnerWithDefaults instantiates a new ConversationInsightConversationInsightsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationInsightConversationInsightsInnerWithDefaults() *ConversationInsightConversationInsightsInner {
	this := ConversationInsightConversationInsightsInner{}
	return &this
}

// GetResult returns the Result field value
func (o *ConversationInsightConversationInsightsInner) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ConversationInsightConversationInsightsInner) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *ConversationInsightConversationInsightsInner) SetResult(v string) {
	o.Result = v
}

// GetInsightId returns the InsightId field value
func (o *ConversationInsightConversationInsightsInner) GetInsightId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InsightId
}

// GetInsightIdOk returns a tuple with the InsightId field value
// and a boolean to check if the value has been set.
func (o *ConversationInsightConversationInsightsInner) GetInsightIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InsightId, true
}

// SetInsightId sets field value
func (o *ConversationInsightConversationInsightsInner) SetInsightId(v string) {
	o.InsightId = v
}

func (o ConversationInsightConversationInsightsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversationInsightConversationInsightsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["insight_id"] = o.InsightId
	return toSerialize, nil
}

func (o *ConversationInsightConversationInsightsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"insight_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversationInsightConversationInsightsInner := _ConversationInsightConversationInsightsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversationInsightConversationInsightsInner)

	if err != nil {
		return err
	}

	*o = ConversationInsightConversationInsightsInner(varConversationInsightConversationInsightsInner)

	return err
}

type NullableConversationInsightConversationInsightsInner struct {
	value *ConversationInsightConversationInsightsInner
	isSet bool
}

func (v NullableConversationInsightConversationInsightsInner) Get() *ConversationInsightConversationInsightsInner {
	return v.value
}

func (v *NullableConversationInsightConversationInsightsInner) Set(val *ConversationInsightConversationInsightsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationInsightConversationInsightsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationInsightConversationInsightsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationInsightConversationInsightsInner(val *ConversationInsightConversationInsightsInner) *NullableConversationInsightConversationInsightsInner {
	return &NullableConversationInsightConversationInsightsInner{value: val, isSet: true}
}

func (v NullableConversationInsightConversationInsightsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationInsightConversationInsightsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



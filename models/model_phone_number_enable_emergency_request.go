/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhoneNumberEnableEmergencyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneNumberEnableEmergencyRequest{}

// PhoneNumberEnableEmergencyRequest struct for PhoneNumberEnableEmergencyRequest
type PhoneNumberEnableEmergencyRequest struct {
	// Indicates whether to enable emergency services on this number.
	EmergencyEnabled bool `json:"emergency_enabled"`
	// Identifies the address to be used with emergency services.
	EmergencyAddressId string `json:"emergency_address_id"`
}

type _PhoneNumberEnableEmergencyRequest PhoneNumberEnableEmergencyRequest

// NewPhoneNumberEnableEmergencyRequest instantiates a new PhoneNumberEnableEmergencyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumberEnableEmergencyRequest(emergencyEnabled bool, emergencyAddressId string) *PhoneNumberEnableEmergencyRequest {
	this := PhoneNumberEnableEmergencyRequest{}
	this.EmergencyEnabled = emergencyEnabled
	this.EmergencyAddressId = emergencyAddressId
	return &this
}

// NewPhoneNumberEnableEmergencyRequestWithDefaults instantiates a new PhoneNumberEnableEmergencyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumberEnableEmergencyRequestWithDefaults() *PhoneNumberEnableEmergencyRequest {
	this := PhoneNumberEnableEmergencyRequest{}
	return &this
}

// GetEmergencyEnabled returns the EmergencyEnabled field value
func (o *PhoneNumberEnableEmergencyRequest) GetEmergencyEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmergencyEnabled
}

// GetEmergencyEnabledOk returns a tuple with the EmergencyEnabled field value
// and a boolean to check if the value has been set.
func (o *PhoneNumberEnableEmergencyRequest) GetEmergencyEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmergencyEnabled, true
}

// SetEmergencyEnabled sets field value
func (o *PhoneNumberEnableEmergencyRequest) SetEmergencyEnabled(v bool) {
	o.EmergencyEnabled = v
}

// GetEmergencyAddressId returns the EmergencyAddressId field value
func (o *PhoneNumberEnableEmergencyRequest) GetEmergencyAddressId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmergencyAddressId
}

// GetEmergencyAddressIdOk returns a tuple with the EmergencyAddressId field value
// and a boolean to check if the value has been set.
func (o *PhoneNumberEnableEmergencyRequest) GetEmergencyAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmergencyAddressId, true
}

// SetEmergencyAddressId sets field value
func (o *PhoneNumberEnableEmergencyRequest) SetEmergencyAddressId(v string) {
	o.EmergencyAddressId = v
}

func (o PhoneNumberEnableEmergencyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneNumberEnableEmergencyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emergency_enabled"] = o.EmergencyEnabled
	toSerialize["emergency_address_id"] = o.EmergencyAddressId
	return toSerialize, nil
}

func (o *PhoneNumberEnableEmergencyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emergency_enabled",
		"emergency_address_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhoneNumberEnableEmergencyRequest := _PhoneNumberEnableEmergencyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhoneNumberEnableEmergencyRequest)

	if err != nil {
		return err
	}

	*o = PhoneNumberEnableEmergencyRequest(varPhoneNumberEnableEmergencyRequest)

	return err
}

type NullablePhoneNumberEnableEmergencyRequest struct {
	value *PhoneNumberEnableEmergencyRequest
	isSet bool
}

func (v NullablePhoneNumberEnableEmergencyRequest) Get() *PhoneNumberEnableEmergencyRequest {
	return v.value
}

func (v *NullablePhoneNumberEnableEmergencyRequest) Set(val *PhoneNumberEnableEmergencyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumberEnableEmergencyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumberEnableEmergencyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumberEnableEmergencyRequest(val *PhoneNumberEnableEmergencyRequest) *NullablePhoneNumberEnableEmergencyRequest {
	return &NullablePhoneNumberEnableEmergencyRequest{value: val, isSet: true}
}

func (v NullablePhoneNumberEnableEmergencyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumberEnableEmergencyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)


// ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost struct for ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost
type ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost struct {
	AssignProfileToCampaignResponse *AssignProfileToCampaignResponse
	SettingsDataErrorMessage *SettingsDataErrorMessage
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AssignProfileToCampaignResponse
	err = json.Unmarshal(data, &dst.AssignProfileToCampaignResponse);
	if err == nil {
		jsonAssignProfileToCampaignResponse, _ := json.Marshal(dst.AssignProfileToCampaignResponse)
		if string(jsonAssignProfileToCampaignResponse) == "{}" { // empty struct
			dst.AssignProfileToCampaignResponse = nil
		} else {
			return nil // data stored in dst.AssignProfileToCampaignResponse, return on the first match
		}
	} else {
		dst.AssignProfileToCampaignResponse = nil
	}

	// try to unmarshal JSON data into SettingsDataErrorMessage
	err = json.Unmarshal(data, &dst.SettingsDataErrorMessage);
	if err == nil {
		jsonSettingsDataErrorMessage, _ := json.Marshal(dst.SettingsDataErrorMessage)
		if string(jsonSettingsDataErrorMessage) == "{}" { // empty struct
			dst.SettingsDataErrorMessage = nil
		} else {
			return nil // data stored in dst.SettingsDataErrorMessage, return on the first match
		}
	} else {
		dst.SettingsDataErrorMessage = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) MarshalJSON() ([]byte, error) {
	if src.AssignProfileToCampaignResponse != nil {
		return json.Marshal(&src.AssignProfileToCampaignResponse)
	}

	if src.SettingsDataErrorMessage != nil {
		return json.Marshal(&src.SettingsDataErrorMessage)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost struct {
	value *ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost
	isSet bool
}

func (v NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) Get() *ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost {
	return v.value
}

func (v *NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) Set(val *ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost(val *ResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) *NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost {
	return &NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost{value: val, isSet: true}
}

func (v NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseAssignMessagingProfileToCampaignPublicPhonenumberassignmentbyprofilePost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



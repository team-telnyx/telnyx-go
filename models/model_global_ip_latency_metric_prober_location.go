/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GlobalIpLatencyMetricProberLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIpLatencyMetricProberLocation{}

// GlobalIpLatencyMetricProberLocation struct for GlobalIpLatencyMetricProberLocation
type GlobalIpLatencyMetricProberLocation struct {
	// Location ID.
	Id *string `json:"id,omitempty"`
	// Location name.
	Name *string `json:"name,omitempty"`
	// Latitude.
	Lat *float32 `json:"lat,omitempty"`
	// Longitude.
	Lon *float32 `json:"lon,omitempty"`
}

// NewGlobalIpLatencyMetricProberLocation instantiates a new GlobalIpLatencyMetricProberLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIpLatencyMetricProberLocation() *GlobalIpLatencyMetricProberLocation {
	this := GlobalIpLatencyMetricProberLocation{}
	return &this
}

// NewGlobalIpLatencyMetricProberLocationWithDefaults instantiates a new GlobalIpLatencyMetricProberLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIpLatencyMetricProberLocationWithDefaults() *GlobalIpLatencyMetricProberLocation {
	this := GlobalIpLatencyMetricProberLocation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GlobalIpLatencyMetricProberLocation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpLatencyMetricProberLocation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GlobalIpLatencyMetricProberLocation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GlobalIpLatencyMetricProberLocation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlobalIpLatencyMetricProberLocation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpLatencyMetricProberLocation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlobalIpLatencyMetricProberLocation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlobalIpLatencyMetricProberLocation) SetName(v string) {
	o.Name = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *GlobalIpLatencyMetricProberLocation) GetLat() float32 {
	if o == nil || IsNil(o.Lat) {
		var ret float32
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpLatencyMetricProberLocation) GetLatOk() (*float32, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *GlobalIpLatencyMetricProberLocation) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given float32 and assigns it to the Lat field.
func (o *GlobalIpLatencyMetricProberLocation) SetLat(v float32) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *GlobalIpLatencyMetricProberLocation) GetLon() float32 {
	if o == nil || IsNil(o.Lon) {
		var ret float32
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpLatencyMetricProberLocation) GetLonOk() (*float32, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *GlobalIpLatencyMetricProberLocation) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given float32 and assigns it to the Lon field.
func (o *GlobalIpLatencyMetricProberLocation) SetLon(v float32) {
	o.Lon = &v
}

func (o GlobalIpLatencyMetricProberLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIpLatencyMetricProberLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	return toSerialize, nil
}

type NullableGlobalIpLatencyMetricProberLocation struct {
	value *GlobalIpLatencyMetricProberLocation
	isSet bool
}

func (v NullableGlobalIpLatencyMetricProberLocation) Get() *GlobalIpLatencyMetricProberLocation {
	return v.value
}

func (v *NullableGlobalIpLatencyMetricProberLocation) Set(val *GlobalIpLatencyMetricProberLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIpLatencyMetricProberLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIpLatencyMetricProberLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIpLatencyMetricProberLocation(val *GlobalIpLatencyMetricProberLocation) *NullableGlobalIpLatencyMetricProberLocation {
	return &NullableGlobalIpLatencyMetricProberLocation{value: val, isSet: true}
}

func (v NullableGlobalIpLatencyMetricProberLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIpLatencyMetricProberLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



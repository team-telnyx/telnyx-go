/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdatePortingOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePortingOrder{}

// UpdatePortingOrder struct for UpdatePortingOrder
type UpdatePortingOrder struct {
	Misc *PortingOrderMisc `json:"misc,omitempty"`
	EndUser *PortingOrderEndUser `json:"end_user,omitempty"`
	Documents *PortingOrderDocuments `json:"documents,omitempty"`
	ActivationSettings *UpdatePortingOrderActivationSettings `json:"activation_settings,omitempty"`
	PhoneNumberConfiguration *PortingOrderPhoneNumberConfiguration `json:"phone_number_configuration,omitempty"`
	// If present, we will read the current values from the specified Requirement Group into the Documents and Requirements for this Porting Order. Note that any future changes in the Requirement Group would have no impact on this Porting Order. We will return an error if a specified Requirement Group conflicts with documents or requirements in the same request.
	RequirementGroupId *string `json:"requirement_group_id,omitempty"`
	// List of requirements for porting numbers. 
	Requirements []UpdatePortingOrderRequirement `json:"requirements,omitempty"`
	UserFeedback *PortingOrderUserFeedback `json:"user_feedback,omitempty"`
	WebhookUrl *string `json:"webhook_url,omitempty"`
	CustomerReference *string `json:"customer_reference,omitempty"`
	Messaging *UpdatePortingOrderMessaging `json:"messaging,omitempty"`
}

// NewUpdatePortingOrder instantiates a new UpdatePortingOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePortingOrder() *UpdatePortingOrder {
	this := UpdatePortingOrder{}
	return &this
}

// NewUpdatePortingOrderWithDefaults instantiates a new UpdatePortingOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePortingOrderWithDefaults() *UpdatePortingOrder {
	this := UpdatePortingOrder{}
	return &this
}

// GetMisc returns the Misc field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetMisc() PortingOrderMisc {
	if o == nil || IsNil(o.Misc) {
		var ret PortingOrderMisc
		return ret
	}
	return *o.Misc
}

// GetMiscOk returns a tuple with the Misc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetMiscOk() (*PortingOrderMisc, bool) {
	if o == nil || IsNil(o.Misc) {
		return nil, false
	}
	return o.Misc, true
}

// HasMisc returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasMisc() bool {
	if o != nil && !IsNil(o.Misc) {
		return true
	}

	return false
}

// SetMisc gets a reference to the given PortingOrderMisc and assigns it to the Misc field.
func (o *UpdatePortingOrder) SetMisc(v PortingOrderMisc) {
	o.Misc = &v
}

// GetEndUser returns the EndUser field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetEndUser() PortingOrderEndUser {
	if o == nil || IsNil(o.EndUser) {
		var ret PortingOrderEndUser
		return ret
	}
	return *o.EndUser
}

// GetEndUserOk returns a tuple with the EndUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetEndUserOk() (*PortingOrderEndUser, bool) {
	if o == nil || IsNil(o.EndUser) {
		return nil, false
	}
	return o.EndUser, true
}

// HasEndUser returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasEndUser() bool {
	if o != nil && !IsNil(o.EndUser) {
		return true
	}

	return false
}

// SetEndUser gets a reference to the given PortingOrderEndUser and assigns it to the EndUser field.
func (o *UpdatePortingOrder) SetEndUser(v PortingOrderEndUser) {
	o.EndUser = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetDocuments() PortingOrderDocuments {
	if o == nil || IsNil(o.Documents) {
		var ret PortingOrderDocuments
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetDocumentsOk() (*PortingOrderDocuments, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given PortingOrderDocuments and assigns it to the Documents field.
func (o *UpdatePortingOrder) SetDocuments(v PortingOrderDocuments) {
	o.Documents = &v
}

// GetActivationSettings returns the ActivationSettings field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetActivationSettings() UpdatePortingOrderActivationSettings {
	if o == nil || IsNil(o.ActivationSettings) {
		var ret UpdatePortingOrderActivationSettings
		return ret
	}
	return *o.ActivationSettings
}

// GetActivationSettingsOk returns a tuple with the ActivationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetActivationSettingsOk() (*UpdatePortingOrderActivationSettings, bool) {
	if o == nil || IsNil(o.ActivationSettings) {
		return nil, false
	}
	return o.ActivationSettings, true
}

// HasActivationSettings returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasActivationSettings() bool {
	if o != nil && !IsNil(o.ActivationSettings) {
		return true
	}

	return false
}

// SetActivationSettings gets a reference to the given UpdatePortingOrderActivationSettings and assigns it to the ActivationSettings field.
func (o *UpdatePortingOrder) SetActivationSettings(v UpdatePortingOrderActivationSettings) {
	o.ActivationSettings = &v
}

// GetPhoneNumberConfiguration returns the PhoneNumberConfiguration field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetPhoneNumberConfiguration() PortingOrderPhoneNumberConfiguration {
	if o == nil || IsNil(o.PhoneNumberConfiguration) {
		var ret PortingOrderPhoneNumberConfiguration
		return ret
	}
	return *o.PhoneNumberConfiguration
}

// GetPhoneNumberConfigurationOk returns a tuple with the PhoneNumberConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetPhoneNumberConfigurationOk() (*PortingOrderPhoneNumberConfiguration, bool) {
	if o == nil || IsNil(o.PhoneNumberConfiguration) {
		return nil, false
	}
	return o.PhoneNumberConfiguration, true
}

// HasPhoneNumberConfiguration returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasPhoneNumberConfiguration() bool {
	if o != nil && !IsNil(o.PhoneNumberConfiguration) {
		return true
	}

	return false
}

// SetPhoneNumberConfiguration gets a reference to the given PortingOrderPhoneNumberConfiguration and assigns it to the PhoneNumberConfiguration field.
func (o *UpdatePortingOrder) SetPhoneNumberConfiguration(v PortingOrderPhoneNumberConfiguration) {
	o.PhoneNumberConfiguration = &v
}

// GetRequirementGroupId returns the RequirementGroupId field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetRequirementGroupId() string {
	if o == nil || IsNil(o.RequirementGroupId) {
		var ret string
		return ret
	}
	return *o.RequirementGroupId
}

// GetRequirementGroupIdOk returns a tuple with the RequirementGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetRequirementGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequirementGroupId) {
		return nil, false
	}
	return o.RequirementGroupId, true
}

// HasRequirementGroupId returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasRequirementGroupId() bool {
	if o != nil && !IsNil(o.RequirementGroupId) {
		return true
	}

	return false
}

// SetRequirementGroupId gets a reference to the given string and assigns it to the RequirementGroupId field.
func (o *UpdatePortingOrder) SetRequirementGroupId(v string) {
	o.RequirementGroupId = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetRequirements() []UpdatePortingOrderRequirement {
	if o == nil || IsNil(o.Requirements) {
		var ret []UpdatePortingOrderRequirement
		return ret
	}
	return o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetRequirementsOk() ([]UpdatePortingOrderRequirement, bool) {
	if o == nil || IsNil(o.Requirements) {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasRequirements() bool {
	if o != nil && !IsNil(o.Requirements) {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given []UpdatePortingOrderRequirement and assigns it to the Requirements field.
func (o *UpdatePortingOrder) SetRequirements(v []UpdatePortingOrderRequirement) {
	o.Requirements = v
}

// GetUserFeedback returns the UserFeedback field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetUserFeedback() PortingOrderUserFeedback {
	if o == nil || IsNil(o.UserFeedback) {
		var ret PortingOrderUserFeedback
		return ret
	}
	return *o.UserFeedback
}

// GetUserFeedbackOk returns a tuple with the UserFeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetUserFeedbackOk() (*PortingOrderUserFeedback, bool) {
	if o == nil || IsNil(o.UserFeedback) {
		return nil, false
	}
	return o.UserFeedback, true
}

// HasUserFeedback returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasUserFeedback() bool {
	if o != nil && !IsNil(o.UserFeedback) {
		return true
	}

	return false
}

// SetUserFeedback gets a reference to the given PortingOrderUserFeedback and assigns it to the UserFeedback field.
func (o *UpdatePortingOrder) SetUserFeedback(v PortingOrderUserFeedback) {
	o.UserFeedback = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookUrl) {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasWebhookUrl() bool {
	if o != nil && !IsNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *UpdatePortingOrder) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetCustomerReference returns the CustomerReference field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetCustomerReference() string {
	if o == nil || IsNil(o.CustomerReference) {
		var ret string
		return ret
	}
	return *o.CustomerReference
}

// GetCustomerReferenceOk returns a tuple with the CustomerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetCustomerReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReference) {
		return nil, false
	}
	return o.CustomerReference, true
}

// HasCustomerReference returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasCustomerReference() bool {
	if o != nil && !IsNil(o.CustomerReference) {
		return true
	}

	return false
}

// SetCustomerReference gets a reference to the given string and assigns it to the CustomerReference field.
func (o *UpdatePortingOrder) SetCustomerReference(v string) {
	o.CustomerReference = &v
}

// GetMessaging returns the Messaging field value if set, zero value otherwise.
func (o *UpdatePortingOrder) GetMessaging() UpdatePortingOrderMessaging {
	if o == nil || IsNil(o.Messaging) {
		var ret UpdatePortingOrderMessaging
		return ret
	}
	return *o.Messaging
}

// GetMessagingOk returns a tuple with the Messaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrder) GetMessagingOk() (*UpdatePortingOrderMessaging, bool) {
	if o == nil || IsNil(o.Messaging) {
		return nil, false
	}
	return o.Messaging, true
}

// HasMessaging returns a boolean if a field has been set.
func (o *UpdatePortingOrder) HasMessaging() bool {
	if o != nil && !IsNil(o.Messaging) {
		return true
	}

	return false
}

// SetMessaging gets a reference to the given UpdatePortingOrderMessaging and assigns it to the Messaging field.
func (o *UpdatePortingOrder) SetMessaging(v UpdatePortingOrderMessaging) {
	o.Messaging = &v
}

func (o UpdatePortingOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePortingOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Misc) {
		toSerialize["misc"] = o.Misc
	}
	if !IsNil(o.EndUser) {
		toSerialize["end_user"] = o.EndUser
	}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	if !IsNil(o.ActivationSettings) {
		toSerialize["activation_settings"] = o.ActivationSettings
	}
	if !IsNil(o.PhoneNumberConfiguration) {
		toSerialize["phone_number_configuration"] = o.PhoneNumberConfiguration
	}
	if !IsNil(o.RequirementGroupId) {
		toSerialize["requirement_group_id"] = o.RequirementGroupId
	}
	if !IsNil(o.Requirements) {
		toSerialize["requirements"] = o.Requirements
	}
	if !IsNil(o.UserFeedback) {
		toSerialize["user_feedback"] = o.UserFeedback
	}
	if !IsNil(o.WebhookUrl) {
		toSerialize["webhook_url"] = o.WebhookUrl
	}
	if !IsNil(o.CustomerReference) {
		toSerialize["customer_reference"] = o.CustomerReference
	}
	if !IsNil(o.Messaging) {
		toSerialize["messaging"] = o.Messaging
	}
	return toSerialize, nil
}

type NullableUpdatePortingOrder struct {
	value *UpdatePortingOrder
	isSet bool
}

func (v NullableUpdatePortingOrder) Get() *UpdatePortingOrder {
	return v.value
}

func (v *NullableUpdatePortingOrder) Set(val *UpdatePortingOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePortingOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePortingOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePortingOrder(val *UpdatePortingOrder) *NullableUpdatePortingOrder {
	return &NullableUpdatePortingOrder{value: val, isSet: true}
}

func (v NullableUpdatePortingOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePortingOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



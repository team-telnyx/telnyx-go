/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the DialogflowConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialogflowConnection{}

// DialogflowConnection struct for DialogflowConnection
type DialogflowConnection struct {
	RecordType *string `json:"record_type,omitempty"`
	// Uniquely identifies a Telnyx application (Call Control).
	ConnectionId *string `json:"connection_id,omitempty"`
	// The id of a configured conversation profile on your Dialogflow account. (If you use Dialogflow CX, this param is required)
	ConversationProfileId *string `json:"conversation_profile_id,omitempty"`
	// Which Dialogflow environment will be used.
	Environment *string `json:"environment,omitempty"`
	// The JSON map to connect your Dialoglow account.
	ServiceAccount *string `json:"service_account,omitempty"`
}

// NewDialogflowConnection instantiates a new DialogflowConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDialogflowConnection() *DialogflowConnection {
	this := DialogflowConnection{}
	return &this
}

// NewDialogflowConnectionWithDefaults instantiates a new DialogflowConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialogflowConnectionWithDefaults() *DialogflowConnection {
	this := DialogflowConnection{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *DialogflowConnection) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogflowConnection) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *DialogflowConnection) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *DialogflowConnection) SetRecordType(v string) {
	o.RecordType = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *DialogflowConnection) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogflowConnection) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *DialogflowConnection) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *DialogflowConnection) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetConversationProfileId returns the ConversationProfileId field value if set, zero value otherwise.
func (o *DialogflowConnection) GetConversationProfileId() string {
	if o == nil || IsNil(o.ConversationProfileId) {
		var ret string
		return ret
	}
	return *o.ConversationProfileId
}

// GetConversationProfileIdOk returns a tuple with the ConversationProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogflowConnection) GetConversationProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationProfileId) {
		return nil, false
	}
	return o.ConversationProfileId, true
}

// HasConversationProfileId returns a boolean if a field has been set.
func (o *DialogflowConnection) HasConversationProfileId() bool {
	if o != nil && !IsNil(o.ConversationProfileId) {
		return true
	}

	return false
}

// SetConversationProfileId gets a reference to the given string and assigns it to the ConversationProfileId field.
func (o *DialogflowConnection) SetConversationProfileId(v string) {
	o.ConversationProfileId = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *DialogflowConnection) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogflowConnection) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *DialogflowConnection) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *DialogflowConnection) SetEnvironment(v string) {
	o.Environment = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *DialogflowConnection) GetServiceAccount() string {
	if o == nil || IsNil(o.ServiceAccount) {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogflowConnection) GetServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccount) {
		return nil, false
	}
	return o.ServiceAccount, true
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *DialogflowConnection) HasServiceAccount() bool {
	if o != nil && !IsNil(o.ServiceAccount) {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *DialogflowConnection) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

func (o DialogflowConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialogflowConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.ConversationProfileId) {
		toSerialize["conversation_profile_id"] = o.ConversationProfileId
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.ServiceAccount) {
		toSerialize["service_account"] = o.ServiceAccount
	}
	return toSerialize, nil
}

type NullableDialogflowConnection struct {
	value *DialogflowConnection
	isSet bool
}

func (v NullableDialogflowConnection) Get() *DialogflowConnection {
	return v.value
}

func (v *NullableDialogflowConnection) Set(val *DialogflowConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableDialogflowConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableDialogflowConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialogflowConnection(val *DialogflowConnection) *NullableDialogflowConnection {
	return &NullableDialogflowConnection{value: val, isSet: true}
}

func (v NullableDialogflowConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialogflowConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingOrderEndUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderEndUser{}

// PortingOrderEndUser struct for PortingOrderEndUser
type PortingOrderEndUser struct {
	Admin *PortingOrderEndUserAdmin `json:"admin,omitempty"`
	Location *PortingOrderEndUserLocation `json:"location,omitempty"`
}

// NewPortingOrderEndUser instantiates a new PortingOrderEndUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderEndUser() *PortingOrderEndUser {
	this := PortingOrderEndUser{}
	return &this
}

// NewPortingOrderEndUserWithDefaults instantiates a new PortingOrderEndUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderEndUserWithDefaults() *PortingOrderEndUser {
	this := PortingOrderEndUser{}
	return &this
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *PortingOrderEndUser) GetAdmin() PortingOrderEndUserAdmin {
	if o == nil || IsNil(o.Admin) {
		var ret PortingOrderEndUserAdmin
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderEndUser) GetAdminOk() (*PortingOrderEndUserAdmin, bool) {
	if o == nil || IsNil(o.Admin) {
		return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *PortingOrderEndUser) HasAdmin() bool {
	if o != nil && !IsNil(o.Admin) {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given PortingOrderEndUserAdmin and assigns it to the Admin field.
func (o *PortingOrderEndUser) SetAdmin(v PortingOrderEndUserAdmin) {
	o.Admin = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PortingOrderEndUser) GetLocation() PortingOrderEndUserLocation {
	if o == nil || IsNil(o.Location) {
		var ret PortingOrderEndUserLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderEndUser) GetLocationOk() (*PortingOrderEndUserLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PortingOrderEndUser) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given PortingOrderEndUserLocation and assigns it to the Location field.
func (o *PortingOrderEndUser) SetLocation(v PortingOrderEndUserLocation) {
	o.Location = &v
}

func (o PortingOrderEndUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderEndUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Admin) {
		toSerialize["admin"] = o.Admin
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullablePortingOrderEndUser struct {
	value *PortingOrderEndUser
	isSet bool
}

func (v NullablePortingOrderEndUser) Get() *PortingOrderEndUser {
	return v.value
}

func (v *NullablePortingOrderEndUser) Set(val *PortingOrderEndUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderEndUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderEndUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderEndUser(val *PortingOrderEndUser) *NullablePortingOrderEndUser {
	return &NullablePortingOrderEndUser{value: val, isSet: true}
}

func (v NullablePortingOrderEndUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderEndUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



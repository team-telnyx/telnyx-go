/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the BulkSIMCardActionDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSIMCardActionDetailed{}

// BulkSIMCardActionDetailed struct for BulkSIMCardActionDetailed
type BulkSIMCardActionDetailed struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	// The operation type. It can be one of the following: <br/> <ul> <li><code>bulk_set_public_ips</code> - set a public IP for each specified SIM card.</li> </ul>
	ActionType *string `json:"action_type,omitempty"`
	// A JSON object representation of the bulk action payload.
	Settings map[string]interface{} `json:"settings,omitempty"`
	SimCardActionsSummary []SIMCardActionsSummary `json:"sim_card_actions_summary,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewBulkSIMCardActionDetailed instantiates a new BulkSIMCardActionDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSIMCardActionDetailed() *BulkSIMCardActionDetailed {
	this := BulkSIMCardActionDetailed{}
	return &this
}

// NewBulkSIMCardActionDetailedWithDefaults instantiates a new BulkSIMCardActionDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSIMCardActionDetailedWithDefaults() *BulkSIMCardActionDetailed {
	this := BulkSIMCardActionDetailed{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BulkSIMCardActionDetailed) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *BulkSIMCardActionDetailed) SetRecordType(v string) {
	o.RecordType = &v
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetActionType() string {
	if o == nil || IsNil(o.ActionType) {
		var ret string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetActionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActionType) {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasActionType() bool {
	if o != nil && !IsNil(o.ActionType) {
		return true
	}

	return false
}

// SetActionType gets a reference to the given string and assigns it to the ActionType field.
func (o *BulkSIMCardActionDetailed) SetActionType(v string) {
	o.ActionType = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetSettings() map[string]interface{} {
	if o == nil || IsNil(o.Settings) {
		var ret map[string]interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return map[string]interface{}{}, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]interface{} and assigns it to the Settings field.
func (o *BulkSIMCardActionDetailed) SetSettings(v map[string]interface{}) {
	o.Settings = v
}

// GetSimCardActionsSummary returns the SimCardActionsSummary field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetSimCardActionsSummary() []SIMCardActionsSummary {
	if o == nil || IsNil(o.SimCardActionsSummary) {
		var ret []SIMCardActionsSummary
		return ret
	}
	return o.SimCardActionsSummary
}

// GetSimCardActionsSummaryOk returns a tuple with the SimCardActionsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetSimCardActionsSummaryOk() ([]SIMCardActionsSummary, bool) {
	if o == nil || IsNil(o.SimCardActionsSummary) {
		return nil, false
	}
	return o.SimCardActionsSummary, true
}

// HasSimCardActionsSummary returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasSimCardActionsSummary() bool {
	if o != nil && !IsNil(o.SimCardActionsSummary) {
		return true
	}

	return false
}

// SetSimCardActionsSummary gets a reference to the given []SIMCardActionsSummary and assigns it to the SimCardActionsSummary field.
func (o *BulkSIMCardActionDetailed) SetSimCardActionsSummary(v []SIMCardActionsSummary) {
	o.SimCardActionsSummary = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *BulkSIMCardActionDetailed) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *BulkSIMCardActionDetailed) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSIMCardActionDetailed) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BulkSIMCardActionDetailed) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *BulkSIMCardActionDetailed) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o BulkSIMCardActionDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSIMCardActionDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.ActionType) {
		toSerialize["action_type"] = o.ActionType
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.SimCardActionsSummary) {
		toSerialize["sim_card_actions_summary"] = o.SimCardActionsSummary
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableBulkSIMCardActionDetailed struct {
	value *BulkSIMCardActionDetailed
	isSet bool
}

func (v NullableBulkSIMCardActionDetailed) Get() *BulkSIMCardActionDetailed {
	return v.value
}

func (v *NullableBulkSIMCardActionDetailed) Set(val *BulkSIMCardActionDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSIMCardActionDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSIMCardActionDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSIMCardActionDetailed(val *BulkSIMCardActionDetailed) *NullableBulkSIMCardActionDetailed {
	return &NullableBulkSIMCardActionDetailed{value: val, isSet: true}
}

func (v NullableBulkSIMCardActionDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSIMCardActionDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



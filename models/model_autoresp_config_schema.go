/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AutorespConfigSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutorespConfigSchema{}

// AutorespConfigSchema struct for AutorespConfigSchema
type AutorespConfigSchema struct {
	Op string `json:"op"`
	Keywords []string `json:"keywords"`
	RespText *string `json:"resp_text,omitempty"`
	CountryCode string `json:"country_code"`
	Id string `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _AutorespConfigSchema AutorespConfigSchema

// NewAutorespConfigSchema instantiates a new AutorespConfigSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutorespConfigSchema(op string, keywords []string, countryCode string, id string, createdAt time.Time, updatedAt time.Time) *AutorespConfigSchema {
	this := AutorespConfigSchema{}
	this.Op = op
	this.Keywords = keywords
	this.CountryCode = countryCode
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewAutorespConfigSchemaWithDefaults instantiates a new AutorespConfigSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutorespConfigSchemaWithDefaults() *AutorespConfigSchema {
	this := AutorespConfigSchema{}
	return &this
}

// GetOp returns the Op field value
func (o *AutorespConfigSchema) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *AutorespConfigSchema) SetOp(v string) {
	o.Op = v
}

// GetKeywords returns the Keywords field value
func (o *AutorespConfigSchema) GetKeywords() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetKeywordsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keywords, true
}

// SetKeywords sets field value
func (o *AutorespConfigSchema) SetKeywords(v []string) {
	o.Keywords = v
}

// GetRespText returns the RespText field value if set, zero value otherwise.
func (o *AutorespConfigSchema) GetRespText() string {
	if o == nil || IsNil(o.RespText) {
		var ret string
		return ret
	}
	return *o.RespText
}

// GetRespTextOk returns a tuple with the RespText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetRespTextOk() (*string, bool) {
	if o == nil || IsNil(o.RespText) {
		return nil, false
	}
	return o.RespText, true
}

// HasRespText returns a boolean if a field has been set.
func (o *AutorespConfigSchema) HasRespText() bool {
	if o != nil && !IsNil(o.RespText) {
		return true
	}

	return false
}

// SetRespText gets a reference to the given string and assigns it to the RespText field.
func (o *AutorespConfigSchema) SetRespText(v string) {
	o.RespText = &v
}

// GetCountryCode returns the CountryCode field value
func (o *AutorespConfigSchema) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *AutorespConfigSchema) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetId returns the Id field value
func (o *AutorespConfigSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutorespConfigSchema) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AutorespConfigSchema) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AutorespConfigSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AutorespConfigSchema) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AutorespConfigSchema) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AutorespConfigSchema) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o AutorespConfigSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutorespConfigSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["keywords"] = o.Keywords
	if !IsNil(o.RespText) {
		toSerialize["resp_text"] = o.RespText
	}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *AutorespConfigSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"op",
		"keywords",
		"country_code",
		"id",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutorespConfigSchema := _AutorespConfigSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutorespConfigSchema)

	if err != nil {
		return err
	}

	*o = AutorespConfigSchema(varAutorespConfigSchema)

	return err
}

type NullableAutorespConfigSchema struct {
	value *AutorespConfigSchema
	isSet bool
}

func (v NullableAutorespConfigSchema) Get() *AutorespConfigSchema {
	return v.value
}

func (v *NullableAutorespConfigSchema) Set(val *AutorespConfigSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAutorespConfigSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAutorespConfigSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutorespConfigSchema(val *AutorespConfigSchema) *NullableAutorespConfigSchema {
	return &NullableAutorespConfigSchema{value: val, isSet: true}
}

func (v NullableAutorespConfigSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutorespConfigSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



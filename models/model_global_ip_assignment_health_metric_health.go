/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GlobalIpAssignmentHealthMetricHealth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIpAssignmentHealthMetricHealth{}

// GlobalIpAssignmentHealthMetricHealth struct for GlobalIpAssignmentHealthMetricHealth
type GlobalIpAssignmentHealthMetricHealth struct {
	// The number of successful health checks.
	Pass *float32 `json:"pass,omitempty"`
	// The number of failed health checks.
	Fail *float32 `json:"fail,omitempty"`
}

// NewGlobalIpAssignmentHealthMetricHealth instantiates a new GlobalIpAssignmentHealthMetricHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIpAssignmentHealthMetricHealth() *GlobalIpAssignmentHealthMetricHealth {
	this := GlobalIpAssignmentHealthMetricHealth{}
	return &this
}

// NewGlobalIpAssignmentHealthMetricHealthWithDefaults instantiates a new GlobalIpAssignmentHealthMetricHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIpAssignmentHealthMetricHealthWithDefaults() *GlobalIpAssignmentHealthMetricHealth {
	this := GlobalIpAssignmentHealthMetricHealth{}
	return &this
}

// GetPass returns the Pass field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetricHealth) GetPass() float32 {
	if o == nil || IsNil(o.Pass) {
		var ret float32
		return ret
	}
	return *o.Pass
}

// GetPassOk returns a tuple with the Pass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetricHealth) GetPassOk() (*float32, bool) {
	if o == nil || IsNil(o.Pass) {
		return nil, false
	}
	return o.Pass, true
}

// HasPass returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetricHealth) HasPass() bool {
	if o != nil && !IsNil(o.Pass) {
		return true
	}

	return false
}

// SetPass gets a reference to the given float32 and assigns it to the Pass field.
func (o *GlobalIpAssignmentHealthMetricHealth) SetPass(v float32) {
	o.Pass = &v
}

// GetFail returns the Fail field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetricHealth) GetFail() float32 {
	if o == nil || IsNil(o.Fail) {
		var ret float32
		return ret
	}
	return *o.Fail
}

// GetFailOk returns a tuple with the Fail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetricHealth) GetFailOk() (*float32, bool) {
	if o == nil || IsNil(o.Fail) {
		return nil, false
	}
	return o.Fail, true
}

// HasFail returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetricHealth) HasFail() bool {
	if o != nil && !IsNil(o.Fail) {
		return true
	}

	return false
}

// SetFail gets a reference to the given float32 and assigns it to the Fail field.
func (o *GlobalIpAssignmentHealthMetricHealth) SetFail(v float32) {
	o.Fail = &v
}

func (o GlobalIpAssignmentHealthMetricHealth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIpAssignmentHealthMetricHealth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pass) {
		toSerialize["pass"] = o.Pass
	}
	if !IsNil(o.Fail) {
		toSerialize["fail"] = o.Fail
	}
	return toSerialize, nil
}

type NullableGlobalIpAssignmentHealthMetricHealth struct {
	value *GlobalIpAssignmentHealthMetricHealth
	isSet bool
}

func (v NullableGlobalIpAssignmentHealthMetricHealth) Get() *GlobalIpAssignmentHealthMetricHealth {
	return v.value
}

func (v *NullableGlobalIpAssignmentHealthMetricHealth) Set(val *GlobalIpAssignmentHealthMetricHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIpAssignmentHealthMetricHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIpAssignmentHealthMetricHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIpAssignmentHealthMetricHealth(val *GlobalIpAssignmentHealthMetricHealth) *NullableGlobalIpAssignmentHealthMetricHealth {
	return &NullableGlobalIpAssignmentHealthMetricHealth{value: val, isSet: true}
}

func (v NullableGlobalIpAssignmentHealthMetricHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIpAssignmentHealthMetricHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



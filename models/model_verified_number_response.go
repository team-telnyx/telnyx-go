/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the VerifiedNumberResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifiedNumberResponse{}

// VerifiedNumberResponse struct for VerifiedNumberResponse
type VerifiedNumberResponse struct {
	PhoneNumber *string `json:"phone_number,omitempty"`
	RecordType *VerifiedNumberRecordType `json:"record_type,omitempty"`
	VerifiedAt *string `json:"verified_at,omitempty"`
}

// NewVerifiedNumberResponse instantiates a new VerifiedNumberResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifiedNumberResponse() *VerifiedNumberResponse {
	this := VerifiedNumberResponse{}
	return &this
}

// NewVerifiedNumberResponseWithDefaults instantiates a new VerifiedNumberResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifiedNumberResponseWithDefaults() *VerifiedNumberResponse {
	this := VerifiedNumberResponse{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *VerifiedNumberResponse) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifiedNumberResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *VerifiedNumberResponse) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *VerifiedNumberResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *VerifiedNumberResponse) GetRecordType() VerifiedNumberRecordType {
	if o == nil || IsNil(o.RecordType) {
		var ret VerifiedNumberRecordType
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifiedNumberResponse) GetRecordTypeOk() (*VerifiedNumberRecordType, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *VerifiedNumberResponse) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given VerifiedNumberRecordType and assigns it to the RecordType field.
func (o *VerifiedNumberResponse) SetRecordType(v VerifiedNumberRecordType) {
	o.RecordType = &v
}

// GetVerifiedAt returns the VerifiedAt field value if set, zero value otherwise.
func (o *VerifiedNumberResponse) GetVerifiedAt() string {
	if o == nil || IsNil(o.VerifiedAt) {
		var ret string
		return ret
	}
	return *o.VerifiedAt
}

// GetVerifiedAtOk returns a tuple with the VerifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifiedNumberResponse) GetVerifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.VerifiedAt) {
		return nil, false
	}
	return o.VerifiedAt, true
}

// HasVerifiedAt returns a boolean if a field has been set.
func (o *VerifiedNumberResponse) HasVerifiedAt() bool {
	if o != nil && !IsNil(o.VerifiedAt) {
		return true
	}

	return false
}

// SetVerifiedAt gets a reference to the given string and assigns it to the VerifiedAt field.
func (o *VerifiedNumberResponse) SetVerifiedAt(v string) {
	o.VerifiedAt = &v
}

func (o VerifiedNumberResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifiedNumberResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.VerifiedAt) {
		toSerialize["verified_at"] = o.VerifiedAt
	}
	return toSerialize, nil
}

type NullableVerifiedNumberResponse struct {
	value *VerifiedNumberResponse
	isSet bool
}

func (v NullableVerifiedNumberResponse) Get() *VerifiedNumberResponse {
	return v.value
}

func (v *NullableVerifiedNumberResponse) Set(val *VerifiedNumberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifiedNumberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifiedNumberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifiedNumberResponse(val *VerifiedNumberResponse) *NullableVerifiedNumberResponse {
	return &NullableVerifiedNumberResponse{value: val, isSet: true}
}

func (v NullableVerifiedNumberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifiedNumberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the GlobalIpAssignmentHealthMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIpAssignmentHealthMetric{}

// GlobalIpAssignmentHealthMetric struct for GlobalIpAssignmentHealthMetric
type GlobalIpAssignmentHealthMetric struct {
	// The timestamp of the metric.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	GlobalIp *GlobalIpAssignmentHealthMetricGlobalIp `json:"global_ip,omitempty"`
	GlobalIpAssignment *GlobalIpAssignmentHealthMetricGlobalIpAssignment `json:"global_ip_assignment,omitempty"`
	Health *GlobalIpAssignmentHealthMetricHealth `json:"health,omitempty"`
}

// NewGlobalIpAssignmentHealthMetric instantiates a new GlobalIpAssignmentHealthMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIpAssignmentHealthMetric() *GlobalIpAssignmentHealthMetric {
	this := GlobalIpAssignmentHealthMetric{}
	return &this
}

// NewGlobalIpAssignmentHealthMetricWithDefaults instantiates a new GlobalIpAssignmentHealthMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIpAssignmentHealthMetricWithDefaults() *GlobalIpAssignmentHealthMetric {
	this := GlobalIpAssignmentHealthMetric{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetric) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetric) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetric) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *GlobalIpAssignmentHealthMetric) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetGlobalIp returns the GlobalIp field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetric) GetGlobalIp() GlobalIpAssignmentHealthMetricGlobalIp {
	if o == nil || IsNil(o.GlobalIp) {
		var ret GlobalIpAssignmentHealthMetricGlobalIp
		return ret
	}
	return *o.GlobalIp
}

// GetGlobalIpOk returns a tuple with the GlobalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetric) GetGlobalIpOk() (*GlobalIpAssignmentHealthMetricGlobalIp, bool) {
	if o == nil || IsNil(o.GlobalIp) {
		return nil, false
	}
	return o.GlobalIp, true
}

// HasGlobalIp returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetric) HasGlobalIp() bool {
	if o != nil && !IsNil(o.GlobalIp) {
		return true
	}

	return false
}

// SetGlobalIp gets a reference to the given GlobalIpAssignmentHealthMetricGlobalIp and assigns it to the GlobalIp field.
func (o *GlobalIpAssignmentHealthMetric) SetGlobalIp(v GlobalIpAssignmentHealthMetricGlobalIp) {
	o.GlobalIp = &v
}

// GetGlobalIpAssignment returns the GlobalIpAssignment field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetric) GetGlobalIpAssignment() GlobalIpAssignmentHealthMetricGlobalIpAssignment {
	if o == nil || IsNil(o.GlobalIpAssignment) {
		var ret GlobalIpAssignmentHealthMetricGlobalIpAssignment
		return ret
	}
	return *o.GlobalIpAssignment
}

// GetGlobalIpAssignmentOk returns a tuple with the GlobalIpAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetric) GetGlobalIpAssignmentOk() (*GlobalIpAssignmentHealthMetricGlobalIpAssignment, bool) {
	if o == nil || IsNil(o.GlobalIpAssignment) {
		return nil, false
	}
	return o.GlobalIpAssignment, true
}

// HasGlobalIpAssignment returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetric) HasGlobalIpAssignment() bool {
	if o != nil && !IsNil(o.GlobalIpAssignment) {
		return true
	}

	return false
}

// SetGlobalIpAssignment gets a reference to the given GlobalIpAssignmentHealthMetricGlobalIpAssignment and assigns it to the GlobalIpAssignment field.
func (o *GlobalIpAssignmentHealthMetric) SetGlobalIpAssignment(v GlobalIpAssignmentHealthMetricGlobalIpAssignment) {
	o.GlobalIpAssignment = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *GlobalIpAssignmentHealthMetric) GetHealth() GlobalIpAssignmentHealthMetricHealth {
	if o == nil || IsNil(o.Health) {
		var ret GlobalIpAssignmentHealthMetricHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentHealthMetric) GetHealthOk() (*GlobalIpAssignmentHealthMetricHealth, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *GlobalIpAssignmentHealthMetric) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given GlobalIpAssignmentHealthMetricHealth and assigns it to the Health field.
func (o *GlobalIpAssignmentHealthMetric) SetHealth(v GlobalIpAssignmentHealthMetricHealth) {
	o.Health = &v
}

func (o GlobalIpAssignmentHealthMetric) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIpAssignmentHealthMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.GlobalIp) {
		toSerialize["global_ip"] = o.GlobalIp
	}
	if !IsNil(o.GlobalIpAssignment) {
		toSerialize["global_ip_assignment"] = o.GlobalIpAssignment
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	return toSerialize, nil
}

type NullableGlobalIpAssignmentHealthMetric struct {
	value *GlobalIpAssignmentHealthMetric
	isSet bool
}

func (v NullableGlobalIpAssignmentHealthMetric) Get() *GlobalIpAssignmentHealthMetric {
	return v.value
}

func (v *NullableGlobalIpAssignmentHealthMetric) Set(val *GlobalIpAssignmentHealthMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIpAssignmentHealthMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIpAssignmentHealthMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIpAssignmentHealthMetric(val *GlobalIpAssignmentHealthMetric) *NullableGlobalIpAssignmentHealthMetric {
	return &NullableGlobalIpAssignmentHealthMetric{value: val, isSet: true}
}

func (v NullableGlobalIpAssignmentHealthMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIpAssignmentHealthMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingOrderActivationSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderActivationSettings{}

// PortingOrderActivationSettings struct for PortingOrderActivationSettings
type PortingOrderActivationSettings struct {
	// ISO 8601 formatted Date/Time requested for the FOC date
	FocDatetimeRequested *time.Time `json:"foc_datetime_requested,omitempty"`
	// ISO 8601 formatted Date/Time of the FOC date
	FocDatetimeActual *time.Time `json:"foc_datetime_actual,omitempty"`
	// Indicates whether this porting order is eligible for FastPort
	FastPortEligible *bool `json:"fast_port_eligible,omitempty"`
	ActivationStatus *PortingOrderActivationStatus `json:"activation_status,omitempty"`
}

// NewPortingOrderActivationSettings instantiates a new PortingOrderActivationSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderActivationSettings() *PortingOrderActivationSettings {
	this := PortingOrderActivationSettings{}
	return &this
}

// NewPortingOrderActivationSettingsWithDefaults instantiates a new PortingOrderActivationSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderActivationSettingsWithDefaults() *PortingOrderActivationSettings {
	this := PortingOrderActivationSettings{}
	return &this
}

// GetFocDatetimeRequested returns the FocDatetimeRequested field value if set, zero value otherwise.
func (o *PortingOrderActivationSettings) GetFocDatetimeRequested() time.Time {
	if o == nil || IsNil(o.FocDatetimeRequested) {
		var ret time.Time
		return ret
	}
	return *o.FocDatetimeRequested
}

// GetFocDatetimeRequestedOk returns a tuple with the FocDatetimeRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderActivationSettings) GetFocDatetimeRequestedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FocDatetimeRequested) {
		return nil, false
	}
	return o.FocDatetimeRequested, true
}

// HasFocDatetimeRequested returns a boolean if a field has been set.
func (o *PortingOrderActivationSettings) HasFocDatetimeRequested() bool {
	if o != nil && !IsNil(o.FocDatetimeRequested) {
		return true
	}

	return false
}

// SetFocDatetimeRequested gets a reference to the given time.Time and assigns it to the FocDatetimeRequested field.
func (o *PortingOrderActivationSettings) SetFocDatetimeRequested(v time.Time) {
	o.FocDatetimeRequested = &v
}

// GetFocDatetimeActual returns the FocDatetimeActual field value if set, zero value otherwise.
func (o *PortingOrderActivationSettings) GetFocDatetimeActual() time.Time {
	if o == nil || IsNil(o.FocDatetimeActual) {
		var ret time.Time
		return ret
	}
	return *o.FocDatetimeActual
}

// GetFocDatetimeActualOk returns a tuple with the FocDatetimeActual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderActivationSettings) GetFocDatetimeActualOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FocDatetimeActual) {
		return nil, false
	}
	return o.FocDatetimeActual, true
}

// HasFocDatetimeActual returns a boolean if a field has been set.
func (o *PortingOrderActivationSettings) HasFocDatetimeActual() bool {
	if o != nil && !IsNil(o.FocDatetimeActual) {
		return true
	}

	return false
}

// SetFocDatetimeActual gets a reference to the given time.Time and assigns it to the FocDatetimeActual field.
func (o *PortingOrderActivationSettings) SetFocDatetimeActual(v time.Time) {
	o.FocDatetimeActual = &v
}

// GetFastPortEligible returns the FastPortEligible field value if set, zero value otherwise.
func (o *PortingOrderActivationSettings) GetFastPortEligible() bool {
	if o == nil || IsNil(o.FastPortEligible) {
		var ret bool
		return ret
	}
	return *o.FastPortEligible
}

// GetFastPortEligibleOk returns a tuple with the FastPortEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderActivationSettings) GetFastPortEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.FastPortEligible) {
		return nil, false
	}
	return o.FastPortEligible, true
}

// HasFastPortEligible returns a boolean if a field has been set.
func (o *PortingOrderActivationSettings) HasFastPortEligible() bool {
	if o != nil && !IsNil(o.FastPortEligible) {
		return true
	}

	return false
}

// SetFastPortEligible gets a reference to the given bool and assigns it to the FastPortEligible field.
func (o *PortingOrderActivationSettings) SetFastPortEligible(v bool) {
	o.FastPortEligible = &v
}

// GetActivationStatus returns the ActivationStatus field value if set, zero value otherwise.
func (o *PortingOrderActivationSettings) GetActivationStatus() PortingOrderActivationStatus {
	if o == nil || IsNil(o.ActivationStatus) {
		var ret PortingOrderActivationStatus
		return ret
	}
	return *o.ActivationStatus
}

// GetActivationStatusOk returns a tuple with the ActivationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderActivationSettings) GetActivationStatusOk() (*PortingOrderActivationStatus, bool) {
	if o == nil || IsNil(o.ActivationStatus) {
		return nil, false
	}
	return o.ActivationStatus, true
}

// HasActivationStatus returns a boolean if a field has been set.
func (o *PortingOrderActivationSettings) HasActivationStatus() bool {
	if o != nil && !IsNil(o.ActivationStatus) {
		return true
	}

	return false
}

// SetActivationStatus gets a reference to the given PortingOrderActivationStatus and assigns it to the ActivationStatus field.
func (o *PortingOrderActivationSettings) SetActivationStatus(v PortingOrderActivationStatus) {
	o.ActivationStatus = &v
}

func (o PortingOrderActivationSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderActivationSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FocDatetimeRequested) {
		toSerialize["foc_datetime_requested"] = o.FocDatetimeRequested
	}
	if !IsNil(o.FocDatetimeActual) {
		toSerialize["foc_datetime_actual"] = o.FocDatetimeActual
	}
	if !IsNil(o.FastPortEligible) {
		toSerialize["fast_port_eligible"] = o.FastPortEligible
	}
	if !IsNil(o.ActivationStatus) {
		toSerialize["activation_status"] = o.ActivationStatus
	}
	return toSerialize, nil
}

type NullablePortingOrderActivationSettings struct {
	value *PortingOrderActivationSettings
	isSet bool
}

func (v NullablePortingOrderActivationSettings) Get() *PortingOrderActivationSettings {
	return v.value
}

func (v *NullablePortingOrderActivationSettings) Set(val *PortingOrderActivationSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderActivationSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderActivationSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderActivationSettings(val *PortingOrderActivationSettings) *NullablePortingOrderActivationSettings {
	return &NullablePortingOrderActivationSettings{value: val, isSet: true}
}

func (v NullablePortingOrderActivationSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderActivationSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



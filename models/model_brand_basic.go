/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the BrandBasic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandBasic{}

// BrandBasic struct for BrandBasic
type BrandBasic struct {
	// Unique identifier assigned to the brand.
	BrandId *string `json:"brandId,omitempty"`
	// Unique identifier assigned to the brand by the registry.
	TcrBrandId *string `json:"tcrBrandId,omitempty"`
	EntityType *EntityType `json:"entityType,omitempty"`
	IdentityStatus *BrandIdentityStatus `json:"identityStatus,omitempty"`
	// (Required for Non-profit/private/public) Legal company name.
	CompanyName *string `json:"companyName,omitempty"`
	// Display or marketing name of the brand.
	DisplayName *string `json:"displayName,omitempty"`
	// Valid email address of brand support contact.
	Email *string `json:"email,omitempty"`
	// Brand website URL.
	Website *string `json:"website,omitempty"`
	// Failure reasons for brand
	FailureReasons interface{} `json:"failureReasons,omitempty"`
	// Status of the brand
	Status *string `json:"status,omitempty"`
	// Date and time that the brand was created at.
	CreatedAt *string `json:"createdAt,omitempty"`
	// Date and time that the brand was last updated at.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// Number of campaigns associated with the brand
	AssignedCampaingsCount *int32 `json:"assignedCampaingsCount,omitempty"`
}

// NewBrandBasic instantiates a new BrandBasic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandBasic() *BrandBasic {
	this := BrandBasic{}
	return &this
}

// NewBrandBasicWithDefaults instantiates a new BrandBasic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandBasicWithDefaults() *BrandBasic {
	this := BrandBasic{}
	return &this
}

// GetBrandId returns the BrandId field value if set, zero value otherwise.
func (o *BrandBasic) GetBrandId() string {
	if o == nil || IsNil(o.BrandId) {
		var ret string
		return ret
	}
	return *o.BrandId
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetBrandIdOk() (*string, bool) {
	if o == nil || IsNil(o.BrandId) {
		return nil, false
	}
	return o.BrandId, true
}

// HasBrandId returns a boolean if a field has been set.
func (o *BrandBasic) HasBrandId() bool {
	if o != nil && !IsNil(o.BrandId) {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given string and assigns it to the BrandId field.
func (o *BrandBasic) SetBrandId(v string) {
	o.BrandId = &v
}

// GetTcrBrandId returns the TcrBrandId field value if set, zero value otherwise.
func (o *BrandBasic) GetTcrBrandId() string {
	if o == nil || IsNil(o.TcrBrandId) {
		var ret string
		return ret
	}
	return *o.TcrBrandId
}

// GetTcrBrandIdOk returns a tuple with the TcrBrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetTcrBrandIdOk() (*string, bool) {
	if o == nil || IsNil(o.TcrBrandId) {
		return nil, false
	}
	return o.TcrBrandId, true
}

// HasTcrBrandId returns a boolean if a field has been set.
func (o *BrandBasic) HasTcrBrandId() bool {
	if o != nil && !IsNil(o.TcrBrandId) {
		return true
	}

	return false
}

// SetTcrBrandId gets a reference to the given string and assigns it to the TcrBrandId field.
func (o *BrandBasic) SetTcrBrandId(v string) {
	o.TcrBrandId = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *BrandBasic) GetEntityType() EntityType {
	if o == nil || IsNil(o.EntityType) {
		var ret EntityType
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetEntityTypeOk() (*EntityType, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *BrandBasic) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given EntityType and assigns it to the EntityType field.
func (o *BrandBasic) SetEntityType(v EntityType) {
	o.EntityType = &v
}

// GetIdentityStatus returns the IdentityStatus field value if set, zero value otherwise.
func (o *BrandBasic) GetIdentityStatus() BrandIdentityStatus {
	if o == nil || IsNil(o.IdentityStatus) {
		var ret BrandIdentityStatus
		return ret
	}
	return *o.IdentityStatus
}

// GetIdentityStatusOk returns a tuple with the IdentityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetIdentityStatusOk() (*BrandIdentityStatus, bool) {
	if o == nil || IsNil(o.IdentityStatus) {
		return nil, false
	}
	return o.IdentityStatus, true
}

// HasIdentityStatus returns a boolean if a field has been set.
func (o *BrandBasic) HasIdentityStatus() bool {
	if o != nil && !IsNil(o.IdentityStatus) {
		return true
	}

	return false
}

// SetIdentityStatus gets a reference to the given BrandIdentityStatus and assigns it to the IdentityStatus field.
func (o *BrandBasic) SetIdentityStatus(v BrandIdentityStatus) {
	o.IdentityStatus = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *BrandBasic) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *BrandBasic) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *BrandBasic) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *BrandBasic) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *BrandBasic) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *BrandBasic) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BrandBasic) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BrandBasic) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BrandBasic) SetEmail(v string) {
	o.Email = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *BrandBasic) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *BrandBasic) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *BrandBasic) SetWebsite(v string) {
	o.Website = &v
}

// GetFailureReasons returns the FailureReasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BrandBasic) GetFailureReasons() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FailureReasons
}

// GetFailureReasonsOk returns a tuple with the FailureReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BrandBasic) GetFailureReasonsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FailureReasons) {
		return nil, false
	}
	return &o.FailureReasons, true
}

// HasFailureReasons returns a boolean if a field has been set.
func (o *BrandBasic) HasFailureReasons() bool {
	if o != nil && !IsNil(o.FailureReasons) {
		return true
	}

	return false
}

// SetFailureReasons gets a reference to the given interface{} and assigns it to the FailureReasons field.
func (o *BrandBasic) SetFailureReasons(v interface{}) {
	o.FailureReasons = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BrandBasic) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BrandBasic) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BrandBasic) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BrandBasic) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BrandBasic) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *BrandBasic) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *BrandBasic) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BrandBasic) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *BrandBasic) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetAssignedCampaingsCount returns the AssignedCampaingsCount field value if set, zero value otherwise.
func (o *BrandBasic) GetAssignedCampaingsCount() int32 {
	if o == nil || IsNil(o.AssignedCampaingsCount) {
		var ret int32
		return ret
	}
	return *o.AssignedCampaingsCount
}

// GetAssignedCampaingsCountOk returns a tuple with the AssignedCampaingsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandBasic) GetAssignedCampaingsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AssignedCampaingsCount) {
		return nil, false
	}
	return o.AssignedCampaingsCount, true
}

// HasAssignedCampaingsCount returns a boolean if a field has been set.
func (o *BrandBasic) HasAssignedCampaingsCount() bool {
	if o != nil && !IsNil(o.AssignedCampaingsCount) {
		return true
	}

	return false
}

// SetAssignedCampaingsCount gets a reference to the given int32 and assigns it to the AssignedCampaingsCount field.
func (o *BrandBasic) SetAssignedCampaingsCount(v int32) {
	o.AssignedCampaingsCount = &v
}

func (o BrandBasic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandBasic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrandId) {
		toSerialize["brandId"] = o.BrandId
	}
	if !IsNil(o.TcrBrandId) {
		toSerialize["tcrBrandId"] = o.TcrBrandId
	}
	if !IsNil(o.EntityType) {
		toSerialize["entityType"] = o.EntityType
	}
	if !IsNil(o.IdentityStatus) {
		toSerialize["identityStatus"] = o.IdentityStatus
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if o.FailureReasons != nil {
		toSerialize["failureReasons"] = o.FailureReasons
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.AssignedCampaingsCount) {
		toSerialize["assignedCampaingsCount"] = o.AssignedCampaingsCount
	}
	return toSerialize, nil
}

type NullableBrandBasic struct {
	value *BrandBasic
	isSet bool
}

func (v NullableBrandBasic) Get() *BrandBasic {
	return v.value
}

func (v *NullableBrandBasic) Set(val *BrandBasic) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandBasic) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandBasic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandBasic(val *BrandBasic) *NullableBrandBasic {
	return &NullableBrandBasic{value: val, isSet: true}
}

func (v NullableBrandBasic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandBasic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



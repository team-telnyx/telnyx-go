/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the LedgerBillingGroupReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LedgerBillingGroupReport{}

// LedgerBillingGroupReport struct for LedgerBillingGroupReport
type LedgerBillingGroupReport struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Identifies the type of resource.
	Id *string `json:"id,omitempty"`
	// Uniquely identifies the organization that owns the resource.
	OrganizationId *string `json:"organization_id,omitempty"`
	// Status of the ledger billing group report
	Status *string `json:"status,omitempty"`
	// External url of the ledger billing group report, if the status is complete
	ReportUrl NullableString `json:"report_url,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewLedgerBillingGroupReport instantiates a new LedgerBillingGroupReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerBillingGroupReport() *LedgerBillingGroupReport {
	this := LedgerBillingGroupReport{}
	return &this
}

// NewLedgerBillingGroupReportWithDefaults instantiates a new LedgerBillingGroupReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerBillingGroupReportWithDefaults() *LedgerBillingGroupReport {
	this := LedgerBillingGroupReport{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *LedgerBillingGroupReport) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LedgerBillingGroupReport) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *LedgerBillingGroupReport) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LedgerBillingGroupReport) SetStatus(v string) {
	o.Status = &v
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LedgerBillingGroupReport) GetReportUrl() string {
	if o == nil || IsNil(o.ReportUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ReportUrl.Get()
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LedgerBillingGroupReport) GetReportUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReportUrl.Get(), o.ReportUrl.IsSet()
}

// HasReportUrl returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasReportUrl() bool {
	if o != nil && o.ReportUrl.IsSet() {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given NullableString and assigns it to the ReportUrl field.
func (o *LedgerBillingGroupReport) SetReportUrl(v string) {
	o.ReportUrl.Set(&v)
}
// SetReportUrlNil sets the value for ReportUrl to be an explicit nil
func (o *LedgerBillingGroupReport) SetReportUrlNil() {
	o.ReportUrl.Set(nil)
}

// UnsetReportUrl ensures that no value is present for ReportUrl, not even an explicit nil
func (o *LedgerBillingGroupReport) UnsetReportUrl() {
	o.ReportUrl.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *LedgerBillingGroupReport) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LedgerBillingGroupReport) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerBillingGroupReport) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LedgerBillingGroupReport) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *LedgerBillingGroupReport) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o LedgerBillingGroupReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LedgerBillingGroupReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.ReportUrl.IsSet() {
		toSerialize["report_url"] = o.ReportUrl.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableLedgerBillingGroupReport struct {
	value *LedgerBillingGroupReport
	isSet bool
}

func (v NullableLedgerBillingGroupReport) Get() *LedgerBillingGroupReport {
	return v.value
}

func (v *NullableLedgerBillingGroupReport) Set(val *LedgerBillingGroupReport) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerBillingGroupReport) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerBillingGroupReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerBillingGroupReport(val *LedgerBillingGroupReport) *NullableLedgerBillingGroupReport {
	return &NullableLedgerBillingGroupReport{value: val, isSet: true}
}

func (v NullableLedgerBillingGroupReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerBillingGroupReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



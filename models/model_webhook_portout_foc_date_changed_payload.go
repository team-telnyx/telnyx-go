/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the WebhookPortoutFocDateChangedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookPortoutFocDateChangedPayload{}

// WebhookPortoutFocDateChangedPayload The webhook payload for the portout.foc_date_changed event
type WebhookPortoutFocDateChangedPayload struct {
	// Identifies the port-out order that have the FOC date changed.
	Id *string `json:"id,omitempty"`
	// Identifies the organization that port-out order belongs to.
	UserId *string `json:"user_id,omitempty"`
	// ISO 8601 formatted date indicating the new FOC date.
	FocDate *time.Time `json:"foc_date,omitempty"`
}

// NewWebhookPortoutFocDateChangedPayload instantiates a new WebhookPortoutFocDateChangedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookPortoutFocDateChangedPayload() *WebhookPortoutFocDateChangedPayload {
	this := WebhookPortoutFocDateChangedPayload{}
	return &this
}

// NewWebhookPortoutFocDateChangedPayloadWithDefaults instantiates a new WebhookPortoutFocDateChangedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookPortoutFocDateChangedPayloadWithDefaults() *WebhookPortoutFocDateChangedPayload {
	this := WebhookPortoutFocDateChangedPayload{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookPortoutFocDateChangedPayload) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutFocDateChangedPayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookPortoutFocDateChangedPayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookPortoutFocDateChangedPayload) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *WebhookPortoutFocDateChangedPayload) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutFocDateChangedPayload) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *WebhookPortoutFocDateChangedPayload) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *WebhookPortoutFocDateChangedPayload) SetUserId(v string) {
	o.UserId = &v
}

// GetFocDate returns the FocDate field value if set, zero value otherwise.
func (o *WebhookPortoutFocDateChangedPayload) GetFocDate() time.Time {
	if o == nil || IsNil(o.FocDate) {
		var ret time.Time
		return ret
	}
	return *o.FocDate
}

// GetFocDateOk returns a tuple with the FocDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutFocDateChangedPayload) GetFocDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FocDate) {
		return nil, false
	}
	return o.FocDate, true
}

// HasFocDate returns a boolean if a field has been set.
func (o *WebhookPortoutFocDateChangedPayload) HasFocDate() bool {
	if o != nil && !IsNil(o.FocDate) {
		return true
	}

	return false
}

// SetFocDate gets a reference to the given time.Time and assigns it to the FocDate field.
func (o *WebhookPortoutFocDateChangedPayload) SetFocDate(v time.Time) {
	o.FocDate = &v
}

func (o WebhookPortoutFocDateChangedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookPortoutFocDateChangedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.FocDate) {
		toSerialize["foc_date"] = o.FocDate
	}
	return toSerialize, nil
}

type NullableWebhookPortoutFocDateChangedPayload struct {
	value *WebhookPortoutFocDateChangedPayload
	isSet bool
}

func (v NullableWebhookPortoutFocDateChangedPayload) Get() *WebhookPortoutFocDateChangedPayload {
	return v.value
}

func (v *NullableWebhookPortoutFocDateChangedPayload) Set(val *WebhookPortoutFocDateChangedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookPortoutFocDateChangedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookPortoutFocDateChangedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookPortoutFocDateChangedPayload(val *WebhookPortoutFocDateChangedPayload) *NullableWebhookPortoutFocDateChangedPayload {
	return &NullableWebhookPortoutFocDateChangedPayload{value: val, isSet: true}
}

func (v NullableWebhookPortoutFocDateChangedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookPortoutFocDateChangedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



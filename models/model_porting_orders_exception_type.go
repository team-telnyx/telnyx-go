/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingOrdersExceptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrdersExceptionType{}

// PortingOrdersExceptionType struct for PortingOrdersExceptionType
type PortingOrdersExceptionType struct {
	// Identifier of an exception type
	Code *string `json:"code,omitempty"`
	// Description of an exception type
	Description *string `json:"description,omitempty"`
}

// NewPortingOrdersExceptionType instantiates a new PortingOrdersExceptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrdersExceptionType() *PortingOrdersExceptionType {
	this := PortingOrdersExceptionType{}
	return &this
}

// NewPortingOrdersExceptionTypeWithDefaults instantiates a new PortingOrdersExceptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrdersExceptionTypeWithDefaults() *PortingOrdersExceptionType {
	this := PortingOrdersExceptionType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PortingOrdersExceptionType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersExceptionType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PortingOrdersExceptionType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PortingOrdersExceptionType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PortingOrdersExceptionType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersExceptionType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PortingOrdersExceptionType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PortingOrdersExceptionType) SetDescription(v string) {
	o.Description = &v
}

func (o PortingOrdersExceptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrdersExceptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullablePortingOrdersExceptionType struct {
	value *PortingOrdersExceptionType
	isSet bool
}

func (v NullablePortingOrdersExceptionType) Get() *PortingOrdersExceptionType {
	return v.value
}

func (v *NullablePortingOrdersExceptionType) Set(val *PortingOrdersExceptionType) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrdersExceptionType) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrdersExceptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrdersExceptionType(val *PortingOrdersExceptionType) *NullablePortingOrdersExceptionType {
	return &NullablePortingOrdersExceptionType{value: val, isSet: true}
}

func (v NullablePortingOrdersExceptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrdersExceptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



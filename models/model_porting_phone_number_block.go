/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingPhoneNumberBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingPhoneNumberBlock{}

// PortingPhoneNumberBlock struct for PortingPhoneNumberBlock
type PortingPhoneNumberBlock struct {
	// Uniquely identifies this porting phone number block.
	Id *string `json:"id,omitempty"`
	// Specifies the country code for this porting phone number block. It is a two-letter ISO 3166-1 alpha-2 country code.
	CountryCode *string `json:"country_code,omitempty"`
	// Specifies the phone number type for this porting phone number block.
	PhoneNumberType *string `json:"phone_number_type,omitempty"`
	PhoneNumberRange *PortingPhoneNumberBlockPhoneNumberRange `json:"phone_number_range,omitempty"`
	// Specifies the activation ranges for this porting phone number block. The activation range must be within the phone number range and should not overlap with other activation ranges.
	ActivationRanges []PortingPhoneNumberBlockActivationRangesInner `json:"activation_ranges,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPortingPhoneNumberBlock instantiates a new PortingPhoneNumberBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingPhoneNumberBlock() *PortingPhoneNumberBlock {
	this := PortingPhoneNumberBlock{}
	return &this
}

// NewPortingPhoneNumberBlockWithDefaults instantiates a new PortingPhoneNumberBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingPhoneNumberBlockWithDefaults() *PortingPhoneNumberBlock {
	this := PortingPhoneNumberBlock{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortingPhoneNumberBlock) SetId(v string) {
	o.Id = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PortingPhoneNumberBlock) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetPhoneNumberType returns the PhoneNumberType field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetPhoneNumberType() string {
	if o == nil || IsNil(o.PhoneNumberType) {
		var ret string
		return ret
	}
	return *o.PhoneNumberType
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberType) {
		return nil, false
	}
	return o.PhoneNumberType, true
}

// HasPhoneNumberType returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasPhoneNumberType() bool {
	if o != nil && !IsNil(o.PhoneNumberType) {
		return true
	}

	return false
}

// SetPhoneNumberType gets a reference to the given string and assigns it to the PhoneNumberType field.
func (o *PortingPhoneNumberBlock) SetPhoneNumberType(v string) {
	o.PhoneNumberType = &v
}

// GetPhoneNumberRange returns the PhoneNumberRange field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetPhoneNumberRange() PortingPhoneNumberBlockPhoneNumberRange {
	if o == nil || IsNil(o.PhoneNumberRange) {
		var ret PortingPhoneNumberBlockPhoneNumberRange
		return ret
	}
	return *o.PhoneNumberRange
}

// GetPhoneNumberRangeOk returns a tuple with the PhoneNumberRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetPhoneNumberRangeOk() (*PortingPhoneNumberBlockPhoneNumberRange, bool) {
	if o == nil || IsNil(o.PhoneNumberRange) {
		return nil, false
	}
	return o.PhoneNumberRange, true
}

// HasPhoneNumberRange returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasPhoneNumberRange() bool {
	if o != nil && !IsNil(o.PhoneNumberRange) {
		return true
	}

	return false
}

// SetPhoneNumberRange gets a reference to the given PortingPhoneNumberBlockPhoneNumberRange and assigns it to the PhoneNumberRange field.
func (o *PortingPhoneNumberBlock) SetPhoneNumberRange(v PortingPhoneNumberBlockPhoneNumberRange) {
	o.PhoneNumberRange = &v
}

// GetActivationRanges returns the ActivationRanges field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetActivationRanges() []PortingPhoneNumberBlockActivationRangesInner {
	if o == nil || IsNil(o.ActivationRanges) {
		var ret []PortingPhoneNumberBlockActivationRangesInner
		return ret
	}
	return o.ActivationRanges
}

// GetActivationRangesOk returns a tuple with the ActivationRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetActivationRangesOk() ([]PortingPhoneNumberBlockActivationRangesInner, bool) {
	if o == nil || IsNil(o.ActivationRanges) {
		return nil, false
	}
	return o.ActivationRanges, true
}

// HasActivationRanges returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasActivationRanges() bool {
	if o != nil && !IsNil(o.ActivationRanges) {
		return true
	}

	return false
}

// SetActivationRanges gets a reference to the given []PortingPhoneNumberBlockActivationRangesInner and assigns it to the ActivationRanges field.
func (o *PortingPhoneNumberBlock) SetActivationRanges(v []PortingPhoneNumberBlockActivationRangesInner) {
	o.ActivationRanges = v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingPhoneNumberBlock) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PortingPhoneNumberBlock) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PortingPhoneNumberBlock) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumberBlock) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PortingPhoneNumberBlock) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PortingPhoneNumberBlock) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PortingPhoneNumberBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingPhoneNumberBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.PhoneNumberType) {
		toSerialize["phone_number_type"] = o.PhoneNumberType
	}
	if !IsNil(o.PhoneNumberRange) {
		toSerialize["phone_number_range"] = o.PhoneNumberRange
	}
	if !IsNil(o.ActivationRanges) {
		toSerialize["activation_ranges"] = o.ActivationRanges
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePortingPhoneNumberBlock struct {
	value *PortingPhoneNumberBlock
	isSet bool
}

func (v NullablePortingPhoneNumberBlock) Get() *PortingPhoneNumberBlock {
	return v.value
}

func (v *NullablePortingPhoneNumberBlock) Set(val *PortingPhoneNumberBlock) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingPhoneNumberBlock) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingPhoneNumberBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingPhoneNumberBlock(val *PortingPhoneNumberBlock) *NullablePortingPhoneNumberBlock {
	return &NullablePortingPhoneNumberBlock{value: val, isSet: true}
}

func (v NullablePortingPhoneNumberBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingPhoneNumberBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



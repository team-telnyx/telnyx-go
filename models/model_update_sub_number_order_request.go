/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdateSubNumberOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSubNumberOrderRequest{}

// UpdateSubNumberOrderRequest struct for UpdateSubNumberOrderRequest
type UpdateSubNumberOrderRequest struct {
	RegulatoryRequirements []UpdateRegulatoryRequirement `json:"regulatory_requirements,omitempty"`
}

// NewUpdateSubNumberOrderRequest instantiates a new UpdateSubNumberOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubNumberOrderRequest() *UpdateSubNumberOrderRequest {
	this := UpdateSubNumberOrderRequest{}
	return &this
}

// NewUpdateSubNumberOrderRequestWithDefaults instantiates a new UpdateSubNumberOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubNumberOrderRequestWithDefaults() *UpdateSubNumberOrderRequest {
	this := UpdateSubNumberOrderRequest{}
	return &this
}

// GetRegulatoryRequirements returns the RegulatoryRequirements field value if set, zero value otherwise.
func (o *UpdateSubNumberOrderRequest) GetRegulatoryRequirements() []UpdateRegulatoryRequirement {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		var ret []UpdateRegulatoryRequirement
		return ret
	}
	return o.RegulatoryRequirements
}

// GetRegulatoryRequirementsOk returns a tuple with the RegulatoryRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubNumberOrderRequest) GetRegulatoryRequirementsOk() ([]UpdateRegulatoryRequirement, bool) {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		return nil, false
	}
	return o.RegulatoryRequirements, true
}

// HasRegulatoryRequirements returns a boolean if a field has been set.
func (o *UpdateSubNumberOrderRequest) HasRegulatoryRequirements() bool {
	if o != nil && !IsNil(o.RegulatoryRequirements) {
		return true
	}

	return false
}

// SetRegulatoryRequirements gets a reference to the given []UpdateRegulatoryRequirement and assigns it to the RegulatoryRequirements field.
func (o *UpdateSubNumberOrderRequest) SetRegulatoryRequirements(v []UpdateRegulatoryRequirement) {
	o.RegulatoryRequirements = v
}

func (o UpdateSubNumberOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSubNumberOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegulatoryRequirements) {
		toSerialize["regulatory_requirements"] = o.RegulatoryRequirements
	}
	return toSerialize, nil
}

type NullableUpdateSubNumberOrderRequest struct {
	value *UpdateSubNumberOrderRequest
	isSet bool
}

func (v NullableUpdateSubNumberOrderRequest) Get() *UpdateSubNumberOrderRequest {
	return v.value
}

func (v *NullableUpdateSubNumberOrderRequest) Set(val *UpdateSubNumberOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubNumberOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubNumberOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubNumberOrderRequest(val *UpdateSubNumberOrderRequest) *NullableUpdateSubNumberOrderRequest {
	return &NullableUpdateSubNumberOrderRequest{value: val, isSet: true}
}

func (v NullableUpdateSubNumberOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubNumberOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)

// ExternalSipConnection The service that will be consuming this connection.
type ExternalSipConnection string

// List of ExternalSipConnection
const (
	ZOOM ExternalSipConnection = "zoom"
	OPERATOR_CONNECT ExternalSipConnection = "operator_connect"
)

// All allowed values of ExternalSipConnection enum
var AllowedExternalSipConnectionEnumValues = []ExternalSipConnection{
	"zoom",
	"operator_connect",
}

func (v *ExternalSipConnection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExternalSipConnection(value)
	for _, existing := range AllowedExternalSipConnectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExternalSipConnection", value)
}

// NewExternalSipConnectionFromValue returns a pointer to a valid ExternalSipConnection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalSipConnectionFromValue(v string) (*ExternalSipConnection, error) {
	ev := ExternalSipConnection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExternalSipConnection: valid values are %v", v, AllowedExternalSipConnectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalSipConnection) IsValid() bool {
	for _, existing := range AllowedExternalSipConnectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExternalSipConnection value
func (v ExternalSipConnection) Ptr() *ExternalSipConnection {
	return &v
}

type NullableExternalSipConnection struct {
	value *ExternalSipConnection
	isSet bool
}

func (v NullableExternalSipConnection) Get() *ExternalSipConnection {
	return v.value
}

func (v *NullableExternalSipConnection) Set(val *ExternalSipConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalSipConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalSipConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalSipConnection(val *ExternalSipConnection) *NullableExternalSipConnection {
	return &NullableExternalSipConnection{value: val, isSet: true}
}

func (v NullableExternalSipConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalSipConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


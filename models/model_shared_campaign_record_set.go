/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SharedCampaignRecordSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedCampaignRecordSet{}

// SharedCampaignRecordSet struct for SharedCampaignRecordSet
type SharedCampaignRecordSet struct {
	Page *int32 `json:"page,omitempty"`
	Records []SharedCampaign `json:"records,omitempty"`
	TotalRecords *int32 `json:"totalRecords,omitempty"`
}

// NewSharedCampaignRecordSet instantiates a new SharedCampaignRecordSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedCampaignRecordSet() *SharedCampaignRecordSet {
	this := SharedCampaignRecordSet{}
	return &this
}

// NewSharedCampaignRecordSetWithDefaults instantiates a new SharedCampaignRecordSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedCampaignRecordSetWithDefaults() *SharedCampaignRecordSet {
	this := SharedCampaignRecordSet{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *SharedCampaignRecordSet) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedCampaignRecordSet) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *SharedCampaignRecordSet) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *SharedCampaignRecordSet) SetPage(v int32) {
	o.Page = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *SharedCampaignRecordSet) GetRecords() []SharedCampaign {
	if o == nil || IsNil(o.Records) {
		var ret []SharedCampaign
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedCampaignRecordSet) GetRecordsOk() ([]SharedCampaign, bool) {
	if o == nil || IsNil(o.Records) {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *SharedCampaignRecordSet) HasRecords() bool {
	if o != nil && !IsNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []SharedCampaign and assigns it to the Records field.
func (o *SharedCampaignRecordSet) SetRecords(v []SharedCampaign) {
	o.Records = v
}

// GetTotalRecords returns the TotalRecords field value if set, zero value otherwise.
func (o *SharedCampaignRecordSet) GetTotalRecords() int32 {
	if o == nil || IsNil(o.TotalRecords) {
		var ret int32
		return ret
	}
	return *o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedCampaignRecordSet) GetTotalRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRecords) {
		return nil, false
	}
	return o.TotalRecords, true
}

// HasTotalRecords returns a boolean if a field has been set.
func (o *SharedCampaignRecordSet) HasTotalRecords() bool {
	if o != nil && !IsNil(o.TotalRecords) {
		return true
	}

	return false
}

// SetTotalRecords gets a reference to the given int32 and assigns it to the TotalRecords field.
func (o *SharedCampaignRecordSet) SetTotalRecords(v int32) {
	o.TotalRecords = &v
}

func (o SharedCampaignRecordSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedCampaignRecordSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Records) {
		toSerialize["records"] = o.Records
	}
	if !IsNil(o.TotalRecords) {
		toSerialize["totalRecords"] = o.TotalRecords
	}
	return toSerialize, nil
}

type NullableSharedCampaignRecordSet struct {
	value *SharedCampaignRecordSet
	isSet bool
}

func (v NullableSharedCampaignRecordSet) Get() *SharedCampaignRecordSet {
	return v.value
}

func (v *NullableSharedCampaignRecordSet) Set(val *SharedCampaignRecordSet) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedCampaignRecordSet) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedCampaignRecordSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedCampaignRecordSet(val *SharedCampaignRecordSet) *NullableSharedCampaignRecordSet {
	return &NullableSharedCampaignRecordSet{value: val, isSet: true}
}

func (v NullableSharedCampaignRecordSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedCampaignRecordSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CreateExternalConnectionUploadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateExternalConnectionUploadRequest{}

// CreateExternalConnectionUploadRequest struct for CreateExternalConnectionUploadRequest
type CreateExternalConnectionUploadRequest struct {
	NumberIds []string `json:"number_ids,omitempty"`
	// The use case of the upload request. NOTE: `calling_user_assignment` is not supported for toll free numbers.
	Usage *string `json:"usage,omitempty"`
	AdditionalUsages []string `json:"additional_usages,omitempty"`
	// Identifies the location to assign all phone numbers to.
	LocationId *string `json:"location_id,omitempty"`
	// Identifies the civic address to assign all phone numbers to.
	CivicAddressId *string `json:"civic_address_id,omitempty"`
}

// NewCreateExternalConnectionUploadRequest instantiates a new CreateExternalConnectionUploadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExternalConnectionUploadRequest() *CreateExternalConnectionUploadRequest {
	this := CreateExternalConnectionUploadRequest{}
	return &this
}

// NewCreateExternalConnectionUploadRequestWithDefaults instantiates a new CreateExternalConnectionUploadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExternalConnectionUploadRequestWithDefaults() *CreateExternalConnectionUploadRequest {
	this := CreateExternalConnectionUploadRequest{}
	return &this
}

// GetNumberIds returns the NumberIds field value if set, zero value otherwise.
func (o *CreateExternalConnectionUploadRequest) GetNumberIds() []string {
	if o == nil || IsNil(o.NumberIds) {
		var ret []string
		return ret
	}
	return o.NumberIds
}

// GetNumberIdsOk returns a tuple with the NumberIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionUploadRequest) GetNumberIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NumberIds) {
		return nil, false
	}
	return o.NumberIds, true
}

// HasNumberIds returns a boolean if a field has been set.
func (o *CreateExternalConnectionUploadRequest) HasNumberIds() bool {
	if o != nil && !IsNil(o.NumberIds) {
		return true
	}

	return false
}

// SetNumberIds gets a reference to the given []string and assigns it to the NumberIds field.
func (o *CreateExternalConnectionUploadRequest) SetNumberIds(v []string) {
	o.NumberIds = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *CreateExternalConnectionUploadRequest) GetUsage() string {
	if o == nil || IsNil(o.Usage) {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionUploadRequest) GetUsageOk() (*string, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *CreateExternalConnectionUploadRequest) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *CreateExternalConnectionUploadRequest) SetUsage(v string) {
	o.Usage = &v
}

// GetAdditionalUsages returns the AdditionalUsages field value if set, zero value otherwise.
func (o *CreateExternalConnectionUploadRequest) GetAdditionalUsages() []string {
	if o == nil || IsNil(o.AdditionalUsages) {
		var ret []string
		return ret
	}
	return o.AdditionalUsages
}

// GetAdditionalUsagesOk returns a tuple with the AdditionalUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionUploadRequest) GetAdditionalUsagesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalUsages) {
		return nil, false
	}
	return o.AdditionalUsages, true
}

// HasAdditionalUsages returns a boolean if a field has been set.
func (o *CreateExternalConnectionUploadRequest) HasAdditionalUsages() bool {
	if o != nil && !IsNil(o.AdditionalUsages) {
		return true
	}

	return false
}

// SetAdditionalUsages gets a reference to the given []string and assigns it to the AdditionalUsages field.
func (o *CreateExternalConnectionUploadRequest) SetAdditionalUsages(v []string) {
	o.AdditionalUsages = v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *CreateExternalConnectionUploadRequest) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionUploadRequest) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *CreateExternalConnectionUploadRequest) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *CreateExternalConnectionUploadRequest) SetLocationId(v string) {
	o.LocationId = &v
}

// GetCivicAddressId returns the CivicAddressId field value if set, zero value otherwise.
func (o *CreateExternalConnectionUploadRequest) GetCivicAddressId() string {
	if o == nil || IsNil(o.CivicAddressId) {
		var ret string
		return ret
	}
	return *o.CivicAddressId
}

// GetCivicAddressIdOk returns a tuple with the CivicAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionUploadRequest) GetCivicAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.CivicAddressId) {
		return nil, false
	}
	return o.CivicAddressId, true
}

// HasCivicAddressId returns a boolean if a field has been set.
func (o *CreateExternalConnectionUploadRequest) HasCivicAddressId() bool {
	if o != nil && !IsNil(o.CivicAddressId) {
		return true
	}

	return false
}

// SetCivicAddressId gets a reference to the given string and assigns it to the CivicAddressId field.
func (o *CreateExternalConnectionUploadRequest) SetCivicAddressId(v string) {
	o.CivicAddressId = &v
}

func (o CreateExternalConnectionUploadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateExternalConnectionUploadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberIds) {
		toSerialize["number_ids"] = o.NumberIds
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.AdditionalUsages) {
		toSerialize["additional_usages"] = o.AdditionalUsages
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.CivicAddressId) {
		toSerialize["civic_address_id"] = o.CivicAddressId
	}
	return toSerialize, nil
}

type NullableCreateExternalConnectionUploadRequest struct {
	value *CreateExternalConnectionUploadRequest
	isSet bool
}

func (v NullableCreateExternalConnectionUploadRequest) Get() *CreateExternalConnectionUploadRequest {
	return v.value
}

func (v *NullableCreateExternalConnectionUploadRequest) Set(val *CreateExternalConnectionUploadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExternalConnectionUploadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExternalConnectionUploadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExternalConnectionUploadRequest(val *CreateExternalConnectionUploadRequest) *NullableCreateExternalConnectionUploadRequest {
	return &NullableCreateExternalConnectionUploadRequest{value: val, isSet: true}
}

func (v NullableCreateExternalConnectionUploadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExternalConnectionUploadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PreviewLoaConfigurationParamsRequestAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewLoaConfigurationParamsRequestAddress{}

// PreviewLoaConfigurationParamsRequestAddress The address of the company.
type PreviewLoaConfigurationParamsRequestAddress struct {
	// The street address of the company
	StreetAddress string `json:"street_address"`
	// The extended address of the company
	ExtendedAddress *string `json:"extended_address,omitempty"`
	// The locality of the company
	City *string `json:"city,omitempty"`
	// The administrative area of the company
	State *string `json:"state,omitempty" validate:"regexp=^[A-Z]{2}$"`
	// The postal code of the company
	ZipCode *string `json:"zip_code,omitempty" validate:"regexp=^[0-9]{5}(?:-[0-9]{4})?$"`
	// The country code of the company
	CountryCode string `json:"country_code" validate:"regexp=^[A-Z]{2}$"`
}

type _PreviewLoaConfigurationParamsRequestAddress PreviewLoaConfigurationParamsRequestAddress

// NewPreviewLoaConfigurationParamsRequestAddress instantiates a new PreviewLoaConfigurationParamsRequestAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewLoaConfigurationParamsRequestAddress(streetAddress string, countryCode string) *PreviewLoaConfigurationParamsRequestAddress {
	this := PreviewLoaConfigurationParamsRequestAddress{}
	this.StreetAddress = streetAddress
	this.CountryCode = countryCode
	return &this
}

// NewPreviewLoaConfigurationParamsRequestAddressWithDefaults instantiates a new PreviewLoaConfigurationParamsRequestAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewLoaConfigurationParamsRequestAddressWithDefaults() *PreviewLoaConfigurationParamsRequestAddress {
	this := PreviewLoaConfigurationParamsRequestAddress{}
	return &this
}

// GetStreetAddress returns the StreetAddress field value
func (o *PreviewLoaConfigurationParamsRequestAddress) GetStreetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetStreetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreetAddress, true
}

// SetStreetAddress sets field value
func (o *PreviewLoaConfigurationParamsRequestAddress) SetStreetAddress(v string) {
	o.StreetAddress = v
}

// GetExtendedAddress returns the ExtendedAddress field value if set, zero value otherwise.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetExtendedAddress() string {
	if o == nil || IsNil(o.ExtendedAddress) {
		var ret string
		return ret
	}
	return *o.ExtendedAddress
}

// GetExtendedAddressOk returns a tuple with the ExtendedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetExtendedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedAddress) {
		return nil, false
	}
	return o.ExtendedAddress, true
}

// HasExtendedAddress returns a boolean if a field has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) HasExtendedAddress() bool {
	if o != nil && !IsNil(o.ExtendedAddress) {
		return true
	}

	return false
}

// SetExtendedAddress gets a reference to the given string and assigns it to the ExtendedAddress field.
func (o *PreviewLoaConfigurationParamsRequestAddress) SetExtendedAddress(v string) {
	o.ExtendedAddress = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PreviewLoaConfigurationParamsRequestAddress) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PreviewLoaConfigurationParamsRequestAddress) SetState(v string) {
	o.State = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode) {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetZipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ZipCode) {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) HasZipCode() bool {
	if o != nil && !IsNil(o.ZipCode) {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *PreviewLoaConfigurationParamsRequestAddress) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetCountryCode returns the CountryCode field value
func (o *PreviewLoaConfigurationParamsRequestAddress) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequestAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *PreviewLoaConfigurationParamsRequestAddress) SetCountryCode(v string) {
	o.CountryCode = v
}

func (o PreviewLoaConfigurationParamsRequestAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewLoaConfigurationParamsRequestAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["street_address"] = o.StreetAddress
	if !IsNil(o.ExtendedAddress) {
		toSerialize["extended_address"] = o.ExtendedAddress
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ZipCode) {
		toSerialize["zip_code"] = o.ZipCode
	}
	toSerialize["country_code"] = o.CountryCode
	return toSerialize, nil
}

func (o *PreviewLoaConfigurationParamsRequestAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"street_address",
		"country_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPreviewLoaConfigurationParamsRequestAddress := _PreviewLoaConfigurationParamsRequestAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPreviewLoaConfigurationParamsRequestAddress)

	if err != nil {
		return err
	}

	*o = PreviewLoaConfigurationParamsRequestAddress(varPreviewLoaConfigurationParamsRequestAddress)

	return err
}

type NullablePreviewLoaConfigurationParamsRequestAddress struct {
	value *PreviewLoaConfigurationParamsRequestAddress
	isSet bool
}

func (v NullablePreviewLoaConfigurationParamsRequestAddress) Get() *PreviewLoaConfigurationParamsRequestAddress {
	return v.value
}

func (v *NullablePreviewLoaConfigurationParamsRequestAddress) Set(val *PreviewLoaConfigurationParamsRequestAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewLoaConfigurationParamsRequestAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewLoaConfigurationParamsRequestAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewLoaConfigurationParamsRequestAddress(val *PreviewLoaConfigurationParamsRequestAddress) *NullablePreviewLoaConfigurationParamsRequestAddress {
	return &NullablePreviewLoaConfigurationParamsRequestAddress{value: val, isSet: true}
}

func (v NullablePreviewLoaConfigurationParamsRequestAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewLoaConfigurationParamsRequestAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



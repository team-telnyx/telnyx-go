/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookAppointmentTool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookAppointmentTool{}

// BookAppointmentTool struct for BookAppointmentTool
type BookAppointmentTool struct {
	Type string `json:"type"`
	BookAppointment BookAppointmentToolParams `json:"book_appointment"`
}

type _BookAppointmentTool BookAppointmentTool

// NewBookAppointmentTool instantiates a new BookAppointmentTool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookAppointmentTool(type_ string, bookAppointment BookAppointmentToolParams) *BookAppointmentTool {
	this := BookAppointmentTool{}
	this.Type = type_
	this.BookAppointment = bookAppointment
	return &this
}

// NewBookAppointmentToolWithDefaults instantiates a new BookAppointmentTool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookAppointmentToolWithDefaults() *BookAppointmentTool {
	this := BookAppointmentTool{}
	return &this
}

// GetType returns the Type field value
func (o *BookAppointmentTool) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BookAppointmentTool) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BookAppointmentTool) SetType(v string) {
	o.Type = v
}

// GetBookAppointment returns the BookAppointment field value
func (o *BookAppointmentTool) GetBookAppointment() BookAppointmentToolParams {
	if o == nil {
		var ret BookAppointmentToolParams
		return ret
	}

	return o.BookAppointment
}

// GetBookAppointmentOk returns a tuple with the BookAppointment field value
// and a boolean to check if the value has been set.
func (o *BookAppointmentTool) GetBookAppointmentOk() (*BookAppointmentToolParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookAppointment, true
}

// SetBookAppointment sets field value
func (o *BookAppointmentTool) SetBookAppointment(v BookAppointmentToolParams) {
	o.BookAppointment = v
}

func (o BookAppointmentTool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookAppointmentTool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["book_appointment"] = o.BookAppointment
	return toSerialize, nil
}

func (o *BookAppointmentTool) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"book_appointment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookAppointmentTool := _BookAppointmentTool{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookAppointmentTool)

	if err != nil {
		return err
	}

	*o = BookAppointmentTool(varBookAppointmentTool)

	return err
}

type NullableBookAppointmentTool struct {
	value *BookAppointmentTool
	isSet bool
}

func (v NullableBookAppointmentTool) Get() *BookAppointmentTool {
	return v.value
}

func (v *NullableBookAppointmentTool) Set(val *BookAppointmentTool) {
	v.value = val
	v.isSet = true
}

func (v NullableBookAppointmentTool) IsSet() bool {
	return v.isSet
}

func (v *NullableBookAppointmentTool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookAppointmentTool(val *BookAppointmentTool) *NullableBookAppointmentTool {
	return &NullableBookAppointmentTool{value: val, isSet: true}
}

func (v NullableBookAppointmentTool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookAppointmentTool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



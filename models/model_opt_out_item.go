/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the OptOutItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptOutItem{}

// OptOutItem struct for OptOutItem
type OptOutItem struct {
	// Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code).
	From *string `json:"from,omitempty"`
	// Receiving address (+E.164 formatted phone number or short code).
	To *string `json:"to,omitempty"`
	// Unique identifier for a messaging profile.
	MessagingProfileId NullableString `json:"messaging_profile_id,omitempty"`
	// The keyword that triggered the opt-out.
	Keyword NullableString `json:"keyword,omitempty"`
	// The timestamp when the opt-out was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewOptOutItem instantiates a new OptOutItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptOutItem() *OptOutItem {
	this := OptOutItem{}
	return &this
}

// NewOptOutItemWithDefaults instantiates a new OptOutItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptOutItemWithDefaults() *OptOutItem {
	this := OptOutItem{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *OptOutItem) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptOutItem) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *OptOutItem) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *OptOutItem) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *OptOutItem) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptOutItem) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *OptOutItem) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *OptOutItem) SetTo(v string) {
	o.To = &v
}

// GetMessagingProfileId returns the MessagingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OptOutItem) GetMessagingProfileId() string {
	if o == nil || IsNil(o.MessagingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.MessagingProfileId.Get()
}

// GetMessagingProfileIdOk returns a tuple with the MessagingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OptOutItem) GetMessagingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessagingProfileId.Get(), o.MessagingProfileId.IsSet()
}

// HasMessagingProfileId returns a boolean if a field has been set.
func (o *OptOutItem) HasMessagingProfileId() bool {
	if o != nil && o.MessagingProfileId.IsSet() {
		return true
	}

	return false
}

// SetMessagingProfileId gets a reference to the given NullableString and assigns it to the MessagingProfileId field.
func (o *OptOutItem) SetMessagingProfileId(v string) {
	o.MessagingProfileId.Set(&v)
}
// SetMessagingProfileIdNil sets the value for MessagingProfileId to be an explicit nil
func (o *OptOutItem) SetMessagingProfileIdNil() {
	o.MessagingProfileId.Set(nil)
}

// UnsetMessagingProfileId ensures that no value is present for MessagingProfileId, not even an explicit nil
func (o *OptOutItem) UnsetMessagingProfileId() {
	o.MessagingProfileId.Unset()
}

// GetKeyword returns the Keyword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OptOutItem) GetKeyword() string {
	if o == nil || IsNil(o.Keyword.Get()) {
		var ret string
		return ret
	}
	return *o.Keyword.Get()
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OptOutItem) GetKeywordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keyword.Get(), o.Keyword.IsSet()
}

// HasKeyword returns a boolean if a field has been set.
func (o *OptOutItem) HasKeyword() bool {
	if o != nil && o.Keyword.IsSet() {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given NullableString and assigns it to the Keyword field.
func (o *OptOutItem) SetKeyword(v string) {
	o.Keyword.Set(&v)
}
// SetKeywordNil sets the value for Keyword to be an explicit nil
func (o *OptOutItem) SetKeywordNil() {
	o.Keyword.Set(nil)
}

// UnsetKeyword ensures that no value is present for Keyword, not even an explicit nil
func (o *OptOutItem) UnsetKeyword() {
	o.Keyword.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OptOutItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptOutItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OptOutItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OptOutItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o OptOutItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptOutItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if o.MessagingProfileId.IsSet() {
		toSerialize["messaging_profile_id"] = o.MessagingProfileId.Get()
	}
	if o.Keyword.IsSet() {
		toSerialize["keyword"] = o.Keyword.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableOptOutItem struct {
	value *OptOutItem
	isSet bool
}

func (v NullableOptOutItem) Get() *OptOutItem {
	return v.value
}

func (v *NullableOptOutItem) Set(val *OptOutItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptOutItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptOutItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptOutItem(val *OptOutItem) *NullableOptOutItem {
	return &NullableOptOutItem{value: val, isSet: true}
}

func (v NullableOptOutItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptOutItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



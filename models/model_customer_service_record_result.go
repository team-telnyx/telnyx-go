/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CustomerServiceRecordResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerServiceRecordResult{}

// CustomerServiceRecordResult The result of the CSR request. This field would be null in case of `pending` or `failed` status.
type CustomerServiceRecordResult struct {
	// The name of the carrier that the customer service record is for.
	CarrierName *string `json:"carrier_name,omitempty"`
	// The associated phone numbers of the customer service record.
	AssociatedPhoneNumbers []string `json:"associated_phone_numbers,omitempty"`
	Admin *CustomerServiceRecordResultAdmin `json:"admin,omitempty"`
	Address *CustomerServiceRecordResultAddress `json:"address,omitempty"`
}

// NewCustomerServiceRecordResult instantiates a new CustomerServiceRecordResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerServiceRecordResult() *CustomerServiceRecordResult {
	this := CustomerServiceRecordResult{}
	return &this
}

// NewCustomerServiceRecordResultWithDefaults instantiates a new CustomerServiceRecordResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerServiceRecordResultWithDefaults() *CustomerServiceRecordResult {
	this := CustomerServiceRecordResult{}
	return &this
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *CustomerServiceRecordResult) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResult) GetCarrierNameOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierName) {
		return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *CustomerServiceRecordResult) HasCarrierName() bool {
	if o != nil && !IsNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *CustomerServiceRecordResult) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetAssociatedPhoneNumbers returns the AssociatedPhoneNumbers field value if set, zero value otherwise.
func (o *CustomerServiceRecordResult) GetAssociatedPhoneNumbers() []string {
	if o == nil || IsNil(o.AssociatedPhoneNumbers) {
		var ret []string
		return ret
	}
	return o.AssociatedPhoneNumbers
}

// GetAssociatedPhoneNumbersOk returns a tuple with the AssociatedPhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResult) GetAssociatedPhoneNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.AssociatedPhoneNumbers) {
		return nil, false
	}
	return o.AssociatedPhoneNumbers, true
}

// HasAssociatedPhoneNumbers returns a boolean if a field has been set.
func (o *CustomerServiceRecordResult) HasAssociatedPhoneNumbers() bool {
	if o != nil && !IsNil(o.AssociatedPhoneNumbers) {
		return true
	}

	return false
}

// SetAssociatedPhoneNumbers gets a reference to the given []string and assigns it to the AssociatedPhoneNumbers field.
func (o *CustomerServiceRecordResult) SetAssociatedPhoneNumbers(v []string) {
	o.AssociatedPhoneNumbers = v
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *CustomerServiceRecordResult) GetAdmin() CustomerServiceRecordResultAdmin {
	if o == nil || IsNil(o.Admin) {
		var ret CustomerServiceRecordResultAdmin
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResult) GetAdminOk() (*CustomerServiceRecordResultAdmin, bool) {
	if o == nil || IsNil(o.Admin) {
		return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *CustomerServiceRecordResult) HasAdmin() bool {
	if o != nil && !IsNil(o.Admin) {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given CustomerServiceRecordResultAdmin and assigns it to the Admin field.
func (o *CustomerServiceRecordResult) SetAdmin(v CustomerServiceRecordResultAdmin) {
	o.Admin = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CustomerServiceRecordResult) GetAddress() CustomerServiceRecordResultAddress {
	if o == nil || IsNil(o.Address) {
		var ret CustomerServiceRecordResultAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResult) GetAddressOk() (*CustomerServiceRecordResultAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CustomerServiceRecordResult) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given CustomerServiceRecordResultAddress and assigns it to the Address field.
func (o *CustomerServiceRecordResult) SetAddress(v CustomerServiceRecordResultAddress) {
	o.Address = &v
}

func (o CustomerServiceRecordResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerServiceRecordResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CarrierName) {
		toSerialize["carrier_name"] = o.CarrierName
	}
	if !IsNil(o.AssociatedPhoneNumbers) {
		toSerialize["associated_phone_numbers"] = o.AssociatedPhoneNumbers
	}
	if !IsNil(o.Admin) {
		toSerialize["admin"] = o.Admin
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableCustomerServiceRecordResult struct {
	value *CustomerServiceRecordResult
	isSet bool
}

func (v NullableCustomerServiceRecordResult) Get() *CustomerServiceRecordResult {
	return v.value
}

func (v *NullableCustomerServiceRecordResult) Set(val *CustomerServiceRecordResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerServiceRecordResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerServiceRecordResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerServiceRecordResult(val *CustomerServiceRecordResult) *NullableCustomerServiceRecordResult {
	return &NullableCustomerServiceRecordResult{value: val, isSet: true}
}

func (v NullableCustomerServiceRecordResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerServiceRecordResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



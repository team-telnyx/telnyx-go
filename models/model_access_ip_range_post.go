/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessIPRangePOST type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessIPRangePOST{}

// AccessIPRangePOST struct for AccessIPRangePOST
type AccessIPRangePOST struct {
	CidrBlock string `json:"cidr_block"`
	Description *string `json:"description,omitempty"`
}

type _AccessIPRangePOST AccessIPRangePOST

// NewAccessIPRangePOST instantiates a new AccessIPRangePOST object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessIPRangePOST(cidrBlock string) *AccessIPRangePOST {
	this := AccessIPRangePOST{}
	this.CidrBlock = cidrBlock
	return &this
}

// NewAccessIPRangePOSTWithDefaults instantiates a new AccessIPRangePOST object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessIPRangePOSTWithDefaults() *AccessIPRangePOST {
	this := AccessIPRangePOST{}
	return &this
}

// GetCidrBlock returns the CidrBlock field value
func (o *AccessIPRangePOST) GetCidrBlock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value
// and a boolean to check if the value has been set.
func (o *AccessIPRangePOST) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrBlock, true
}

// SetCidrBlock sets field value
func (o *AccessIPRangePOST) SetCidrBlock(v string) {
	o.CidrBlock = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccessIPRangePOST) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessIPRangePOST) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessIPRangePOST) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccessIPRangePOST) SetDescription(v string) {
	o.Description = &v
}

func (o AccessIPRangePOST) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessIPRangePOST) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cidr_block"] = o.CidrBlock
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *AccessIPRangePOST) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cidr_block",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessIPRangePOST := _AccessIPRangePOST{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessIPRangePOST)

	if err != nil {
		return err
	}

	*o = AccessIPRangePOST(varAccessIPRangePOST)

	return err
}

type NullableAccessIPRangePOST struct {
	value *AccessIPRangePOST
	isSet bool
}

func (v NullableAccessIPRangePOST) Get() *AccessIPRangePOST {
	return v.value
}

func (v *NullableAccessIPRangePOST) Set(val *AccessIPRangePOST) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessIPRangePOST) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessIPRangePOST) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessIPRangePOST(val *AccessIPRangePOST) *NullableAccessIPRangePOST {
	return &NullableAccessIPRangePOST{value: val, isSet: true}
}

func (v NullableAccessIPRangePOST) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessIPRangePOST) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



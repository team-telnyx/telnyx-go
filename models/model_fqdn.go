/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the Fqdn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fqdn{}

// Fqdn struct for Fqdn
type Fqdn struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ID of the FQDN connection to which this FQDN is attached.
	ConnectionId *string `json:"connection_id,omitempty"`
	// FQDN represented by this resource.
	Fqdn *string `json:"fqdn,omitempty"`
	// Port to use when connecting to this FQDN.
	Port *int32 `json:"port,omitempty"`
	// The DNS record type for the FQDN. For cases where a port is not set, the DNS record type must be 'srv'. For cases where a port is set, the DNS record type must be 'a'. If the DNS record type is 'a' and a port is not specified, 5060 will be used.
	DnsRecordType *string `json:"dns_record_type,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewFqdn instantiates a new Fqdn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFqdn() *Fqdn {
	this := Fqdn{}
	var port int32 = 5060
	this.Port = &port
	return &this
}

// NewFqdnWithDefaults instantiates a new Fqdn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFqdnWithDefaults() *Fqdn {
	this := Fqdn{}
	var port int32 = 5060
	this.Port = &port
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Fqdn) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Fqdn) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Fqdn) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *Fqdn) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *Fqdn) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *Fqdn) SetRecordType(v string) {
	o.RecordType = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *Fqdn) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *Fqdn) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *Fqdn) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *Fqdn) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *Fqdn) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *Fqdn) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Fqdn) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Fqdn) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Fqdn) SetPort(v int32) {
	o.Port = &v
}

// GetDnsRecordType returns the DnsRecordType field value if set, zero value otherwise.
func (o *Fqdn) GetDnsRecordType() string {
	if o == nil || IsNil(o.DnsRecordType) {
		var ret string
		return ret
	}
	return *o.DnsRecordType
}

// GetDnsRecordTypeOk returns a tuple with the DnsRecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetDnsRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DnsRecordType) {
		return nil, false
	}
	return o.DnsRecordType, true
}

// HasDnsRecordType returns a boolean if a field has been set.
func (o *Fqdn) HasDnsRecordType() bool {
	if o != nil && !IsNil(o.DnsRecordType) {
		return true
	}

	return false
}

// SetDnsRecordType gets a reference to the given string and assigns it to the DnsRecordType field.
func (o *Fqdn) SetDnsRecordType(v string) {
	o.DnsRecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Fqdn) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Fqdn) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Fqdn) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Fqdn) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fqdn) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Fqdn) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Fqdn) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o Fqdn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fqdn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.DnsRecordType) {
		toSerialize["dns_record_type"] = o.DnsRecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFqdn struct {
	value *Fqdn
	isSet bool
}

func (v NullableFqdn) Get() *Fqdn {
	return v.value
}

func (v *NullableFqdn) Set(val *Fqdn) {
	v.value = val
	v.isSet = true
}

func (v NullableFqdn) IsSet() bool {
	return v.isSet
}

func (v *NullableFqdn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFqdn(val *Fqdn) *NullableFqdn {
	return &NullableFqdn{value: val, isSet: true}
}

func (v NullableFqdn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFqdn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingOrderMessaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderMessaging{}

// PortingOrderMessaging Information about messaging porting process.
type PortingOrderMessaging struct {
	// Indicates whether the porting order can also port messaging capabilities.
	MessagingCapable *bool `json:"messaging_capable,omitempty"`
	// Indicates whether Telnyx will port messaging capabilities from the losing carrier. If false, any messaging capabilities will stay with their current provider.
	EnableMessaging *bool `json:"enable_messaging,omitempty"`
	// The current status of the messaging porting.
	MessagingPortStatus *string `json:"messaging_port_status,omitempty"`
	// Indicates whether the messaging porting has been completed.
	MessagingPortCompleted *bool `json:"messaging_port_completed,omitempty"`
}

// NewPortingOrderMessaging instantiates a new PortingOrderMessaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderMessaging() *PortingOrderMessaging {
	this := PortingOrderMessaging{}
	return &this
}

// NewPortingOrderMessagingWithDefaults instantiates a new PortingOrderMessaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderMessagingWithDefaults() *PortingOrderMessaging {
	this := PortingOrderMessaging{}
	return &this
}

// GetMessagingCapable returns the MessagingCapable field value if set, zero value otherwise.
func (o *PortingOrderMessaging) GetMessagingCapable() bool {
	if o == nil || IsNil(o.MessagingCapable) {
		var ret bool
		return ret
	}
	return *o.MessagingCapable
}

// GetMessagingCapableOk returns a tuple with the MessagingCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderMessaging) GetMessagingCapableOk() (*bool, bool) {
	if o == nil || IsNil(o.MessagingCapable) {
		return nil, false
	}
	return o.MessagingCapable, true
}

// HasMessagingCapable returns a boolean if a field has been set.
func (o *PortingOrderMessaging) HasMessagingCapable() bool {
	if o != nil && !IsNil(o.MessagingCapable) {
		return true
	}

	return false
}

// SetMessagingCapable gets a reference to the given bool and assigns it to the MessagingCapable field.
func (o *PortingOrderMessaging) SetMessagingCapable(v bool) {
	o.MessagingCapable = &v
}

// GetEnableMessaging returns the EnableMessaging field value if set, zero value otherwise.
func (o *PortingOrderMessaging) GetEnableMessaging() bool {
	if o == nil || IsNil(o.EnableMessaging) {
		var ret bool
		return ret
	}
	return *o.EnableMessaging
}

// GetEnableMessagingOk returns a tuple with the EnableMessaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderMessaging) GetEnableMessagingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMessaging) {
		return nil, false
	}
	return o.EnableMessaging, true
}

// HasEnableMessaging returns a boolean if a field has been set.
func (o *PortingOrderMessaging) HasEnableMessaging() bool {
	if o != nil && !IsNil(o.EnableMessaging) {
		return true
	}

	return false
}

// SetEnableMessaging gets a reference to the given bool and assigns it to the EnableMessaging field.
func (o *PortingOrderMessaging) SetEnableMessaging(v bool) {
	o.EnableMessaging = &v
}

// GetMessagingPortStatus returns the MessagingPortStatus field value if set, zero value otherwise.
func (o *PortingOrderMessaging) GetMessagingPortStatus() string {
	if o == nil || IsNil(o.MessagingPortStatus) {
		var ret string
		return ret
	}
	return *o.MessagingPortStatus
}

// GetMessagingPortStatusOk returns a tuple with the MessagingPortStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderMessaging) GetMessagingPortStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MessagingPortStatus) {
		return nil, false
	}
	return o.MessagingPortStatus, true
}

// HasMessagingPortStatus returns a boolean if a field has been set.
func (o *PortingOrderMessaging) HasMessagingPortStatus() bool {
	if o != nil && !IsNil(o.MessagingPortStatus) {
		return true
	}

	return false
}

// SetMessagingPortStatus gets a reference to the given string and assigns it to the MessagingPortStatus field.
func (o *PortingOrderMessaging) SetMessagingPortStatus(v string) {
	o.MessagingPortStatus = &v
}

// GetMessagingPortCompleted returns the MessagingPortCompleted field value if set, zero value otherwise.
func (o *PortingOrderMessaging) GetMessagingPortCompleted() bool {
	if o == nil || IsNil(o.MessagingPortCompleted) {
		var ret bool
		return ret
	}
	return *o.MessagingPortCompleted
}

// GetMessagingPortCompletedOk returns a tuple with the MessagingPortCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderMessaging) GetMessagingPortCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.MessagingPortCompleted) {
		return nil, false
	}
	return o.MessagingPortCompleted, true
}

// HasMessagingPortCompleted returns a boolean if a field has been set.
func (o *PortingOrderMessaging) HasMessagingPortCompleted() bool {
	if o != nil && !IsNil(o.MessagingPortCompleted) {
		return true
	}

	return false
}

// SetMessagingPortCompleted gets a reference to the given bool and assigns it to the MessagingPortCompleted field.
func (o *PortingOrderMessaging) SetMessagingPortCompleted(v bool) {
	o.MessagingPortCompleted = &v
}

func (o PortingOrderMessaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderMessaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessagingCapable) {
		toSerialize["messaging_capable"] = o.MessagingCapable
	}
	if !IsNil(o.EnableMessaging) {
		toSerialize["enable_messaging"] = o.EnableMessaging
	}
	if !IsNil(o.MessagingPortStatus) {
		toSerialize["messaging_port_status"] = o.MessagingPortStatus
	}
	if !IsNil(o.MessagingPortCompleted) {
		toSerialize["messaging_port_completed"] = o.MessagingPortCompleted
	}
	return toSerialize, nil
}

type NullablePortingOrderMessaging struct {
	value *PortingOrderMessaging
	isSet bool
}

func (v NullablePortingOrderMessaging) Get() *PortingOrderMessaging {
	return v.value
}

func (v *NullablePortingOrderMessaging) Set(val *PortingOrderMessaging) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderMessaging) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderMessaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderMessaging(val *PortingOrderMessaging) *NullablePortingOrderMessaging {
	return &NullablePortingOrderMessaging{value: val, isSet: true}
}

func (v NullablePortingOrderMessaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderMessaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



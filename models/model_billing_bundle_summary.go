/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingBundleSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingBundleSummary{}

// BillingBundleSummary struct for BillingBundleSummary
type BillingBundleSummary struct {
	// Bundle's ID, this is used to identify the bundle in the API.
	Id string `json:"id"`
	// Bundle's name, this is used to identify the bundle in the UI.
	Name string `json:"name"`
	// Slugified version of the bundle's name.
	Slug *string `json:"slug,omitempty"`
	// Bundle's cost code, this is used to identify the bundle in the billing system.
	CostCode string `json:"cost_code"`
	// Available to all customers or only to specific customers.
	IsPublic bool `json:"is_public"`
	// Date the bundle was created.
	CreatedAt string `json:"created_at"`
	// Monthly recurring charge price.
	MrcPrice *float32 `json:"mrc_price,omitempty"`
	// Bundle's currency code.
	Currency *string `json:"currency,omitempty"`
	Specs []string `json:"specs,omitempty"`
}

type _BillingBundleSummary BillingBundleSummary

// NewBillingBundleSummary instantiates a new BillingBundleSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingBundleSummary(id string, name string, costCode string, isPublic bool, createdAt string) *BillingBundleSummary {
	this := BillingBundleSummary{}
	this.Id = id
	this.Name = name
	this.CostCode = costCode
	this.IsPublic = isPublic
	this.CreatedAt = createdAt
	return &this
}

// NewBillingBundleSummaryWithDefaults instantiates a new BillingBundleSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingBundleSummaryWithDefaults() *BillingBundleSummary {
	this := BillingBundleSummary{}
	return &this
}

// GetId returns the Id field value
func (o *BillingBundleSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingBundleSummary) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BillingBundleSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingBundleSummary) SetName(v string) {
	o.Name = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *BillingBundleSummary) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *BillingBundleSummary) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *BillingBundleSummary) SetSlug(v string) {
	o.Slug = &v
}

// GetCostCode returns the CostCode field value
func (o *BillingBundleSummary) GetCostCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CostCode
}

// GetCostCodeOk returns a tuple with the CostCode field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetCostCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostCode, true
}

// SetCostCode sets field value
func (o *BillingBundleSummary) SetCostCode(v string) {
	o.CostCode = v
}

// GetIsPublic returns the IsPublic field value
func (o *BillingBundleSummary) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *BillingBundleSummary) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingBundleSummary) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingBundleSummary) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetMrcPrice returns the MrcPrice field value if set, zero value otherwise.
func (o *BillingBundleSummary) GetMrcPrice() float32 {
	if o == nil || IsNil(o.MrcPrice) {
		var ret float32
		return ret
	}
	return *o.MrcPrice
}

// GetMrcPriceOk returns a tuple with the MrcPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetMrcPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.MrcPrice) {
		return nil, false
	}
	return o.MrcPrice, true
}

// HasMrcPrice returns a boolean if a field has been set.
func (o *BillingBundleSummary) HasMrcPrice() bool {
	if o != nil && !IsNil(o.MrcPrice) {
		return true
	}

	return false
}

// SetMrcPrice gets a reference to the given float32 and assigns it to the MrcPrice field.
func (o *BillingBundleSummary) SetMrcPrice(v float32) {
	o.MrcPrice = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BillingBundleSummary) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BillingBundleSummary) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *BillingBundleSummary) SetCurrency(v string) {
	o.Currency = &v
}

// GetSpecs returns the Specs field value if set, zero value otherwise.
func (o *BillingBundleSummary) GetSpecs() []string {
	if o == nil || IsNil(o.Specs) {
		var ret []string
		return ret
	}
	return o.Specs
}

// GetSpecsOk returns a tuple with the Specs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBundleSummary) GetSpecsOk() ([]string, bool) {
	if o == nil || IsNil(o.Specs) {
		return nil, false
	}
	return o.Specs, true
}

// HasSpecs returns a boolean if a field has been set.
func (o *BillingBundleSummary) HasSpecs() bool {
	if o != nil && !IsNil(o.Specs) {
		return true
	}

	return false
}

// SetSpecs gets a reference to the given []string and assigns it to the Specs field.
func (o *BillingBundleSummary) SetSpecs(v []string) {
	o.Specs = v
}

func (o BillingBundleSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingBundleSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	toSerialize["cost_code"] = o.CostCode
	toSerialize["is_public"] = o.IsPublic
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.MrcPrice) {
		toSerialize["mrc_price"] = o.MrcPrice
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Specs) {
		toSerialize["specs"] = o.Specs
	}
	return toSerialize, nil
}

func (o *BillingBundleSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"cost_code",
		"is_public",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingBundleSummary := _BillingBundleSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingBundleSummary)

	if err != nil {
		return err
	}

	*o = BillingBundleSummary(varBillingBundleSummary)

	return err
}

type NullableBillingBundleSummary struct {
	value *BillingBundleSummary
	isSet bool
}

func (v NullableBillingBundleSummary) Get() *BillingBundleSummary {
	return v.value
}

func (v *NullableBillingBundleSummary) Set(val *BillingBundleSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingBundleSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingBundleSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingBundleSummary(val *BillingBundleSummary) *NullableBillingBundleSummary {
	return &NullableBillingBundleSummary{value: val, isSet: true}
}

func (v NullableBillingBundleSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingBundleSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyVerificationCodeResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyVerificationCodeResponseData{}

// VerifyVerificationCodeResponseData struct for VerifyVerificationCodeResponseData
type VerifyVerificationCodeResponseData struct {
	// +E164 formatted phone number.
	PhoneNumber string `json:"phone_number"`
	// Identifies if the verification code has been accepted or rejected.
	ResponseCode string `json:"response_code"`
}

type _VerifyVerificationCodeResponseData VerifyVerificationCodeResponseData

// NewVerifyVerificationCodeResponseData instantiates a new VerifyVerificationCodeResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyVerificationCodeResponseData(phoneNumber string, responseCode string) *VerifyVerificationCodeResponseData {
	this := VerifyVerificationCodeResponseData{}
	this.PhoneNumber = phoneNumber
	this.ResponseCode = responseCode
	return &this
}

// NewVerifyVerificationCodeResponseDataWithDefaults instantiates a new VerifyVerificationCodeResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyVerificationCodeResponseDataWithDefaults() *VerifyVerificationCodeResponseData {
	this := VerifyVerificationCodeResponseData{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *VerifyVerificationCodeResponseData) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *VerifyVerificationCodeResponseData) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *VerifyVerificationCodeResponseData) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetResponseCode returns the ResponseCode field value
func (o *VerifyVerificationCodeResponseData) GetResponseCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *VerifyVerificationCodeResponseData) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *VerifyVerificationCodeResponseData) SetResponseCode(v string) {
	o.ResponseCode = v
}

func (o VerifyVerificationCodeResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyVerificationCodeResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone_number"] = o.PhoneNumber
	toSerialize["response_code"] = o.ResponseCode
	return toSerialize, nil
}

func (o *VerifyVerificationCodeResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone_number",
		"response_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyVerificationCodeResponseData := _VerifyVerificationCodeResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyVerificationCodeResponseData)

	if err != nil {
		return err
	}

	*o = VerifyVerificationCodeResponseData(varVerifyVerificationCodeResponseData)

	return err
}

type NullableVerifyVerificationCodeResponseData struct {
	value *VerifyVerificationCodeResponseData
	isSet bool
}

func (v NullableVerifyVerificationCodeResponseData) Get() *VerifyVerificationCodeResponseData {
	return v.value
}

func (v *NullableVerifyVerificationCodeResponseData) Set(val *VerifyVerificationCodeResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyVerificationCodeResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyVerificationCodeResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyVerificationCodeResponseData(val *VerifyVerificationCodeResponseData) *NullableVerifyVerificationCodeResponseData {
	return &NullableVerifyVerificationCodeResponseData{value: val, isSet: true}
}

func (v NullableVerifyVerificationCodeResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyVerificationCodeResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallCostPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallCostPayload{}

// CallCostPayload struct for CallCostPayload
type CallCostPayload struct {
	// The number of seconds for which this call will be billed
	BilledDurationSecs *int32 `json:"billed_duration_secs,omitempty"`
	// Call ID used to issue commands via Call Control API.
	CallControlId *string `json:"call_control_id,omitempty"`
	// ID that is unique to the call and can be used to correlate webhook events.
	CallLegId *string `json:"call_leg_id,omitempty"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
	CallSessionId *string `json:"call_session_id,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// Identifies the type of resource.
	ConnectionId *string `json:"connection_id,omitempty"`
	CostParts []CallCostPayloadCostPartsInner `json:"cost_parts,omitempty"`
	// The billed cost of the call
	TotalCost *float32 `json:"total_cost,omitempty"`
	// Reflects how command ended.
	Status *string `json:"status,omitempty"`
}

// NewCallCostPayload instantiates a new CallCostPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallCostPayload() *CallCostPayload {
	this := CallCostPayload{}
	return &this
}

// NewCallCostPayloadWithDefaults instantiates a new CallCostPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallCostPayloadWithDefaults() *CallCostPayload {
	this := CallCostPayload{}
	return &this
}

// GetBilledDurationSecs returns the BilledDurationSecs field value if set, zero value otherwise.
func (o *CallCostPayload) GetBilledDurationSecs() int32 {
	if o == nil || IsNil(o.BilledDurationSecs) {
		var ret int32
		return ret
	}
	return *o.BilledDurationSecs
}

// GetBilledDurationSecsOk returns a tuple with the BilledDurationSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetBilledDurationSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.BilledDurationSecs) {
		return nil, false
	}
	return o.BilledDurationSecs, true
}

// HasBilledDurationSecs returns a boolean if a field has been set.
func (o *CallCostPayload) HasBilledDurationSecs() bool {
	if o != nil && !IsNil(o.BilledDurationSecs) {
		return true
	}

	return false
}

// SetBilledDurationSecs gets a reference to the given int32 and assigns it to the BilledDurationSecs field.
func (o *CallCostPayload) SetBilledDurationSecs(v int32) {
	o.BilledDurationSecs = &v
}

// GetCallControlId returns the CallControlId field value if set, zero value otherwise.
func (o *CallCostPayload) GetCallControlId() string {
	if o == nil || IsNil(o.CallControlId) {
		var ret string
		return ret
	}
	return *o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetCallControlIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallControlId) {
		return nil, false
	}
	return o.CallControlId, true
}

// HasCallControlId returns a boolean if a field has been set.
func (o *CallCostPayload) HasCallControlId() bool {
	if o != nil && !IsNil(o.CallControlId) {
		return true
	}

	return false
}

// SetCallControlId gets a reference to the given string and assigns it to the CallControlId field.
func (o *CallCostPayload) SetCallControlId(v string) {
	o.CallControlId = &v
}

// GetCallLegId returns the CallLegId field value if set, zero value otherwise.
func (o *CallCostPayload) GetCallLegId() string {
	if o == nil || IsNil(o.CallLegId) {
		var ret string
		return ret
	}
	return *o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetCallLegIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallLegId) {
		return nil, false
	}
	return o.CallLegId, true
}

// HasCallLegId returns a boolean if a field has been set.
func (o *CallCostPayload) HasCallLegId() bool {
	if o != nil && !IsNil(o.CallLegId) {
		return true
	}

	return false
}

// SetCallLegId gets a reference to the given string and assigns it to the CallLegId field.
func (o *CallCostPayload) SetCallLegId(v string) {
	o.CallLegId = &v
}

// GetCallSessionId returns the CallSessionId field value if set, zero value otherwise.
func (o *CallCostPayload) GetCallSessionId() string {
	if o == nil || IsNil(o.CallSessionId) {
		var ret string
		return ret
	}
	return *o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallSessionId) {
		return nil, false
	}
	return o.CallSessionId, true
}

// HasCallSessionId returns a boolean if a field has been set.
func (o *CallCostPayload) HasCallSessionId() bool {
	if o != nil && !IsNil(o.CallSessionId) {
		return true
	}

	return false
}

// SetCallSessionId gets a reference to the given string and assigns it to the CallSessionId field.
func (o *CallCostPayload) SetCallSessionId(v string) {
	o.CallSessionId = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *CallCostPayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *CallCostPayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *CallCostPayload) SetClientState(v string) {
	o.ClientState = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *CallCostPayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *CallCostPayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *CallCostPayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCostParts returns the CostParts field value if set, zero value otherwise.
func (o *CallCostPayload) GetCostParts() []CallCostPayloadCostPartsInner {
	if o == nil || IsNil(o.CostParts) {
		var ret []CallCostPayloadCostPartsInner
		return ret
	}
	return o.CostParts
}

// GetCostPartsOk returns a tuple with the CostParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetCostPartsOk() ([]CallCostPayloadCostPartsInner, bool) {
	if o == nil || IsNil(o.CostParts) {
		return nil, false
	}
	return o.CostParts, true
}

// HasCostParts returns a boolean if a field has been set.
func (o *CallCostPayload) HasCostParts() bool {
	if o != nil && !IsNil(o.CostParts) {
		return true
	}

	return false
}

// SetCostParts gets a reference to the given []CallCostPayloadCostPartsInner and assigns it to the CostParts field.
func (o *CallCostPayload) SetCostParts(v []CallCostPayloadCostPartsInner) {
	o.CostParts = v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *CallCostPayload) GetTotalCost() float32 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float32
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *CallCostPayload) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float32 and assigns it to the TotalCost field.
func (o *CallCostPayload) SetTotalCost(v float32) {
	o.TotalCost = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CallCostPayload) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayload) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CallCostPayload) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CallCostPayload) SetStatus(v string) {
	o.Status = &v
}

func (o CallCostPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallCostPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BilledDurationSecs) {
		toSerialize["billed_duration_secs"] = o.BilledDurationSecs
	}
	if !IsNil(o.CallControlId) {
		toSerialize["call_control_id"] = o.CallControlId
	}
	if !IsNil(o.CallLegId) {
		toSerialize["call_leg_id"] = o.CallLegId
	}
	if !IsNil(o.CallSessionId) {
		toSerialize["call_session_id"] = o.CallSessionId
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CostParts) {
		toSerialize["cost_parts"] = o.CostParts
	}
	if !IsNil(o.TotalCost) {
		toSerialize["total_cost"] = o.TotalCost
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCallCostPayload struct {
	value *CallCostPayload
	isSet bool
}

func (v NullableCallCostPayload) Get() *CallCostPayload {
	return v.value
}

func (v *NullableCallCostPayload) Set(val *CallCostPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCallCostPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCallCostPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallCostPayload(val *CallCostPayload) *NullableCallCostPayload {
	return &NullableCallCostPayload{value: val, isSet: true}
}

func (v NullableCallCostPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallCostPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallControlCommandResultWithRecordingId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallControlCommandResultWithRecordingId{}

// CallControlCommandResultWithRecordingId struct for CallControlCommandResultWithRecordingId
type CallControlCommandResultWithRecordingId struct {
	Result *string `json:"result,omitempty"`
	// The ID of the recording. Only present when the record parameter is set to record-from-answer.
	RecordingId *string `json:"recording_id,omitempty"`
}

// NewCallControlCommandResultWithRecordingId instantiates a new CallControlCommandResultWithRecordingId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallControlCommandResultWithRecordingId() *CallControlCommandResultWithRecordingId {
	this := CallControlCommandResultWithRecordingId{}
	return &this
}

// NewCallControlCommandResultWithRecordingIdWithDefaults instantiates a new CallControlCommandResultWithRecordingId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallControlCommandResultWithRecordingIdWithDefaults() *CallControlCommandResultWithRecordingId {
	this := CallControlCommandResultWithRecordingId{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CallControlCommandResultWithRecordingId) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallControlCommandResultWithRecordingId) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CallControlCommandResultWithRecordingId) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *CallControlCommandResultWithRecordingId) SetResult(v string) {
	o.Result = &v
}

// GetRecordingId returns the RecordingId field value if set, zero value otherwise.
func (o *CallControlCommandResultWithRecordingId) GetRecordingId() string {
	if o == nil || IsNil(o.RecordingId) {
		var ret string
		return ret
	}
	return *o.RecordingId
}

// GetRecordingIdOk returns a tuple with the RecordingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallControlCommandResultWithRecordingId) GetRecordingIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecordingId) {
		return nil, false
	}
	return o.RecordingId, true
}

// HasRecordingId returns a boolean if a field has been set.
func (o *CallControlCommandResultWithRecordingId) HasRecordingId() bool {
	if o != nil && !IsNil(o.RecordingId) {
		return true
	}

	return false
}

// SetRecordingId gets a reference to the given string and assigns it to the RecordingId field.
func (o *CallControlCommandResultWithRecordingId) SetRecordingId(v string) {
	o.RecordingId = &v
}

func (o CallControlCommandResultWithRecordingId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallControlCommandResultWithRecordingId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.RecordingId) {
		toSerialize["recording_id"] = o.RecordingId
	}
	return toSerialize, nil
}

type NullableCallControlCommandResultWithRecordingId struct {
	value *CallControlCommandResultWithRecordingId
	isSet bool
}

func (v NullableCallControlCommandResultWithRecordingId) Get() *CallControlCommandResultWithRecordingId {
	return v.value
}

func (v *NullableCallControlCommandResultWithRecordingId) Set(val *CallControlCommandResultWithRecordingId) {
	v.value = val
	v.isSet = true
}

func (v NullableCallControlCommandResultWithRecordingId) IsSet() bool {
	return v.isSet
}

func (v *NullableCallControlCommandResultWithRecordingId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallControlCommandResultWithRecordingId(val *CallControlCommandResultWithRecordingId) *NullableCallControlCommandResultWithRecordingId {
	return &NullableCallControlCommandResultWithRecordingId{value: val, isSet: true}
}

func (v NullableCallControlCommandResultWithRecordingId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallControlCommandResultWithRecordingId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NumberHealthMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NumberHealthMetrics{}

// NumberHealthMetrics High level health metrics about the number and it's messaging sending patterns. 
type NumberHealthMetrics struct {
	// The number of messages analyzed for the health metrics.
	MessageCount int32 `json:"message_count"`
	// The ratio of messages received to the number of messages sent.
	InboundOutboundRatio float32 `json:"inbound_outbound_ratio"`
	// The ratio of messages sucessfully delivered to the number of messages attempted.
	SuccessRatio float32 `json:"success_ratio"`
	// The ratio of messages blocked for spam to the number of messages attempted.
	SpamRatio float32 `json:"spam_ratio"`
}

type _NumberHealthMetrics NumberHealthMetrics

// NewNumberHealthMetrics instantiates a new NumberHealthMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNumberHealthMetrics(messageCount int32, inboundOutboundRatio float32, successRatio float32, spamRatio float32) *NumberHealthMetrics {
	this := NumberHealthMetrics{}
	this.MessageCount = messageCount
	this.InboundOutboundRatio = inboundOutboundRatio
	this.SuccessRatio = successRatio
	this.SpamRatio = spamRatio
	return &this
}

// NewNumberHealthMetricsWithDefaults instantiates a new NumberHealthMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNumberHealthMetricsWithDefaults() *NumberHealthMetrics {
	this := NumberHealthMetrics{}
	return &this
}

// GetMessageCount returns the MessageCount field value
func (o *NumberHealthMetrics) GetMessageCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageCount
}

// GetMessageCountOk returns a tuple with the MessageCount field value
// and a boolean to check if the value has been set.
func (o *NumberHealthMetrics) GetMessageCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageCount, true
}

// SetMessageCount sets field value
func (o *NumberHealthMetrics) SetMessageCount(v int32) {
	o.MessageCount = v
}

// GetInboundOutboundRatio returns the InboundOutboundRatio field value
func (o *NumberHealthMetrics) GetInboundOutboundRatio() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InboundOutboundRatio
}

// GetInboundOutboundRatioOk returns a tuple with the InboundOutboundRatio field value
// and a boolean to check if the value has been set.
func (o *NumberHealthMetrics) GetInboundOutboundRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InboundOutboundRatio, true
}

// SetInboundOutboundRatio sets field value
func (o *NumberHealthMetrics) SetInboundOutboundRatio(v float32) {
	o.InboundOutboundRatio = v
}

// GetSuccessRatio returns the SuccessRatio field value
func (o *NumberHealthMetrics) GetSuccessRatio() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SuccessRatio
}

// GetSuccessRatioOk returns a tuple with the SuccessRatio field value
// and a boolean to check if the value has been set.
func (o *NumberHealthMetrics) GetSuccessRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessRatio, true
}

// SetSuccessRatio sets field value
func (o *NumberHealthMetrics) SetSuccessRatio(v float32) {
	o.SuccessRatio = v
}

// GetSpamRatio returns the SpamRatio field value
func (o *NumberHealthMetrics) GetSpamRatio() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SpamRatio
}

// GetSpamRatioOk returns a tuple with the SpamRatio field value
// and a boolean to check if the value has been set.
func (o *NumberHealthMetrics) GetSpamRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpamRatio, true
}

// SetSpamRatio sets field value
func (o *NumberHealthMetrics) SetSpamRatio(v float32) {
	o.SpamRatio = v
}

func (o NumberHealthMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NumberHealthMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message_count"] = o.MessageCount
	toSerialize["inbound_outbound_ratio"] = o.InboundOutboundRatio
	toSerialize["success_ratio"] = o.SuccessRatio
	toSerialize["spam_ratio"] = o.SpamRatio
	return toSerialize, nil
}

func (o *NumberHealthMetrics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message_count",
		"inbound_outbound_ratio",
		"success_ratio",
		"spam_ratio",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNumberHealthMetrics := _NumberHealthMetrics{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNumberHealthMetrics)

	if err != nil {
		return err
	}

	*o = NumberHealthMetrics(varNumberHealthMetrics)

	return err
}

type NullableNumberHealthMetrics struct {
	value *NumberHealthMetrics
	isSet bool
}

func (v NullableNumberHealthMetrics) Get() *NumberHealthMetrics {
	return v.value
}

func (v *NullableNumberHealthMetrics) Set(val *NumberHealthMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableNumberHealthMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableNumberHealthMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNumberHealthMetrics(val *NumberHealthMetrics) *NullableNumberHealthMetrics {
	return &NullableNumberHealthMetrics{value: val, isSet: true}
}

func (v NullableNumberHealthMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNumberHealthMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



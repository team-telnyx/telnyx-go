/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingOrdersActivationJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrdersActivationJob{}

// PortingOrdersActivationJob struct for PortingOrdersActivationJob
type PortingOrdersActivationJob struct {
	// Uniquely identifies this activation job
	Id *string `json:"id,omitempty"`
	// Specifies the status of this activation job
	Status *string `json:"status,omitempty"`
	// Specifies the type of this activation job
	ActivationType *string `json:"activation_type,omitempty"`
	// ISO 8601 formatted date indicating when the activation job should be executed. This time should be between some activation window.
	ActivateAt *time.Time `json:"activate_at,omitempty"`
	// List of allowed activation windows for this activation job
	ActivationWindows []PortingOrdersActivationJobActivationWindowsInner `json:"activation_windows,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPortingOrdersActivationJob instantiates a new PortingOrdersActivationJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrdersActivationJob() *PortingOrdersActivationJob {
	this := PortingOrdersActivationJob{}
	return &this
}

// NewPortingOrdersActivationJobWithDefaults instantiates a new PortingOrdersActivationJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrdersActivationJobWithDefaults() *PortingOrdersActivationJob {
	this := PortingOrdersActivationJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortingOrdersActivationJob) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PortingOrdersActivationJob) SetStatus(v string) {
	o.Status = &v
}

// GetActivationType returns the ActivationType field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetActivationType() string {
	if o == nil || IsNil(o.ActivationType) {
		var ret string
		return ret
	}
	return *o.ActivationType
}

// GetActivationTypeOk returns a tuple with the ActivationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetActivationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationType) {
		return nil, false
	}
	return o.ActivationType, true
}

// HasActivationType returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasActivationType() bool {
	if o != nil && !IsNil(o.ActivationType) {
		return true
	}

	return false
}

// SetActivationType gets a reference to the given string and assigns it to the ActivationType field.
func (o *PortingOrdersActivationJob) SetActivationType(v string) {
	o.ActivationType = &v
}

// GetActivateAt returns the ActivateAt field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetActivateAt() time.Time {
	if o == nil || IsNil(o.ActivateAt) {
		var ret time.Time
		return ret
	}
	return *o.ActivateAt
}

// GetActivateAtOk returns a tuple with the ActivateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetActivateAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActivateAt) {
		return nil, false
	}
	return o.ActivateAt, true
}

// HasActivateAt returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasActivateAt() bool {
	if o != nil && !IsNil(o.ActivateAt) {
		return true
	}

	return false
}

// SetActivateAt gets a reference to the given time.Time and assigns it to the ActivateAt field.
func (o *PortingOrdersActivationJob) SetActivateAt(v time.Time) {
	o.ActivateAt = &v
}

// GetActivationWindows returns the ActivationWindows field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetActivationWindows() []PortingOrdersActivationJobActivationWindowsInner {
	if o == nil || IsNil(o.ActivationWindows) {
		var ret []PortingOrdersActivationJobActivationWindowsInner
		return ret
	}
	return o.ActivationWindows
}

// GetActivationWindowsOk returns a tuple with the ActivationWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetActivationWindowsOk() ([]PortingOrdersActivationJobActivationWindowsInner, bool) {
	if o == nil || IsNil(o.ActivationWindows) {
		return nil, false
	}
	return o.ActivationWindows, true
}

// HasActivationWindows returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasActivationWindows() bool {
	if o != nil && !IsNil(o.ActivationWindows) {
		return true
	}

	return false
}

// SetActivationWindows gets a reference to the given []PortingOrdersActivationJobActivationWindowsInner and assigns it to the ActivationWindows field.
func (o *PortingOrdersActivationJob) SetActivationWindows(v []PortingOrdersActivationJobActivationWindowsInner) {
	o.ActivationWindows = v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingOrdersActivationJob) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PortingOrdersActivationJob) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PortingOrdersActivationJob) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersActivationJob) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PortingOrdersActivationJob) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PortingOrdersActivationJob) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PortingOrdersActivationJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrdersActivationJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ActivationType) {
		toSerialize["activation_type"] = o.ActivationType
	}
	if !IsNil(o.ActivateAt) {
		toSerialize["activate_at"] = o.ActivateAt
	}
	if !IsNil(o.ActivationWindows) {
		toSerialize["activation_windows"] = o.ActivationWindows
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePortingOrdersActivationJob struct {
	value *PortingOrdersActivationJob
	isSet bool
}

func (v NullablePortingOrdersActivationJob) Get() *PortingOrdersActivationJob {
	return v.value
}

func (v *NullablePortingOrdersActivationJob) Set(val *PortingOrdersActivationJob) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrdersActivationJob) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrdersActivationJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrdersActivationJob(val *PortingOrdersActivationJob) *NullablePortingOrdersActivationJob {
	return &NullablePortingOrdersActivationJob{value: val, isSet: true}
}

func (v NullablePortingOrdersActivationJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrdersActivationJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TexmlApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TexmlApplication{}

// TexmlApplication struct for TexmlApplication
type TexmlApplication struct {
	// Uniquely identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// A user-assigned name to help manage the application.
	FriendlyName *string `json:"friendly_name,omitempty"`
	// Specifies whether the connection can be used.
	Active *bool `json:"active,omitempty"`
	AnchorsiteOverride *AnchorsiteOverride `json:"anchorsite_override,omitempty"`
	DtmfType *DtmfType `json:"dtmf_type,omitempty"`
	// Specifies whether calls to phone numbers associated with this connection should hangup after timing out.
	FirstCommandTimeout *bool `json:"first_command_timeout,omitempty"`
	// Specifies how many seconds to wait before timing out a dial command.
	FirstCommandTimeoutSecs *int32 `json:"first_command_timeout_secs,omitempty"`
	// URL to which Telnyx will deliver your XML Translator webhooks.
	VoiceUrl *string `json:"voice_url,omitempty"`
	// URL to which Telnyx will deliver your XML Translator webhooks if we get an error response from your voice_url.
	VoiceFallbackUrl *string `json:"voice_fallback_url,omitempty"`
	// HTTP request method Telnyx will use to interact with your XML Translator webhooks. Either 'get' or 'post'.
	VoiceMethod *string `json:"voice_method,omitempty"`
	// URL for Telnyx to send requests to containing information about call progress events.
	StatusCallback *string `json:"status_callback,omitempty"`
	// HTTP request method Telnyx should use when requesting the status_callback URL.
	StatusCallbackMethod *string `json:"status_callback_method,omitempty"`
	// Tags associated with the Texml Application.
	Tags []string `json:"tags,omitempty"`
	Inbound *CreateTexmlApplicationRequestInbound `json:"inbound,omitempty"`
	Outbound *CreateTexmlApplicationRequestOutbound `json:"outbound,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewTexmlApplication instantiates a new TexmlApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTexmlApplication() *TexmlApplication {
	this := TexmlApplication{}
	var active bool = true
	this.Active = &active
	var anchorsiteOverride AnchorsiteOverride = LATENCY
	this.AnchorsiteOverride = &anchorsiteOverride
	var dtmfType DtmfType = RFC_2833
	this.DtmfType = &dtmfType
	var firstCommandTimeout bool = false
	this.FirstCommandTimeout = &firstCommandTimeout
	var firstCommandTimeoutSecs int32 = 30
	this.FirstCommandTimeoutSecs = &firstCommandTimeoutSecs
	var voiceMethod string = "post"
	this.VoiceMethod = &voiceMethod
	var statusCallbackMethod string = "post"
	this.StatusCallbackMethod = &statusCallbackMethod
	return &this
}

// NewTexmlApplicationWithDefaults instantiates a new TexmlApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTexmlApplicationWithDefaults() *TexmlApplication {
	this := TexmlApplication{}
	var active bool = true
	this.Active = &active
	var anchorsiteOverride AnchorsiteOverride = LATENCY
	this.AnchorsiteOverride = &anchorsiteOverride
	var dtmfType DtmfType = RFC_2833
	this.DtmfType = &dtmfType
	var firstCommandTimeout bool = false
	this.FirstCommandTimeout = &firstCommandTimeout
	var firstCommandTimeoutSecs int32 = 30
	this.FirstCommandTimeoutSecs = &firstCommandTimeoutSecs
	var voiceMethod string = "post"
	this.VoiceMethod = &voiceMethod
	var statusCallbackMethod string = "post"
	this.StatusCallbackMethod = &statusCallbackMethod
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TexmlApplication) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TexmlApplication) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TexmlApplication) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *TexmlApplication) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *TexmlApplication) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *TexmlApplication) SetRecordType(v string) {
	o.RecordType = &v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *TexmlApplication) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *TexmlApplication) HasFriendlyName() bool {
	if o != nil && !IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *TexmlApplication) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *TexmlApplication) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *TexmlApplication) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *TexmlApplication) SetActive(v bool) {
	o.Active = &v
}

// GetAnchorsiteOverride returns the AnchorsiteOverride field value if set, zero value otherwise.
func (o *TexmlApplication) GetAnchorsiteOverride() AnchorsiteOverride {
	if o == nil || IsNil(o.AnchorsiteOverride) {
		var ret AnchorsiteOverride
		return ret
	}
	return *o.AnchorsiteOverride
}

// GetAnchorsiteOverrideOk returns a tuple with the AnchorsiteOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetAnchorsiteOverrideOk() (*AnchorsiteOverride, bool) {
	if o == nil || IsNil(o.AnchorsiteOverride) {
		return nil, false
	}
	return o.AnchorsiteOverride, true
}

// HasAnchorsiteOverride returns a boolean if a field has been set.
func (o *TexmlApplication) HasAnchorsiteOverride() bool {
	if o != nil && !IsNil(o.AnchorsiteOverride) {
		return true
	}

	return false
}

// SetAnchorsiteOverride gets a reference to the given AnchorsiteOverride and assigns it to the AnchorsiteOverride field.
func (o *TexmlApplication) SetAnchorsiteOverride(v AnchorsiteOverride) {
	o.AnchorsiteOverride = &v
}

// GetDtmfType returns the DtmfType field value if set, zero value otherwise.
func (o *TexmlApplication) GetDtmfType() DtmfType {
	if o == nil || IsNil(o.DtmfType) {
		var ret DtmfType
		return ret
	}
	return *o.DtmfType
}

// GetDtmfTypeOk returns a tuple with the DtmfType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetDtmfTypeOk() (*DtmfType, bool) {
	if o == nil || IsNil(o.DtmfType) {
		return nil, false
	}
	return o.DtmfType, true
}

// HasDtmfType returns a boolean if a field has been set.
func (o *TexmlApplication) HasDtmfType() bool {
	if o != nil && !IsNil(o.DtmfType) {
		return true
	}

	return false
}

// SetDtmfType gets a reference to the given DtmfType and assigns it to the DtmfType field.
func (o *TexmlApplication) SetDtmfType(v DtmfType) {
	o.DtmfType = &v
}

// GetFirstCommandTimeout returns the FirstCommandTimeout field value if set, zero value otherwise.
func (o *TexmlApplication) GetFirstCommandTimeout() bool {
	if o == nil || IsNil(o.FirstCommandTimeout) {
		var ret bool
		return ret
	}
	return *o.FirstCommandTimeout
}

// GetFirstCommandTimeoutOk returns a tuple with the FirstCommandTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetFirstCommandTimeoutOk() (*bool, bool) {
	if o == nil || IsNil(o.FirstCommandTimeout) {
		return nil, false
	}
	return o.FirstCommandTimeout, true
}

// HasFirstCommandTimeout returns a boolean if a field has been set.
func (o *TexmlApplication) HasFirstCommandTimeout() bool {
	if o != nil && !IsNil(o.FirstCommandTimeout) {
		return true
	}

	return false
}

// SetFirstCommandTimeout gets a reference to the given bool and assigns it to the FirstCommandTimeout field.
func (o *TexmlApplication) SetFirstCommandTimeout(v bool) {
	o.FirstCommandTimeout = &v
}

// GetFirstCommandTimeoutSecs returns the FirstCommandTimeoutSecs field value if set, zero value otherwise.
func (o *TexmlApplication) GetFirstCommandTimeoutSecs() int32 {
	if o == nil || IsNil(o.FirstCommandTimeoutSecs) {
		var ret int32
		return ret
	}
	return *o.FirstCommandTimeoutSecs
}

// GetFirstCommandTimeoutSecsOk returns a tuple with the FirstCommandTimeoutSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetFirstCommandTimeoutSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstCommandTimeoutSecs) {
		return nil, false
	}
	return o.FirstCommandTimeoutSecs, true
}

// HasFirstCommandTimeoutSecs returns a boolean if a field has been set.
func (o *TexmlApplication) HasFirstCommandTimeoutSecs() bool {
	if o != nil && !IsNil(o.FirstCommandTimeoutSecs) {
		return true
	}

	return false
}

// SetFirstCommandTimeoutSecs gets a reference to the given int32 and assigns it to the FirstCommandTimeoutSecs field.
func (o *TexmlApplication) SetFirstCommandTimeoutSecs(v int32) {
	o.FirstCommandTimeoutSecs = &v
}

// GetVoiceUrl returns the VoiceUrl field value if set, zero value otherwise.
func (o *TexmlApplication) GetVoiceUrl() string {
	if o == nil || IsNil(o.VoiceUrl) {
		var ret string
		return ret
	}
	return *o.VoiceUrl
}

// GetVoiceUrlOk returns a tuple with the VoiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetVoiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceUrl) {
		return nil, false
	}
	return o.VoiceUrl, true
}

// HasVoiceUrl returns a boolean if a field has been set.
func (o *TexmlApplication) HasVoiceUrl() bool {
	if o != nil && !IsNil(o.VoiceUrl) {
		return true
	}

	return false
}

// SetVoiceUrl gets a reference to the given string and assigns it to the VoiceUrl field.
func (o *TexmlApplication) SetVoiceUrl(v string) {
	o.VoiceUrl = &v
}

// GetVoiceFallbackUrl returns the VoiceFallbackUrl field value if set, zero value otherwise.
func (o *TexmlApplication) GetVoiceFallbackUrl() string {
	if o == nil || IsNil(o.VoiceFallbackUrl) {
		var ret string
		return ret
	}
	return *o.VoiceFallbackUrl
}

// GetVoiceFallbackUrlOk returns a tuple with the VoiceFallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetVoiceFallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceFallbackUrl) {
		return nil, false
	}
	return o.VoiceFallbackUrl, true
}

// HasVoiceFallbackUrl returns a boolean if a field has been set.
func (o *TexmlApplication) HasVoiceFallbackUrl() bool {
	if o != nil && !IsNil(o.VoiceFallbackUrl) {
		return true
	}

	return false
}

// SetVoiceFallbackUrl gets a reference to the given string and assigns it to the VoiceFallbackUrl field.
func (o *TexmlApplication) SetVoiceFallbackUrl(v string) {
	o.VoiceFallbackUrl = &v
}

// GetVoiceMethod returns the VoiceMethod field value if set, zero value otherwise.
func (o *TexmlApplication) GetVoiceMethod() string {
	if o == nil || IsNil(o.VoiceMethod) {
		var ret string
		return ret
	}
	return *o.VoiceMethod
}

// GetVoiceMethodOk returns a tuple with the VoiceMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetVoiceMethodOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceMethod) {
		return nil, false
	}
	return o.VoiceMethod, true
}

// HasVoiceMethod returns a boolean if a field has been set.
func (o *TexmlApplication) HasVoiceMethod() bool {
	if o != nil && !IsNil(o.VoiceMethod) {
		return true
	}

	return false
}

// SetVoiceMethod gets a reference to the given string and assigns it to the VoiceMethod field.
func (o *TexmlApplication) SetVoiceMethod(v string) {
	o.VoiceMethod = &v
}

// GetStatusCallback returns the StatusCallback field value if set, zero value otherwise.
func (o *TexmlApplication) GetStatusCallback() string {
	if o == nil || IsNil(o.StatusCallback) {
		var ret string
		return ret
	}
	return *o.StatusCallback
}

// GetStatusCallbackOk returns a tuple with the StatusCallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetStatusCallbackOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCallback) {
		return nil, false
	}
	return o.StatusCallback, true
}

// HasStatusCallback returns a boolean if a field has been set.
func (o *TexmlApplication) HasStatusCallback() bool {
	if o != nil && !IsNil(o.StatusCallback) {
		return true
	}

	return false
}

// SetStatusCallback gets a reference to the given string and assigns it to the StatusCallback field.
func (o *TexmlApplication) SetStatusCallback(v string) {
	o.StatusCallback = &v
}

// GetStatusCallbackMethod returns the StatusCallbackMethod field value if set, zero value otherwise.
func (o *TexmlApplication) GetStatusCallbackMethod() string {
	if o == nil || IsNil(o.StatusCallbackMethod) {
		var ret string
		return ret
	}
	return *o.StatusCallbackMethod
}

// GetStatusCallbackMethodOk returns a tuple with the StatusCallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetStatusCallbackMethodOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCallbackMethod) {
		return nil, false
	}
	return o.StatusCallbackMethod, true
}

// HasStatusCallbackMethod returns a boolean if a field has been set.
func (o *TexmlApplication) HasStatusCallbackMethod() bool {
	if o != nil && !IsNil(o.StatusCallbackMethod) {
		return true
	}

	return false
}

// SetStatusCallbackMethod gets a reference to the given string and assigns it to the StatusCallbackMethod field.
func (o *TexmlApplication) SetStatusCallbackMethod(v string) {
	o.StatusCallbackMethod = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *TexmlApplication) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TexmlApplication) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *TexmlApplication) SetTags(v []string) {
	o.Tags = v
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *TexmlApplication) GetInbound() CreateTexmlApplicationRequestInbound {
	if o == nil || IsNil(o.Inbound) {
		var ret CreateTexmlApplicationRequestInbound
		return ret
	}
	return *o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetInboundOk() (*CreateTexmlApplicationRequestInbound, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *TexmlApplication) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given CreateTexmlApplicationRequestInbound and assigns it to the Inbound field.
func (o *TexmlApplication) SetInbound(v CreateTexmlApplicationRequestInbound) {
	o.Inbound = &v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *TexmlApplication) GetOutbound() CreateTexmlApplicationRequestOutbound {
	if o == nil || IsNil(o.Outbound) {
		var ret CreateTexmlApplicationRequestOutbound
		return ret
	}
	return *o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetOutboundOk() (*CreateTexmlApplicationRequestOutbound, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *TexmlApplication) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given CreateTexmlApplicationRequestOutbound and assigns it to the Outbound field.
func (o *TexmlApplication) SetOutbound(v CreateTexmlApplicationRequestOutbound) {
	o.Outbound = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TexmlApplication) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TexmlApplication) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TexmlApplication) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TexmlApplication) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlApplication) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TexmlApplication) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TexmlApplication) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o TexmlApplication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TexmlApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.FriendlyName) {
		toSerialize["friendly_name"] = o.FriendlyName
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AnchorsiteOverride) {
		toSerialize["anchorsite_override"] = o.AnchorsiteOverride
	}
	if !IsNil(o.DtmfType) {
		toSerialize["dtmf_type"] = o.DtmfType
	}
	if !IsNil(o.FirstCommandTimeout) {
		toSerialize["first_command_timeout"] = o.FirstCommandTimeout
	}
	if !IsNil(o.FirstCommandTimeoutSecs) {
		toSerialize["first_command_timeout_secs"] = o.FirstCommandTimeoutSecs
	}
	if !IsNil(o.VoiceUrl) {
		toSerialize["voice_url"] = o.VoiceUrl
	}
	if !IsNil(o.VoiceFallbackUrl) {
		toSerialize["voice_fallback_url"] = o.VoiceFallbackUrl
	}
	if !IsNil(o.VoiceMethod) {
		toSerialize["voice_method"] = o.VoiceMethod
	}
	if !IsNil(o.StatusCallback) {
		toSerialize["status_callback"] = o.StatusCallback
	}
	if !IsNil(o.StatusCallbackMethod) {
		toSerialize["status_callback_method"] = o.StatusCallbackMethod
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTexmlApplication struct {
	value *TexmlApplication
	isSet bool
}

func (v NullableTexmlApplication) Get() *TexmlApplication {
	return v.value
}

func (v *NullableTexmlApplication) Set(val *TexmlApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableTexmlApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableTexmlApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTexmlApplication(val *TexmlApplication) *NullableTexmlApplication {
	return &NullableTexmlApplication{value: val, isSet: true}
}

func (v NullableTexmlApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTexmlApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



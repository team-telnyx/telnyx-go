/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CustomerServiceRecordResultAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerServiceRecordResultAddress{}

// CustomerServiceRecordResultAddress The address of the customer service record
type CustomerServiceRecordResultAddress struct {
	// The state of the address
	AdministrativeArea *string `json:"administrative_area,omitempty"`
	// The city of the address
	Locality *string `json:"locality,omitempty"`
	// The zip code of the address
	PostalCode *string `json:"postal_code,omitempty"`
	// The street address
	StreetAddress *string `json:"street_address,omitempty"`
	// The full address
	FullAddress *string `json:"full_address,omitempty"`
}

// NewCustomerServiceRecordResultAddress instantiates a new CustomerServiceRecordResultAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerServiceRecordResultAddress() *CustomerServiceRecordResultAddress {
	this := CustomerServiceRecordResultAddress{}
	return &this
}

// NewCustomerServiceRecordResultAddressWithDefaults instantiates a new CustomerServiceRecordResultAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerServiceRecordResultAddressWithDefaults() *CustomerServiceRecordResultAddress {
	this := CustomerServiceRecordResultAddress{}
	return &this
}

// GetAdministrativeArea returns the AdministrativeArea field value if set, zero value otherwise.
func (o *CustomerServiceRecordResultAddress) GetAdministrativeArea() string {
	if o == nil || IsNil(o.AdministrativeArea) {
		var ret string
		return ret
	}
	return *o.AdministrativeArea
}

// GetAdministrativeAreaOk returns a tuple with the AdministrativeArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResultAddress) GetAdministrativeAreaOk() (*string, bool) {
	if o == nil || IsNil(o.AdministrativeArea) {
		return nil, false
	}
	return o.AdministrativeArea, true
}

// HasAdministrativeArea returns a boolean if a field has been set.
func (o *CustomerServiceRecordResultAddress) HasAdministrativeArea() bool {
	if o != nil && !IsNil(o.AdministrativeArea) {
		return true
	}

	return false
}

// SetAdministrativeArea gets a reference to the given string and assigns it to the AdministrativeArea field.
func (o *CustomerServiceRecordResultAddress) SetAdministrativeArea(v string) {
	o.AdministrativeArea = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *CustomerServiceRecordResultAddress) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResultAddress) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *CustomerServiceRecordResultAddress) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *CustomerServiceRecordResultAddress) SetLocality(v string) {
	o.Locality = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CustomerServiceRecordResultAddress) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResultAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CustomerServiceRecordResultAddress) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CustomerServiceRecordResultAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *CustomerServiceRecordResultAddress) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResultAddress) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *CustomerServiceRecordResultAddress) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *CustomerServiceRecordResultAddress) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetFullAddress returns the FullAddress field value if set, zero value otherwise.
func (o *CustomerServiceRecordResultAddress) GetFullAddress() string {
	if o == nil || IsNil(o.FullAddress) {
		var ret string
		return ret
	}
	return *o.FullAddress
}

// GetFullAddressOk returns a tuple with the FullAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordResultAddress) GetFullAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FullAddress) {
		return nil, false
	}
	return o.FullAddress, true
}

// HasFullAddress returns a boolean if a field has been set.
func (o *CustomerServiceRecordResultAddress) HasFullAddress() bool {
	if o != nil && !IsNil(o.FullAddress) {
		return true
	}

	return false
}

// SetFullAddress gets a reference to the given string and assigns it to the FullAddress field.
func (o *CustomerServiceRecordResultAddress) SetFullAddress(v string) {
	o.FullAddress = &v
}

func (o CustomerServiceRecordResultAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerServiceRecordResultAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdministrativeArea) {
		toSerialize["administrative_area"] = o.AdministrativeArea
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.StreetAddress) {
		toSerialize["street_address"] = o.StreetAddress
	}
	if !IsNil(o.FullAddress) {
		toSerialize["full_address"] = o.FullAddress
	}
	return toSerialize, nil
}

type NullableCustomerServiceRecordResultAddress struct {
	value *CustomerServiceRecordResultAddress
	isSet bool
}

func (v NullableCustomerServiceRecordResultAddress) Get() *CustomerServiceRecordResultAddress {
	return v.value
}

func (v *NullableCustomerServiceRecordResultAddress) Set(val *CustomerServiceRecordResultAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerServiceRecordResultAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerServiceRecordResultAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerServiceRecordResultAddress(val *CustomerServiceRecordResultAddress) *NullableCustomerServiceRecordResultAddress {
	return &NullableCustomerServiceRecordResultAddress{value: val, isSet: true}
}

func (v NullableCustomerServiceRecordResultAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerServiceRecordResultAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



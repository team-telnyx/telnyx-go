/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the ParticipantResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantResource{}

// ParticipantResource struct for ParticipantResource
type ParticipantResource struct {
	// The id of the account the resource belongs to.
	AccountSid *string `json:"account_sid,omitempty"`
	// The version of the API that was used to make the request.
	ApiVersion *string `json:"api_version,omitempty"`
	// The identifier of this participant's call.
	CallSid *string `json:"call_sid,omitempty"`
	// The identifier of this participant's call.
	CallSidLegacy *string `json:"call_sid_legacy,omitempty"`
	// Whether the participant is coaching another call.
	Coaching *bool `json:"coaching,omitempty"`
	// The identifier of the coached participant's call.
	CoachingCallSid *string `json:"coaching_call_sid,omitempty"`
	// The identifier of the coached participant's call.
	CoachingCallSidLegacy *string `json:"coaching_call_sid_legacy,omitempty"`
	// The timestamp of when the resource was created.
	DateCreated *string `json:"date_created,omitempty"`
	// The timestamp of when the resource was last updated.
	DateUpdated *string `json:"date_updated,omitempty"`
	// Whether the conference ends when the participant leaves.
	EndConferenceOnExit *bool `json:"end_conference_on_exit,omitempty"`
	// Whether the participant is on hold.
	Hold *bool `json:"hold,omitempty"`
	// Whether the participant is muted.
	Muted *bool `json:"muted,omitempty"`
	// The status of the participant's call in the conference.
	Status *string `json:"status,omitempty"`
	// The relative URI for this participant.
	Uri *string `json:"uri,omitempty"`
}

// NewParticipantResource instantiates a new ParticipantResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipantResource() *ParticipantResource {
	this := ParticipantResource{}
	return &this
}

// NewParticipantResourceWithDefaults instantiates a new ParticipantResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantResourceWithDefaults() *ParticipantResource {
	this := ParticipantResource{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise.
func (o *ParticipantResource) GetAccountSid() string {
	if o == nil || IsNil(o.AccountSid) {
		var ret string
		return ret
	}
	return *o.AccountSid
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetAccountSidOk() (*string, bool) {
	if o == nil || IsNil(o.AccountSid) {
		return nil, false
	}
	return o.AccountSid, true
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ParticipantResource) HasAccountSid() bool {
	if o != nil && !IsNil(o.AccountSid) {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given string and assigns it to the AccountSid field.
func (o *ParticipantResource) SetAccountSid(v string) {
	o.AccountSid = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *ParticipantResource) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ParticipantResource) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *ParticipantResource) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetCallSid returns the CallSid field value if set, zero value otherwise.
func (o *ParticipantResource) GetCallSid() string {
	if o == nil || IsNil(o.CallSid) {
		var ret string
		return ret
	}
	return *o.CallSid
}

// GetCallSidOk returns a tuple with the CallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetCallSidOk() (*string, bool) {
	if o == nil || IsNil(o.CallSid) {
		return nil, false
	}
	return o.CallSid, true
}

// HasCallSid returns a boolean if a field has been set.
func (o *ParticipantResource) HasCallSid() bool {
	if o != nil && !IsNil(o.CallSid) {
		return true
	}

	return false
}

// SetCallSid gets a reference to the given string and assigns it to the CallSid field.
func (o *ParticipantResource) SetCallSid(v string) {
	o.CallSid = &v
}

// GetCallSidLegacy returns the CallSidLegacy field value if set, zero value otherwise.
func (o *ParticipantResource) GetCallSidLegacy() string {
	if o == nil || IsNil(o.CallSidLegacy) {
		var ret string
		return ret
	}
	return *o.CallSidLegacy
}

// GetCallSidLegacyOk returns a tuple with the CallSidLegacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetCallSidLegacyOk() (*string, bool) {
	if o == nil || IsNil(o.CallSidLegacy) {
		return nil, false
	}
	return o.CallSidLegacy, true
}

// HasCallSidLegacy returns a boolean if a field has been set.
func (o *ParticipantResource) HasCallSidLegacy() bool {
	if o != nil && !IsNil(o.CallSidLegacy) {
		return true
	}

	return false
}

// SetCallSidLegacy gets a reference to the given string and assigns it to the CallSidLegacy field.
func (o *ParticipantResource) SetCallSidLegacy(v string) {
	o.CallSidLegacy = &v
}

// GetCoaching returns the Coaching field value if set, zero value otherwise.
func (o *ParticipantResource) GetCoaching() bool {
	if o == nil || IsNil(o.Coaching) {
		var ret bool
		return ret
	}
	return *o.Coaching
}

// GetCoachingOk returns a tuple with the Coaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetCoachingOk() (*bool, bool) {
	if o == nil || IsNil(o.Coaching) {
		return nil, false
	}
	return o.Coaching, true
}

// HasCoaching returns a boolean if a field has been set.
func (o *ParticipantResource) HasCoaching() bool {
	if o != nil && !IsNil(o.Coaching) {
		return true
	}

	return false
}

// SetCoaching gets a reference to the given bool and assigns it to the Coaching field.
func (o *ParticipantResource) SetCoaching(v bool) {
	o.Coaching = &v
}

// GetCoachingCallSid returns the CoachingCallSid field value if set, zero value otherwise.
func (o *ParticipantResource) GetCoachingCallSid() string {
	if o == nil || IsNil(o.CoachingCallSid) {
		var ret string
		return ret
	}
	return *o.CoachingCallSid
}

// GetCoachingCallSidOk returns a tuple with the CoachingCallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetCoachingCallSidOk() (*string, bool) {
	if o == nil || IsNil(o.CoachingCallSid) {
		return nil, false
	}
	return o.CoachingCallSid, true
}

// HasCoachingCallSid returns a boolean if a field has been set.
func (o *ParticipantResource) HasCoachingCallSid() bool {
	if o != nil && !IsNil(o.CoachingCallSid) {
		return true
	}

	return false
}

// SetCoachingCallSid gets a reference to the given string and assigns it to the CoachingCallSid field.
func (o *ParticipantResource) SetCoachingCallSid(v string) {
	o.CoachingCallSid = &v
}

// GetCoachingCallSidLegacy returns the CoachingCallSidLegacy field value if set, zero value otherwise.
func (o *ParticipantResource) GetCoachingCallSidLegacy() string {
	if o == nil || IsNil(o.CoachingCallSidLegacy) {
		var ret string
		return ret
	}
	return *o.CoachingCallSidLegacy
}

// GetCoachingCallSidLegacyOk returns a tuple with the CoachingCallSidLegacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetCoachingCallSidLegacyOk() (*string, bool) {
	if o == nil || IsNil(o.CoachingCallSidLegacy) {
		return nil, false
	}
	return o.CoachingCallSidLegacy, true
}

// HasCoachingCallSidLegacy returns a boolean if a field has been set.
func (o *ParticipantResource) HasCoachingCallSidLegacy() bool {
	if o != nil && !IsNil(o.CoachingCallSidLegacy) {
		return true
	}

	return false
}

// SetCoachingCallSidLegacy gets a reference to the given string and assigns it to the CoachingCallSidLegacy field.
func (o *ParticipantResource) SetCoachingCallSidLegacy(v string) {
	o.CoachingCallSidLegacy = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ParticipantResource) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ParticipantResource) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *ParticipantResource) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *ParticipantResource) GetDateUpdated() string {
	if o == nil || IsNil(o.DateUpdated) {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetDateUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateUpdated) {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ParticipantResource) HasDateUpdated() bool {
	if o != nil && !IsNil(o.DateUpdated) {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *ParticipantResource) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetEndConferenceOnExit returns the EndConferenceOnExit field value if set, zero value otherwise.
func (o *ParticipantResource) GetEndConferenceOnExit() bool {
	if o == nil || IsNil(o.EndConferenceOnExit) {
		var ret bool
		return ret
	}
	return *o.EndConferenceOnExit
}

// GetEndConferenceOnExitOk returns a tuple with the EndConferenceOnExit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetEndConferenceOnExitOk() (*bool, bool) {
	if o == nil || IsNil(o.EndConferenceOnExit) {
		return nil, false
	}
	return o.EndConferenceOnExit, true
}

// HasEndConferenceOnExit returns a boolean if a field has been set.
func (o *ParticipantResource) HasEndConferenceOnExit() bool {
	if o != nil && !IsNil(o.EndConferenceOnExit) {
		return true
	}

	return false
}

// SetEndConferenceOnExit gets a reference to the given bool and assigns it to the EndConferenceOnExit field.
func (o *ParticipantResource) SetEndConferenceOnExit(v bool) {
	o.EndConferenceOnExit = &v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *ParticipantResource) GetHold() bool {
	if o == nil || IsNil(o.Hold) {
		var ret bool
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *ParticipantResource) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given bool and assigns it to the Hold field.
func (o *ParticipantResource) SetHold(v bool) {
	o.Hold = &v
}

// GetMuted returns the Muted field value if set, zero value otherwise.
func (o *ParticipantResource) GetMuted() bool {
	if o == nil || IsNil(o.Muted) {
		var ret bool
		return ret
	}
	return *o.Muted
}

// GetMutedOk returns a tuple with the Muted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetMutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Muted) {
		return nil, false
	}
	return o.Muted, true
}

// HasMuted returns a boolean if a field has been set.
func (o *ParticipantResource) HasMuted() bool {
	if o != nil && !IsNil(o.Muted) {
		return true
	}

	return false
}

// SetMuted gets a reference to the given bool and assigns it to the Muted field.
func (o *ParticipantResource) SetMuted(v bool) {
	o.Muted = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ParticipantResource) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ParticipantResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ParticipantResource) SetStatus(v string) {
	o.Status = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ParticipantResource) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantResource) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ParticipantResource) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *ParticipantResource) SetUri(v string) {
	o.Uri = &v
}

func (o ParticipantResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountSid) {
		toSerialize["account_sid"] = o.AccountSid
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["api_version"] = o.ApiVersion
	}
	if !IsNil(o.CallSid) {
		toSerialize["call_sid"] = o.CallSid
	}
	if !IsNil(o.CallSidLegacy) {
		toSerialize["call_sid_legacy"] = o.CallSidLegacy
	}
	if !IsNil(o.Coaching) {
		toSerialize["coaching"] = o.Coaching
	}
	if !IsNil(o.CoachingCallSid) {
		toSerialize["coaching_call_sid"] = o.CoachingCallSid
	}
	if !IsNil(o.CoachingCallSidLegacy) {
		toSerialize["coaching_call_sid_legacy"] = o.CoachingCallSidLegacy
	}
	if !IsNil(o.DateCreated) {
		toSerialize["date_created"] = o.DateCreated
	}
	if !IsNil(o.DateUpdated) {
		toSerialize["date_updated"] = o.DateUpdated
	}
	if !IsNil(o.EndConferenceOnExit) {
		toSerialize["end_conference_on_exit"] = o.EndConferenceOnExit
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.Muted) {
		toSerialize["muted"] = o.Muted
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableParticipantResource struct {
	value *ParticipantResource
	isSet bool
}

func (v NullableParticipantResource) Get() *ParticipantResource {
	return v.value
}

func (v *NullableParticipantResource) Set(val *ParticipantResource) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantResource) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantResource(val *ParticipantResource) *NullableParticipantResource {
	return &NullableParticipantResource{value: val, isSet: true}
}

func (v NullableParticipantResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MessagingHostedNumberOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessagingHostedNumberOrder{}

// MessagingHostedNumberOrder struct for MessagingHostedNumberOrder
type MessagingHostedNumberOrder struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Resource unique identifier.
	Id *string `json:"id,omitempty"`
	// Automatically associate the number with this messaging profile ID when the order is complete.
	MessagingProfileId NullableString `json:"messaging_profile_id,omitempty"`
	Status *string `json:"status,omitempty"`
	PhoneNumbers []HostedNumber `json:"phone_numbers,omitempty"`
}

// NewMessagingHostedNumberOrder instantiates a new MessagingHostedNumberOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagingHostedNumberOrder() *MessagingHostedNumberOrder {
	this := MessagingHostedNumberOrder{}
	return &this
}

// NewMessagingHostedNumberOrderWithDefaults instantiates a new MessagingHostedNumberOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagingHostedNumberOrderWithDefaults() *MessagingHostedNumberOrder {
	this := MessagingHostedNumberOrder{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *MessagingHostedNumberOrder) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingHostedNumberOrder) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *MessagingHostedNumberOrder) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *MessagingHostedNumberOrder) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MessagingHostedNumberOrder) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingHostedNumberOrder) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MessagingHostedNumberOrder) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MessagingHostedNumberOrder) SetId(v string) {
	o.Id = &v
}

// GetMessagingProfileId returns the MessagingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessagingHostedNumberOrder) GetMessagingProfileId() string {
	if o == nil || IsNil(o.MessagingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.MessagingProfileId.Get()
}

// GetMessagingProfileIdOk returns a tuple with the MessagingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessagingHostedNumberOrder) GetMessagingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessagingProfileId.Get(), o.MessagingProfileId.IsSet()
}

// HasMessagingProfileId returns a boolean if a field has been set.
func (o *MessagingHostedNumberOrder) HasMessagingProfileId() bool {
	if o != nil && o.MessagingProfileId.IsSet() {
		return true
	}

	return false
}

// SetMessagingProfileId gets a reference to the given NullableString and assigns it to the MessagingProfileId field.
func (o *MessagingHostedNumberOrder) SetMessagingProfileId(v string) {
	o.MessagingProfileId.Set(&v)
}
// SetMessagingProfileIdNil sets the value for MessagingProfileId to be an explicit nil
func (o *MessagingHostedNumberOrder) SetMessagingProfileIdNil() {
	o.MessagingProfileId.Set(nil)
}

// UnsetMessagingProfileId ensures that no value is present for MessagingProfileId, not even an explicit nil
func (o *MessagingHostedNumberOrder) UnsetMessagingProfileId() {
	o.MessagingProfileId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MessagingHostedNumberOrder) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingHostedNumberOrder) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MessagingHostedNumberOrder) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MessagingHostedNumberOrder) SetStatus(v string) {
	o.Status = &v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *MessagingHostedNumberOrder) GetPhoneNumbers() []HostedNumber {
	if o == nil || IsNil(o.PhoneNumbers) {
		var ret []HostedNumber
		return ret
	}
	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingHostedNumberOrder) GetPhoneNumbersOk() ([]HostedNumber, bool) {
	if o == nil || IsNil(o.PhoneNumbers) {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *MessagingHostedNumberOrder) HasPhoneNumbers() bool {
	if o != nil && !IsNil(o.PhoneNumbers) {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []HostedNumber and assigns it to the PhoneNumbers field.
func (o *MessagingHostedNumberOrder) SetPhoneNumbers(v []HostedNumber) {
	o.PhoneNumbers = v
}

func (o MessagingHostedNumberOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagingHostedNumberOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.MessagingProfileId.IsSet() {
		toSerialize["messaging_profile_id"] = o.MessagingProfileId.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PhoneNumbers) {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	return toSerialize, nil
}

type NullableMessagingHostedNumberOrder struct {
	value *MessagingHostedNumberOrder
	isSet bool
}

func (v NullableMessagingHostedNumberOrder) Get() *MessagingHostedNumberOrder {
	return v.value
}

func (v *NullableMessagingHostedNumberOrder) Set(val *MessagingHostedNumberOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagingHostedNumberOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagingHostedNumberOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagingHostedNumberOrder(val *MessagingHostedNumberOrder) *NullableMessagingHostedNumberOrder {
	return &NullableMessagingHostedNumberOrder{value: val, isSet: true}
}

func (v NullableMessagingHostedNumberOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagingHostedNumberOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallStreamingFailedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallStreamingFailedPayload{}

// CallStreamingFailedPayload struct for CallStreamingFailedPayload
type CallStreamingFailedPayload struct {
	// Call ID used to issue commands via Call Control API.
	CallControlId *string `json:"call_control_id,omitempty"`
	// Call Control App ID (formerly Telnyx connection ID) used in the call.
	ConnectionId *string `json:"connection_id,omitempty"`
	// ID that is unique to the call and can be used to correlate webhook events.
	CallLegId *string `json:"call_leg_id,omitempty"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
	CallSessionId *string `json:"call_session_id,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// A short description explaning why the media streaming failed.
	FailureReason *string `json:"failure_reason,omitempty"`
	// Identifies the streaming.
	StreamId *string `json:"stream_id,omitempty"`
	StreamParams *CallStreamingFailedPayloadStreamParams `json:"stream_params,omitempty"`
	// The type of stream connection the stream is performing.
	StreamType *string `json:"stream_type,omitempty"`
}

// NewCallStreamingFailedPayload instantiates a new CallStreamingFailedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallStreamingFailedPayload() *CallStreamingFailedPayload {
	this := CallStreamingFailedPayload{}
	return &this
}

// NewCallStreamingFailedPayloadWithDefaults instantiates a new CallStreamingFailedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallStreamingFailedPayloadWithDefaults() *CallStreamingFailedPayload {
	this := CallStreamingFailedPayload{}
	return &this
}

// GetCallControlId returns the CallControlId field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetCallControlId() string {
	if o == nil || IsNil(o.CallControlId) {
		var ret string
		return ret
	}
	return *o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetCallControlIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallControlId) {
		return nil, false
	}
	return o.CallControlId, true
}

// HasCallControlId returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasCallControlId() bool {
	if o != nil && !IsNil(o.CallControlId) {
		return true
	}

	return false
}

// SetCallControlId gets a reference to the given string and assigns it to the CallControlId field.
func (o *CallStreamingFailedPayload) SetCallControlId(v string) {
	o.CallControlId = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *CallStreamingFailedPayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCallLegId returns the CallLegId field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetCallLegId() string {
	if o == nil || IsNil(o.CallLegId) {
		var ret string
		return ret
	}
	return *o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetCallLegIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallLegId) {
		return nil, false
	}
	return o.CallLegId, true
}

// HasCallLegId returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasCallLegId() bool {
	if o != nil && !IsNil(o.CallLegId) {
		return true
	}

	return false
}

// SetCallLegId gets a reference to the given string and assigns it to the CallLegId field.
func (o *CallStreamingFailedPayload) SetCallLegId(v string) {
	o.CallLegId = &v
}

// GetCallSessionId returns the CallSessionId field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetCallSessionId() string {
	if o == nil || IsNil(o.CallSessionId) {
		var ret string
		return ret
	}
	return *o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallSessionId) {
		return nil, false
	}
	return o.CallSessionId, true
}

// HasCallSessionId returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasCallSessionId() bool {
	if o != nil && !IsNil(o.CallSessionId) {
		return true
	}

	return false
}

// SetCallSessionId gets a reference to the given string and assigns it to the CallSessionId field.
func (o *CallStreamingFailedPayload) SetCallSessionId(v string) {
	o.CallSessionId = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *CallStreamingFailedPayload) SetClientState(v string) {
	o.ClientState = &v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *CallStreamingFailedPayload) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetStreamId() string {
	if o == nil || IsNil(o.StreamId) {
		var ret string
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.StreamId) {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasStreamId() bool {
	if o != nil && !IsNil(o.StreamId) {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given string and assigns it to the StreamId field.
func (o *CallStreamingFailedPayload) SetStreamId(v string) {
	o.StreamId = &v
}

// GetStreamParams returns the StreamParams field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetStreamParams() CallStreamingFailedPayloadStreamParams {
	if o == nil || IsNil(o.StreamParams) {
		var ret CallStreamingFailedPayloadStreamParams
		return ret
	}
	return *o.StreamParams
}

// GetStreamParamsOk returns a tuple with the StreamParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetStreamParamsOk() (*CallStreamingFailedPayloadStreamParams, bool) {
	if o == nil || IsNil(o.StreamParams) {
		return nil, false
	}
	return o.StreamParams, true
}

// HasStreamParams returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasStreamParams() bool {
	if o != nil && !IsNil(o.StreamParams) {
		return true
	}

	return false
}

// SetStreamParams gets a reference to the given CallStreamingFailedPayloadStreamParams and assigns it to the StreamParams field.
func (o *CallStreamingFailedPayload) SetStreamParams(v CallStreamingFailedPayloadStreamParams) {
	o.StreamParams = &v
}

// GetStreamType returns the StreamType field value if set, zero value otherwise.
func (o *CallStreamingFailedPayload) GetStreamType() string {
	if o == nil || IsNil(o.StreamType) {
		var ret string
		return ret
	}
	return *o.StreamType
}

// GetStreamTypeOk returns a tuple with the StreamType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayload) GetStreamTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StreamType) {
		return nil, false
	}
	return o.StreamType, true
}

// HasStreamType returns a boolean if a field has been set.
func (o *CallStreamingFailedPayload) HasStreamType() bool {
	if o != nil && !IsNil(o.StreamType) {
		return true
	}

	return false
}

// SetStreamType gets a reference to the given string and assigns it to the StreamType field.
func (o *CallStreamingFailedPayload) SetStreamType(v string) {
	o.StreamType = &v
}

func (o CallStreamingFailedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallStreamingFailedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallControlId) {
		toSerialize["call_control_id"] = o.CallControlId
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CallLegId) {
		toSerialize["call_leg_id"] = o.CallLegId
	}
	if !IsNil(o.CallSessionId) {
		toSerialize["call_session_id"] = o.CallSessionId
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.FailureReason) {
		toSerialize["failure_reason"] = o.FailureReason
	}
	if !IsNil(o.StreamId) {
		toSerialize["stream_id"] = o.StreamId
	}
	if !IsNil(o.StreamParams) {
		toSerialize["stream_params"] = o.StreamParams
	}
	if !IsNil(o.StreamType) {
		toSerialize["stream_type"] = o.StreamType
	}
	return toSerialize, nil
}

type NullableCallStreamingFailedPayload struct {
	value *CallStreamingFailedPayload
	isSet bool
}

func (v NullableCallStreamingFailedPayload) Get() *CallStreamingFailedPayload {
	return v.value
}

func (v *NullableCallStreamingFailedPayload) Set(val *CallStreamingFailedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCallStreamingFailedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCallStreamingFailedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallStreamingFailedPayload(val *CallStreamingFailedPayload) *NullableCallStreamingFailedPayload {
	return &NullableCallStreamingFailedPayload{value: val, isSet: true}
}

func (v NullableCallStreamingFailedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallStreamingFailedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



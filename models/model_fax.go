/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the Fax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fax{}

// Fax struct for Fax
type Fax struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// The ID of the connection used to send the fax.
	ConnectionId *string `json:"connection_id,omitempty"`
	Direction *Direction `json:"direction,omitempty"`
	// The URL (or list of URLs) to the PDF used for the fax's media. media_url and media_name/contents can't be submitted together.
	MediaUrl *string `json:"media_url,omitempty"`
	// The media_name used for the fax's media. Must point to a file previously uploaded to api.telnyx.com/v2/media by the same user/organization. media_name and media_url/contents can't be submitted together.
	MediaName *string `json:"media_name,omitempty"`
	// The phone number, in E.164 format, the fax will be sent to or SIP URI
	To *string `json:"to,omitempty"`
	// The phone number, in E.164 format, the fax will be sent from.
	From *string `json:"from,omitempty"`
	// The string used as the caller id name (SIP From Display Name) presented to the destination (`to` number).
	FromDisplayName *string `json:"from_display_name,omitempty"`
	Quality *Quality `json:"quality,omitempty"`
	// Status of the fax
	Status *string `json:"status,omitempty"`
	// URL that will receive fax webhooks
	WebhookUrl *string `json:"webhook_url,omitempty"`
	// Optional failover URL that will receive fax webhooks if webhook_url doesn't return a 2XX response
	WebhookFailoverUrl *string `json:"webhook_failover_url,omitempty"`
	// Should fax media be stored on temporary URL. It does not support media_name.
	StoreMedia *bool `json:"store_media,omitempty"`
	// If store_media was set to true, this is a link to temporary location. Link expires after 10 minutes.
	StoredMediaUrl *string `json:"stored_media_url,omitempty"`
	// If `store_preview` was set to `true`, this is a link to temporary location. Link expires after 10 minutes.
	PreviewUrl *string `json:"preview_url,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// ISO 8601 timestamp when resource was created
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 timestamp when resource was updated
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewFax instantiates a new Fax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFax() *Fax {
	this := Fax{}
	var quality Quality = HIGH
	this.Quality = &quality
	return &this
}

// NewFaxWithDefaults instantiates a new Fax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFaxWithDefaults() *Fax {
	this := Fax{}
	var quality Quality = HIGH
	this.Quality = &quality
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *Fax) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *Fax) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *Fax) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Fax) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Fax) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Fax) SetId(v string) {
	o.Id = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *Fax) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *Fax) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *Fax) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *Fax) GetDirection() Direction {
	if o == nil || IsNil(o.Direction) {
		var ret Direction
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetDirectionOk() (*Direction, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *Fax) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given Direction and assigns it to the Direction field.
func (o *Fax) SetDirection(v Direction) {
	o.Direction = &v
}

// GetMediaUrl returns the MediaUrl field value if set, zero value otherwise.
func (o *Fax) GetMediaUrl() string {
	if o == nil || IsNil(o.MediaUrl) {
		var ret string
		return ret
	}
	return *o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetMediaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUrl) {
		return nil, false
	}
	return o.MediaUrl, true
}

// HasMediaUrl returns a boolean if a field has been set.
func (o *Fax) HasMediaUrl() bool {
	if o != nil && !IsNil(o.MediaUrl) {
		return true
	}

	return false
}

// SetMediaUrl gets a reference to the given string and assigns it to the MediaUrl field.
func (o *Fax) SetMediaUrl(v string) {
	o.MediaUrl = &v
}

// GetMediaName returns the MediaName field value if set, zero value otherwise.
func (o *Fax) GetMediaName() string {
	if o == nil || IsNil(o.MediaName) {
		var ret string
		return ret
	}
	return *o.MediaName
}

// GetMediaNameOk returns a tuple with the MediaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetMediaNameOk() (*string, bool) {
	if o == nil || IsNil(o.MediaName) {
		return nil, false
	}
	return o.MediaName, true
}

// HasMediaName returns a boolean if a field has been set.
func (o *Fax) HasMediaName() bool {
	if o != nil && !IsNil(o.MediaName) {
		return true
	}

	return false
}

// SetMediaName gets a reference to the given string and assigns it to the MediaName field.
func (o *Fax) SetMediaName(v string) {
	o.MediaName = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *Fax) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *Fax) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *Fax) SetTo(v string) {
	o.To = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *Fax) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *Fax) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *Fax) SetFrom(v string) {
	o.From = &v
}

// GetFromDisplayName returns the FromDisplayName field value if set, zero value otherwise.
func (o *Fax) GetFromDisplayName() string {
	if o == nil || IsNil(o.FromDisplayName) {
		var ret string
		return ret
	}
	return *o.FromDisplayName
}

// GetFromDisplayNameOk returns a tuple with the FromDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetFromDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromDisplayName) {
		return nil, false
	}
	return o.FromDisplayName, true
}

// HasFromDisplayName returns a boolean if a field has been set.
func (o *Fax) HasFromDisplayName() bool {
	if o != nil && !IsNil(o.FromDisplayName) {
		return true
	}

	return false
}

// SetFromDisplayName gets a reference to the given string and assigns it to the FromDisplayName field.
func (o *Fax) SetFromDisplayName(v string) {
	o.FromDisplayName = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *Fax) GetQuality() Quality {
	if o == nil || IsNil(o.Quality) {
		var ret Quality
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetQualityOk() (*Quality, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *Fax) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given Quality and assigns it to the Quality field.
func (o *Fax) SetQuality(v Quality) {
	o.Quality = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Fax) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Fax) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Fax) SetStatus(v string) {
	o.Status = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *Fax) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookUrl) {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *Fax) HasWebhookUrl() bool {
	if o != nil && !IsNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *Fax) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetWebhookFailoverUrl returns the WebhookFailoverUrl field value if set, zero value otherwise.
func (o *Fax) GetWebhookFailoverUrl() string {
	if o == nil || IsNil(o.WebhookFailoverUrl) {
		var ret string
		return ret
	}
	return *o.WebhookFailoverUrl
}

// GetWebhookFailoverUrlOk returns a tuple with the WebhookFailoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetWebhookFailoverUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookFailoverUrl) {
		return nil, false
	}
	return o.WebhookFailoverUrl, true
}

// HasWebhookFailoverUrl returns a boolean if a field has been set.
func (o *Fax) HasWebhookFailoverUrl() bool {
	if o != nil && !IsNil(o.WebhookFailoverUrl) {
		return true
	}

	return false
}

// SetWebhookFailoverUrl gets a reference to the given string and assigns it to the WebhookFailoverUrl field.
func (o *Fax) SetWebhookFailoverUrl(v string) {
	o.WebhookFailoverUrl = &v
}

// GetStoreMedia returns the StoreMedia field value if set, zero value otherwise.
func (o *Fax) GetStoreMedia() bool {
	if o == nil || IsNil(o.StoreMedia) {
		var ret bool
		return ret
	}
	return *o.StoreMedia
}

// GetStoreMediaOk returns a tuple with the StoreMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetStoreMediaOk() (*bool, bool) {
	if o == nil || IsNil(o.StoreMedia) {
		return nil, false
	}
	return o.StoreMedia, true
}

// HasStoreMedia returns a boolean if a field has been set.
func (o *Fax) HasStoreMedia() bool {
	if o != nil && !IsNil(o.StoreMedia) {
		return true
	}

	return false
}

// SetStoreMedia gets a reference to the given bool and assigns it to the StoreMedia field.
func (o *Fax) SetStoreMedia(v bool) {
	o.StoreMedia = &v
}

// GetStoredMediaUrl returns the StoredMediaUrl field value if set, zero value otherwise.
func (o *Fax) GetStoredMediaUrl() string {
	if o == nil || IsNil(o.StoredMediaUrl) {
		var ret string
		return ret
	}
	return *o.StoredMediaUrl
}

// GetStoredMediaUrlOk returns a tuple with the StoredMediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetStoredMediaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StoredMediaUrl) {
		return nil, false
	}
	return o.StoredMediaUrl, true
}

// HasStoredMediaUrl returns a boolean if a field has been set.
func (o *Fax) HasStoredMediaUrl() bool {
	if o != nil && !IsNil(o.StoredMediaUrl) {
		return true
	}

	return false
}

// SetStoredMediaUrl gets a reference to the given string and assigns it to the StoredMediaUrl field.
func (o *Fax) SetStoredMediaUrl(v string) {
	o.StoredMediaUrl = &v
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *Fax) GetPreviewUrl() string {
	if o == nil || IsNil(o.PreviewUrl) {
		var ret string
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetPreviewUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PreviewUrl) {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *Fax) HasPreviewUrl() bool {
	if o != nil && !IsNil(o.PreviewUrl) {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given string and assigns it to the PreviewUrl field.
func (o *Fax) SetPreviewUrl(v string) {
	o.PreviewUrl = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *Fax) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *Fax) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *Fax) SetClientState(v string) {
	o.ClientState = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Fax) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Fax) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Fax) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Fax) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Fax) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Fax) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o Fax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.MediaUrl) {
		toSerialize["media_url"] = o.MediaUrl
	}
	if !IsNil(o.MediaName) {
		toSerialize["media_name"] = o.MediaName
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.FromDisplayName) {
		toSerialize["from_display_name"] = o.FromDisplayName
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.WebhookUrl) {
		toSerialize["webhook_url"] = o.WebhookUrl
	}
	if !IsNil(o.WebhookFailoverUrl) {
		toSerialize["webhook_failover_url"] = o.WebhookFailoverUrl
	}
	if !IsNil(o.StoreMedia) {
		toSerialize["store_media"] = o.StoreMedia
	}
	if !IsNil(o.StoredMediaUrl) {
		toSerialize["stored_media_url"] = o.StoredMediaUrl
	}
	if !IsNil(o.PreviewUrl) {
		toSerialize["preview_url"] = o.PreviewUrl
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFax struct {
	value *Fax
	isSet bool
}

func (v NullableFax) Get() *Fax {
	return v.value
}

func (v *NullableFax) Set(val *Fax) {
	v.value = val
	v.isSet = true
}

func (v NullableFax) IsSet() bool {
	return v.isSet
}

func (v *NullableFax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFax(val *Fax) *NullableFax {
	return &NullableFax{value: val, isSet: true}
}

func (v NullableFax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



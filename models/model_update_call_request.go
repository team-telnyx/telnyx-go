/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdateCallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCallRequest{}

// UpdateCallRequest struct for UpdateCallRequest
type UpdateCallRequest struct {
	// The value to set the call status to. Setting the status to completed ends the call.
	Status *string `json:"Status,omitempty"`
	// The URL where TeXML will make a request to retrieve a new set of TeXML instructions to continue the call flow.
	Url *string `json:"Url,omitempty"`
	// HTTP request type used for `Url`.
	Method *string `json:"Method,omitempty"`
	// A failover URL for which Telnyx will retrieve the TeXML call instructions if the Url is not responding.
	FallbackUrl *string `json:"FallbackUrl,omitempty"`
	// HTTP request type used for `FallbackUrl`.
	FallbackMethod *string `json:"FallbackMethod,omitempty"`
	// URL destination for Telnyx to send status callback events to for the call.
	StatusCallback *string `json:"StatusCallback,omitempty"`
	// HTTP request type used for `StatusCallback`.
	StatusCallbackMethod *string `json:"StatusCallbackMethod,omitempty"`
	// TeXML to replace the current one with.
	Texml *string `json:"Texml,omitempty"`
}

// NewUpdateCallRequest instantiates a new UpdateCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCallRequest() *UpdateCallRequest {
	this := UpdateCallRequest{}
	return &this
}

// NewUpdateCallRequestWithDefaults instantiates a new UpdateCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCallRequestWithDefaults() *UpdateCallRequest {
	this := UpdateCallRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateCallRequest) SetStatus(v string) {
	o.Status = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateCallRequest) SetUrl(v string) {
	o.Url = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *UpdateCallRequest) SetMethod(v string) {
	o.Method = &v
}

// GetFallbackUrl returns the FallbackUrl field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetFallbackUrl() string {
	if o == nil || IsNil(o.FallbackUrl) {
		var ret string
		return ret
	}
	return *o.FallbackUrl
}

// GetFallbackUrlOk returns a tuple with the FallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetFallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FallbackUrl) {
		return nil, false
	}
	return o.FallbackUrl, true
}

// HasFallbackUrl returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasFallbackUrl() bool {
	if o != nil && !IsNil(o.FallbackUrl) {
		return true
	}

	return false
}

// SetFallbackUrl gets a reference to the given string and assigns it to the FallbackUrl field.
func (o *UpdateCallRequest) SetFallbackUrl(v string) {
	o.FallbackUrl = &v
}

// GetFallbackMethod returns the FallbackMethod field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetFallbackMethod() string {
	if o == nil || IsNil(o.FallbackMethod) {
		var ret string
		return ret
	}
	return *o.FallbackMethod
}

// GetFallbackMethodOk returns a tuple with the FallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetFallbackMethodOk() (*string, bool) {
	if o == nil || IsNil(o.FallbackMethod) {
		return nil, false
	}
	return o.FallbackMethod, true
}

// HasFallbackMethod returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasFallbackMethod() bool {
	if o != nil && !IsNil(o.FallbackMethod) {
		return true
	}

	return false
}

// SetFallbackMethod gets a reference to the given string and assigns it to the FallbackMethod field.
func (o *UpdateCallRequest) SetFallbackMethod(v string) {
	o.FallbackMethod = &v
}

// GetStatusCallback returns the StatusCallback field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetStatusCallback() string {
	if o == nil || IsNil(o.StatusCallback) {
		var ret string
		return ret
	}
	return *o.StatusCallback
}

// GetStatusCallbackOk returns a tuple with the StatusCallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetStatusCallbackOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCallback) {
		return nil, false
	}
	return o.StatusCallback, true
}

// HasStatusCallback returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasStatusCallback() bool {
	if o != nil && !IsNil(o.StatusCallback) {
		return true
	}

	return false
}

// SetStatusCallback gets a reference to the given string and assigns it to the StatusCallback field.
func (o *UpdateCallRequest) SetStatusCallback(v string) {
	o.StatusCallback = &v
}

// GetStatusCallbackMethod returns the StatusCallbackMethod field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetStatusCallbackMethod() string {
	if o == nil || IsNil(o.StatusCallbackMethod) {
		var ret string
		return ret
	}
	return *o.StatusCallbackMethod
}

// GetStatusCallbackMethodOk returns a tuple with the StatusCallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetStatusCallbackMethodOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCallbackMethod) {
		return nil, false
	}
	return o.StatusCallbackMethod, true
}

// HasStatusCallbackMethod returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasStatusCallbackMethod() bool {
	if o != nil && !IsNil(o.StatusCallbackMethod) {
		return true
	}

	return false
}

// SetStatusCallbackMethod gets a reference to the given string and assigns it to the StatusCallbackMethod field.
func (o *UpdateCallRequest) SetStatusCallbackMethod(v string) {
	o.StatusCallbackMethod = &v
}

// GetTexml returns the Texml field value if set, zero value otherwise.
func (o *UpdateCallRequest) GetTexml() string {
	if o == nil || IsNil(o.Texml) {
		var ret string
		return ret
	}
	return *o.Texml
}

// GetTexmlOk returns a tuple with the Texml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallRequest) GetTexmlOk() (*string, bool) {
	if o == nil || IsNil(o.Texml) {
		return nil, false
	}
	return o.Texml, true
}

// HasTexml returns a boolean if a field has been set.
func (o *UpdateCallRequest) HasTexml() bool {
	if o != nil && !IsNil(o.Texml) {
		return true
	}

	return false
}

// SetTexml gets a reference to the given string and assigns it to the Texml field.
func (o *UpdateCallRequest) SetTexml(v string) {
	o.Texml = &v
}

func (o UpdateCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !IsNil(o.Method) {
		toSerialize["Method"] = o.Method
	}
	if !IsNil(o.FallbackUrl) {
		toSerialize["FallbackUrl"] = o.FallbackUrl
	}
	if !IsNil(o.FallbackMethod) {
		toSerialize["FallbackMethod"] = o.FallbackMethod
	}
	if !IsNil(o.StatusCallback) {
		toSerialize["StatusCallback"] = o.StatusCallback
	}
	if !IsNil(o.StatusCallbackMethod) {
		toSerialize["StatusCallbackMethod"] = o.StatusCallbackMethod
	}
	if !IsNil(o.Texml) {
		toSerialize["Texml"] = o.Texml
	}
	return toSerialize, nil
}

type NullableUpdateCallRequest struct {
	value *UpdateCallRequest
	isSet bool
}

func (v NullableUpdateCallRequest) Get() *UpdateCallRequest {
	return v.value
}

func (v *NullableUpdateCallRequest) Set(val *UpdateCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCallRequest(val *UpdateCallRequest) *NullableUpdateCallRequest {
	return &NullableUpdateCallRequest{value: val, isSet: true}
}

func (v NullableUpdateCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the EnableManagedAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableManagedAccountRequest{}

// EnableManagedAccountRequest struct for EnableManagedAccountRequest
type EnableManagedAccountRequest struct {
	// When true, all connections owned by this managed account will automatically be re-enabled. Note: Any connections that do not pass validations will not be re-enabled.
	ReenableAllConnections *bool `json:"reenable_all_connections,omitempty"`
}

// NewEnableManagedAccountRequest instantiates a new EnableManagedAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableManagedAccountRequest() *EnableManagedAccountRequest {
	this := EnableManagedAccountRequest{}
	var reenableAllConnections bool = false
	this.ReenableAllConnections = &reenableAllConnections
	return &this
}

// NewEnableManagedAccountRequestWithDefaults instantiates a new EnableManagedAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableManagedAccountRequestWithDefaults() *EnableManagedAccountRequest {
	this := EnableManagedAccountRequest{}
	var reenableAllConnections bool = false
	this.ReenableAllConnections = &reenableAllConnections
	return &this
}

// GetReenableAllConnections returns the ReenableAllConnections field value if set, zero value otherwise.
func (o *EnableManagedAccountRequest) GetReenableAllConnections() bool {
	if o == nil || IsNil(o.ReenableAllConnections) {
		var ret bool
		return ret
	}
	return *o.ReenableAllConnections
}

// GetReenableAllConnectionsOk returns a tuple with the ReenableAllConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableManagedAccountRequest) GetReenableAllConnectionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReenableAllConnections) {
		return nil, false
	}
	return o.ReenableAllConnections, true
}

// HasReenableAllConnections returns a boolean if a field has been set.
func (o *EnableManagedAccountRequest) HasReenableAllConnections() bool {
	if o != nil && !IsNil(o.ReenableAllConnections) {
		return true
	}

	return false
}

// SetReenableAllConnections gets a reference to the given bool and assigns it to the ReenableAllConnections field.
func (o *EnableManagedAccountRequest) SetReenableAllConnections(v bool) {
	o.ReenableAllConnections = &v
}

func (o EnableManagedAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableManagedAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReenableAllConnections) {
		toSerialize["reenable_all_connections"] = o.ReenableAllConnections
	}
	return toSerialize, nil
}

type NullableEnableManagedAccountRequest struct {
	value *EnableManagedAccountRequest
	isSet bool
}

func (v NullableEnableManagedAccountRequest) Get() *EnableManagedAccountRequest {
	return v.value
}

func (v *NullableEnableManagedAccountRequest) Set(val *EnableManagedAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableManagedAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableManagedAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableManagedAccountRequest(val *EnableManagedAccountRequest) *NullableEnableManagedAccountRequest {
	return &NullableEnableManagedAccountRequest{value: val, isSet: true}
}

func (v NullableEnableManagedAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableManagedAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



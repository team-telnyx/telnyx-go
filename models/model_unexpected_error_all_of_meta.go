/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UnexpectedErrorAllOfMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnexpectedErrorAllOfMeta{}

// UnexpectedErrorAllOfMeta struct for UnexpectedErrorAllOfMeta
type UnexpectedErrorAllOfMeta struct {
	Url *string `json:"url,omitempty"`
}

// NewUnexpectedErrorAllOfMeta instantiates a new UnexpectedErrorAllOfMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnexpectedErrorAllOfMeta() *UnexpectedErrorAllOfMeta {
	this := UnexpectedErrorAllOfMeta{}
	return &this
}

// NewUnexpectedErrorAllOfMetaWithDefaults instantiates a new UnexpectedErrorAllOfMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnexpectedErrorAllOfMetaWithDefaults() *UnexpectedErrorAllOfMeta {
	this := UnexpectedErrorAllOfMeta{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UnexpectedErrorAllOfMeta) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnexpectedErrorAllOfMeta) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UnexpectedErrorAllOfMeta) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UnexpectedErrorAllOfMeta) SetUrl(v string) {
	o.Url = &v
}

func (o UnexpectedErrorAllOfMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnexpectedErrorAllOfMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableUnexpectedErrorAllOfMeta struct {
	value *UnexpectedErrorAllOfMeta
	isSet bool
}

func (v NullableUnexpectedErrorAllOfMeta) Get() *UnexpectedErrorAllOfMeta {
	return v.value
}

func (v *NullableUnexpectedErrorAllOfMeta) Set(val *UnexpectedErrorAllOfMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableUnexpectedErrorAllOfMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableUnexpectedErrorAllOfMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnexpectedErrorAllOfMeta(val *UnexpectedErrorAllOfMeta) *NullableUnexpectedErrorAllOfMeta {
	return &NullableUnexpectedErrorAllOfMeta{value: val, isSet: true}
}

func (v NullableUnexpectedErrorAllOfMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnexpectedErrorAllOfMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)


// DataInner struct for DataInner
type DataInner struct {
	ScheduledPhoneCallEventResponse *ScheduledPhoneCallEventResponse
	ScheduledSmsEventResponse *ScheduledSmsEventResponse
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *DataInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ScheduledPhoneCallEventResponse
	err = json.Unmarshal(data, &dst.ScheduledPhoneCallEventResponse);
	if err == nil {
		jsonScheduledPhoneCallEventResponse, _ := json.Marshal(dst.ScheduledPhoneCallEventResponse)
		if string(jsonScheduledPhoneCallEventResponse) == "{}" { // empty struct
			dst.ScheduledPhoneCallEventResponse = nil
		} else {
			return nil // data stored in dst.ScheduledPhoneCallEventResponse, return on the first match
		}
	} else {
		dst.ScheduledPhoneCallEventResponse = nil
	}

	// try to unmarshal JSON data into ScheduledSmsEventResponse
	err = json.Unmarshal(data, &dst.ScheduledSmsEventResponse);
	if err == nil {
		jsonScheduledSmsEventResponse, _ := json.Marshal(dst.ScheduledSmsEventResponse)
		if string(jsonScheduledSmsEventResponse) == "{}" { // empty struct
			dst.ScheduledSmsEventResponse = nil
		} else {
			return nil // data stored in dst.ScheduledSmsEventResponse, return on the first match
		}
	} else {
		dst.ScheduledSmsEventResponse = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(DataInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DataInner) MarshalJSON() ([]byte, error) {
	if src.ScheduledPhoneCallEventResponse != nil {
		return json.Marshal(&src.ScheduledPhoneCallEventResponse)
	}

	if src.ScheduledSmsEventResponse != nil {
		return json.Marshal(&src.ScheduledSmsEventResponse)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableDataInner struct {
	value *DataInner
	isSet bool
}

func (v NullableDataInner) Get() *DataInner {
	return v.value
}

func (v *NullableDataInner) Set(val *DataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataInner(val *DataInner) *NullableDataInner {
	return &NullableDataInner{value: val, isSet: true}
}

func (v NullableDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



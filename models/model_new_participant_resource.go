/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the NewParticipantResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewParticipantResource{}

// NewParticipantResource struct for NewParticipantResource
type NewParticipantResource struct {
	// The id of the account the resource belongs to.
	AccountSid *string `json:"account_sid,omitempty"`
	// The identifier of this participant's call.
	CallSid *string `json:"call_sid,omitempty"`
	// Whether the participant is coaching another call.
	Coaching *bool `json:"coaching,omitempty"`
	// The identifier of the coached participant's call.
	CoachingCallSid *string `json:"coaching_call_sid,omitempty"`
	// Whether the conference ends when the participant leaves.
	EndConferenceOnExit *bool `json:"end_conference_on_exit,omitempty"`
	// Whether the participant is on hold.
	Hold *bool `json:"hold,omitempty"`
	// Whether the participant is muted.
	Muted *bool `json:"muted,omitempty"`
	// The status of the participant's call in the conference.
	Status *string `json:"status,omitempty"`
	// The relative URI for this participant.
	Uri *string `json:"uri,omitempty"`
}

// NewNewParticipantResource instantiates a new NewParticipantResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewParticipantResource() *NewParticipantResource {
	this := NewParticipantResource{}
	return &this
}

// NewNewParticipantResourceWithDefaults instantiates a new NewParticipantResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewParticipantResourceWithDefaults() *NewParticipantResource {
	this := NewParticipantResource{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise.
func (o *NewParticipantResource) GetAccountSid() string {
	if o == nil || IsNil(o.AccountSid) {
		var ret string
		return ret
	}
	return *o.AccountSid
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetAccountSidOk() (*string, bool) {
	if o == nil || IsNil(o.AccountSid) {
		return nil, false
	}
	return o.AccountSid, true
}

// HasAccountSid returns a boolean if a field has been set.
func (o *NewParticipantResource) HasAccountSid() bool {
	if o != nil && !IsNil(o.AccountSid) {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given string and assigns it to the AccountSid field.
func (o *NewParticipantResource) SetAccountSid(v string) {
	o.AccountSid = &v
}

// GetCallSid returns the CallSid field value if set, zero value otherwise.
func (o *NewParticipantResource) GetCallSid() string {
	if o == nil || IsNil(o.CallSid) {
		var ret string
		return ret
	}
	return *o.CallSid
}

// GetCallSidOk returns a tuple with the CallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetCallSidOk() (*string, bool) {
	if o == nil || IsNil(o.CallSid) {
		return nil, false
	}
	return o.CallSid, true
}

// HasCallSid returns a boolean if a field has been set.
func (o *NewParticipantResource) HasCallSid() bool {
	if o != nil && !IsNil(o.CallSid) {
		return true
	}

	return false
}

// SetCallSid gets a reference to the given string and assigns it to the CallSid field.
func (o *NewParticipantResource) SetCallSid(v string) {
	o.CallSid = &v
}

// GetCoaching returns the Coaching field value if set, zero value otherwise.
func (o *NewParticipantResource) GetCoaching() bool {
	if o == nil || IsNil(o.Coaching) {
		var ret bool
		return ret
	}
	return *o.Coaching
}

// GetCoachingOk returns a tuple with the Coaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetCoachingOk() (*bool, bool) {
	if o == nil || IsNil(o.Coaching) {
		return nil, false
	}
	return o.Coaching, true
}

// HasCoaching returns a boolean if a field has been set.
func (o *NewParticipantResource) HasCoaching() bool {
	if o != nil && !IsNil(o.Coaching) {
		return true
	}

	return false
}

// SetCoaching gets a reference to the given bool and assigns it to the Coaching field.
func (o *NewParticipantResource) SetCoaching(v bool) {
	o.Coaching = &v
}

// GetCoachingCallSid returns the CoachingCallSid field value if set, zero value otherwise.
func (o *NewParticipantResource) GetCoachingCallSid() string {
	if o == nil || IsNil(o.CoachingCallSid) {
		var ret string
		return ret
	}
	return *o.CoachingCallSid
}

// GetCoachingCallSidOk returns a tuple with the CoachingCallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetCoachingCallSidOk() (*string, bool) {
	if o == nil || IsNil(o.CoachingCallSid) {
		return nil, false
	}
	return o.CoachingCallSid, true
}

// HasCoachingCallSid returns a boolean if a field has been set.
func (o *NewParticipantResource) HasCoachingCallSid() bool {
	if o != nil && !IsNil(o.CoachingCallSid) {
		return true
	}

	return false
}

// SetCoachingCallSid gets a reference to the given string and assigns it to the CoachingCallSid field.
func (o *NewParticipantResource) SetCoachingCallSid(v string) {
	o.CoachingCallSid = &v
}

// GetEndConferenceOnExit returns the EndConferenceOnExit field value if set, zero value otherwise.
func (o *NewParticipantResource) GetEndConferenceOnExit() bool {
	if o == nil || IsNil(o.EndConferenceOnExit) {
		var ret bool
		return ret
	}
	return *o.EndConferenceOnExit
}

// GetEndConferenceOnExitOk returns a tuple with the EndConferenceOnExit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetEndConferenceOnExitOk() (*bool, bool) {
	if o == nil || IsNil(o.EndConferenceOnExit) {
		return nil, false
	}
	return o.EndConferenceOnExit, true
}

// HasEndConferenceOnExit returns a boolean if a field has been set.
func (o *NewParticipantResource) HasEndConferenceOnExit() bool {
	if o != nil && !IsNil(o.EndConferenceOnExit) {
		return true
	}

	return false
}

// SetEndConferenceOnExit gets a reference to the given bool and assigns it to the EndConferenceOnExit field.
func (o *NewParticipantResource) SetEndConferenceOnExit(v bool) {
	o.EndConferenceOnExit = &v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *NewParticipantResource) GetHold() bool {
	if o == nil || IsNil(o.Hold) {
		var ret bool
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *NewParticipantResource) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given bool and assigns it to the Hold field.
func (o *NewParticipantResource) SetHold(v bool) {
	o.Hold = &v
}

// GetMuted returns the Muted field value if set, zero value otherwise.
func (o *NewParticipantResource) GetMuted() bool {
	if o == nil || IsNil(o.Muted) {
		var ret bool
		return ret
	}
	return *o.Muted
}

// GetMutedOk returns a tuple with the Muted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetMutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Muted) {
		return nil, false
	}
	return o.Muted, true
}

// HasMuted returns a boolean if a field has been set.
func (o *NewParticipantResource) HasMuted() bool {
	if o != nil && !IsNil(o.Muted) {
		return true
	}

	return false
}

// SetMuted gets a reference to the given bool and assigns it to the Muted field.
func (o *NewParticipantResource) SetMuted(v bool) {
	o.Muted = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NewParticipantResource) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NewParticipantResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NewParticipantResource) SetStatus(v string) {
	o.Status = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *NewParticipantResource) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewParticipantResource) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *NewParticipantResource) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *NewParticipantResource) SetUri(v string) {
	o.Uri = &v
}

func (o NewParticipantResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewParticipantResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountSid) {
		toSerialize["account_sid"] = o.AccountSid
	}
	if !IsNil(o.CallSid) {
		toSerialize["call_sid"] = o.CallSid
	}
	if !IsNil(o.Coaching) {
		toSerialize["coaching"] = o.Coaching
	}
	if !IsNil(o.CoachingCallSid) {
		toSerialize["coaching_call_sid"] = o.CoachingCallSid
	}
	if !IsNil(o.EndConferenceOnExit) {
		toSerialize["end_conference_on_exit"] = o.EndConferenceOnExit
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.Muted) {
		toSerialize["muted"] = o.Muted
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableNewParticipantResource struct {
	value *NewParticipantResource
	isSet bool
}

func (v NullableNewParticipantResource) Get() *NewParticipantResource {
	return v.value
}

func (v *NullableNewParticipantResource) Set(val *NewParticipantResource) {
	v.value = val
	v.isSet = true
}

func (v NullableNewParticipantResource) IsSet() bool {
	return v.isSet
}

func (v *NullableNewParticipantResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewParticipantResource(val *NewParticipantResource) *NullableNewParticipantResource {
	return &NullableNewParticipantResource{value: val, isSet: true}
}

func (v NullableNewParticipantResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewParticipantResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PreviewLoaConfigurationParamsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewLoaConfigurationParamsRequest{}

// PreviewLoaConfigurationParamsRequest The parameters for creating a new LOA configuration.
type PreviewLoaConfigurationParamsRequest struct {
	// The name of the LOA configuration
	Name string `json:"name"`
	Logo PreviewLoaConfigurationParamsRequestLogo `json:"logo"`
	// The name of the company
	CompanyName string `json:"company_name"`
	Address PreviewLoaConfigurationParamsRequestAddress `json:"address"`
	Contact PreviewLoaConfigurationParamsRequestContact `json:"contact"`
}

type _PreviewLoaConfigurationParamsRequest PreviewLoaConfigurationParamsRequest

// NewPreviewLoaConfigurationParamsRequest instantiates a new PreviewLoaConfigurationParamsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewLoaConfigurationParamsRequest(name string, logo PreviewLoaConfigurationParamsRequestLogo, companyName string, address PreviewLoaConfigurationParamsRequestAddress, contact PreviewLoaConfigurationParamsRequestContact) *PreviewLoaConfigurationParamsRequest {
	this := PreviewLoaConfigurationParamsRequest{}
	this.Name = name
	this.Logo = logo
	this.CompanyName = companyName
	this.Address = address
	this.Contact = contact
	return &this
}

// NewPreviewLoaConfigurationParamsRequestWithDefaults instantiates a new PreviewLoaConfigurationParamsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewLoaConfigurationParamsRequestWithDefaults() *PreviewLoaConfigurationParamsRequest {
	this := PreviewLoaConfigurationParamsRequest{}
	return &this
}

// GetName returns the Name field value
func (o *PreviewLoaConfigurationParamsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PreviewLoaConfigurationParamsRequest) SetName(v string) {
	o.Name = v
}

// GetLogo returns the Logo field value
func (o *PreviewLoaConfigurationParamsRequest) GetLogo() PreviewLoaConfigurationParamsRequestLogo {
	if o == nil {
		var ret PreviewLoaConfigurationParamsRequestLogo
		return ret
	}

	return o.Logo
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequest) GetLogoOk() (*PreviewLoaConfigurationParamsRequestLogo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Logo, true
}

// SetLogo sets field value
func (o *PreviewLoaConfigurationParamsRequest) SetLogo(v PreviewLoaConfigurationParamsRequestLogo) {
	o.Logo = v
}

// GetCompanyName returns the CompanyName field value
func (o *PreviewLoaConfigurationParamsRequest) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *PreviewLoaConfigurationParamsRequest) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetAddress returns the Address field value
func (o *PreviewLoaConfigurationParamsRequest) GetAddress() PreviewLoaConfigurationParamsRequestAddress {
	if o == nil {
		var ret PreviewLoaConfigurationParamsRequestAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequest) GetAddressOk() (*PreviewLoaConfigurationParamsRequestAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PreviewLoaConfigurationParamsRequest) SetAddress(v PreviewLoaConfigurationParamsRequestAddress) {
	o.Address = v
}

// GetContact returns the Contact field value
func (o *PreviewLoaConfigurationParamsRequest) GetContact() PreviewLoaConfigurationParamsRequestContact {
	if o == nil {
		var ret PreviewLoaConfigurationParamsRequestContact
		return ret
	}

	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value
// and a boolean to check if the value has been set.
func (o *PreviewLoaConfigurationParamsRequest) GetContactOk() (*PreviewLoaConfigurationParamsRequestContact, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contact, true
}

// SetContact sets field value
func (o *PreviewLoaConfigurationParamsRequest) SetContact(v PreviewLoaConfigurationParamsRequestContact) {
	o.Contact = v
}

func (o PreviewLoaConfigurationParamsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewLoaConfigurationParamsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["logo"] = o.Logo
	toSerialize["company_name"] = o.CompanyName
	toSerialize["address"] = o.Address
	toSerialize["contact"] = o.Contact
	return toSerialize, nil
}

func (o *PreviewLoaConfigurationParamsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"logo",
		"company_name",
		"address",
		"contact",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPreviewLoaConfigurationParamsRequest := _PreviewLoaConfigurationParamsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPreviewLoaConfigurationParamsRequest)

	if err != nil {
		return err
	}

	*o = PreviewLoaConfigurationParamsRequest(varPreviewLoaConfigurationParamsRequest)

	return err
}

type NullablePreviewLoaConfigurationParamsRequest struct {
	value *PreviewLoaConfigurationParamsRequest
	isSet bool
}

func (v NullablePreviewLoaConfigurationParamsRequest) Get() *PreviewLoaConfigurationParamsRequest {
	return v.value
}

func (v *NullablePreviewLoaConfigurationParamsRequest) Set(val *PreviewLoaConfigurationParamsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewLoaConfigurationParamsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewLoaConfigurationParamsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewLoaConfigurationParamsRequest(val *PreviewLoaConfigurationParamsRequest) *NullablePreviewLoaConfigurationParamsRequest {
	return &NullablePreviewLoaConfigurationParamsRequest{value: val, isSet: true}
}

func (v NullablePreviewLoaConfigurationParamsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewLoaConfigurationParamsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



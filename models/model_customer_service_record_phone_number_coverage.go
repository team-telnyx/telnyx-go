/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CustomerServiceRecordPhoneNumberCoverage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerServiceRecordPhoneNumberCoverage{}

// CustomerServiceRecordPhoneNumberCoverage struct for CustomerServiceRecordPhoneNumberCoverage
type CustomerServiceRecordPhoneNumberCoverage struct {
	// The phone number that is being verified.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Indicates whether the phone number is covered or not.
	HasCsrCoverage *bool `json:"has_csr_coverage,omitempty"`
	// The reason why the phone number is not covered. Only returned if `has_csr_coverage` is false.
	Reason *string `json:"reason,omitempty"`
	// Additional data required to perform CSR for the phone number. Only returned if `has_csr_coverage` is true.
	AdditionalDataRequired []string `json:"additional_data_required,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
}

// NewCustomerServiceRecordPhoneNumberCoverage instantiates a new CustomerServiceRecordPhoneNumberCoverage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerServiceRecordPhoneNumberCoverage() *CustomerServiceRecordPhoneNumberCoverage {
	this := CustomerServiceRecordPhoneNumberCoverage{}
	return &this
}

// NewCustomerServiceRecordPhoneNumberCoverageWithDefaults instantiates a new CustomerServiceRecordPhoneNumberCoverage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerServiceRecordPhoneNumberCoverageWithDefaults() *CustomerServiceRecordPhoneNumberCoverage {
	this := CustomerServiceRecordPhoneNumberCoverage{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CustomerServiceRecordPhoneNumberCoverage) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetHasCsrCoverage returns the HasCsrCoverage field value if set, zero value otherwise.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetHasCsrCoverage() bool {
	if o == nil || IsNil(o.HasCsrCoverage) {
		var ret bool
		return ret
	}
	return *o.HasCsrCoverage
}

// GetHasCsrCoverageOk returns a tuple with the HasCsrCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetHasCsrCoverageOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCsrCoverage) {
		return nil, false
	}
	return o.HasCsrCoverage, true
}

// HasHasCsrCoverage returns a boolean if a field has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) HasHasCsrCoverage() bool {
	if o != nil && !IsNil(o.HasCsrCoverage) {
		return true
	}

	return false
}

// SetHasCsrCoverage gets a reference to the given bool and assigns it to the HasCsrCoverage field.
func (o *CustomerServiceRecordPhoneNumberCoverage) SetHasCsrCoverage(v bool) {
	o.HasCsrCoverage = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CustomerServiceRecordPhoneNumberCoverage) SetReason(v string) {
	o.Reason = &v
}

// GetAdditionalDataRequired returns the AdditionalDataRequired field value if set, zero value otherwise.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetAdditionalDataRequired() []string {
	if o == nil || IsNil(o.AdditionalDataRequired) {
		var ret []string
		return ret
	}
	return o.AdditionalDataRequired
}

// GetAdditionalDataRequiredOk returns a tuple with the AdditionalDataRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetAdditionalDataRequiredOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalDataRequired) {
		return nil, false
	}
	return o.AdditionalDataRequired, true
}

// HasAdditionalDataRequired returns a boolean if a field has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) HasAdditionalDataRequired() bool {
	if o != nil && !IsNil(o.AdditionalDataRequired) {
		return true
	}

	return false
}

// SetAdditionalDataRequired gets a reference to the given []string and assigns it to the AdditionalDataRequired field.
func (o *CustomerServiceRecordPhoneNumberCoverage) SetAdditionalDataRequired(v []string) {
	o.AdditionalDataRequired = v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *CustomerServiceRecordPhoneNumberCoverage) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *CustomerServiceRecordPhoneNumberCoverage) SetRecordType(v string) {
	o.RecordType = &v
}

func (o CustomerServiceRecordPhoneNumberCoverage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerServiceRecordPhoneNumberCoverage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.HasCsrCoverage) {
		toSerialize["has_csr_coverage"] = o.HasCsrCoverage
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.AdditionalDataRequired) {
		toSerialize["additional_data_required"] = o.AdditionalDataRequired
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullableCustomerServiceRecordPhoneNumberCoverage struct {
	value *CustomerServiceRecordPhoneNumberCoverage
	isSet bool
}

func (v NullableCustomerServiceRecordPhoneNumberCoverage) Get() *CustomerServiceRecordPhoneNumberCoverage {
	return v.value
}

func (v *NullableCustomerServiceRecordPhoneNumberCoverage) Set(val *CustomerServiceRecordPhoneNumberCoverage) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerServiceRecordPhoneNumberCoverage) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerServiceRecordPhoneNumberCoverage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerServiceRecordPhoneNumberCoverage(val *CustomerServiceRecordPhoneNumberCoverage) *NullableCustomerServiceRecordPhoneNumberCoverage {
	return &NullableCustomerServiceRecordPhoneNumberCoverage{value: val, isSet: true}
}

func (v NullableCustomerServiceRecordPhoneNumberCoverage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerServiceRecordPhoneNumberCoverage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



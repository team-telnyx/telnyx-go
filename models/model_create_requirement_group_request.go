/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRequirementGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRequirementGroupRequest{}

// CreateRequirementGroupRequest struct for CreateRequirementGroupRequest
type CreateRequirementGroupRequest struct {
	// ISO alpha 2 country code
	CountryCode string `json:"country_code"`
	PhoneNumberType string `json:"phone_number_type"`
	Action string `json:"action"`
	CustomerReference *string `json:"customer_reference,omitempty"`
	RegulatoryRequirements []CreateRequirementGroupRequestRegulatoryRequirementsInner `json:"regulatory_requirements,omitempty"`
}

type _CreateRequirementGroupRequest CreateRequirementGroupRequest

// NewCreateRequirementGroupRequest instantiates a new CreateRequirementGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRequirementGroupRequest(countryCode string, phoneNumberType string, action string) *CreateRequirementGroupRequest {
	this := CreateRequirementGroupRequest{}
	this.CountryCode = countryCode
	this.PhoneNumberType = phoneNumberType
	this.Action = action
	return &this
}

// NewCreateRequirementGroupRequestWithDefaults instantiates a new CreateRequirementGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRequirementGroupRequestWithDefaults() *CreateRequirementGroupRequest {
	this := CreateRequirementGroupRequest{}
	return &this
}

// GetCountryCode returns the CountryCode field value
func (o *CreateRequirementGroupRequest) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *CreateRequirementGroupRequest) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *CreateRequirementGroupRequest) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetPhoneNumberType returns the PhoneNumberType field value
func (o *CreateRequirementGroupRequest) GetPhoneNumberType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumberType
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value
// and a boolean to check if the value has been set.
func (o *CreateRequirementGroupRequest) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumberType, true
}

// SetPhoneNumberType sets field value
func (o *CreateRequirementGroupRequest) SetPhoneNumberType(v string) {
	o.PhoneNumberType = v
}

// GetAction returns the Action field value
func (o *CreateRequirementGroupRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CreateRequirementGroupRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CreateRequirementGroupRequest) SetAction(v string) {
	o.Action = v
}

// GetCustomerReference returns the CustomerReference field value if set, zero value otherwise.
func (o *CreateRequirementGroupRequest) GetCustomerReference() string {
	if o == nil || IsNil(o.CustomerReference) {
		var ret string
		return ret
	}
	return *o.CustomerReference
}

// GetCustomerReferenceOk returns a tuple with the CustomerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequirementGroupRequest) GetCustomerReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReference) {
		return nil, false
	}
	return o.CustomerReference, true
}

// HasCustomerReference returns a boolean if a field has been set.
func (o *CreateRequirementGroupRequest) HasCustomerReference() bool {
	if o != nil && !IsNil(o.CustomerReference) {
		return true
	}

	return false
}

// SetCustomerReference gets a reference to the given string and assigns it to the CustomerReference field.
func (o *CreateRequirementGroupRequest) SetCustomerReference(v string) {
	o.CustomerReference = &v
}

// GetRegulatoryRequirements returns the RegulatoryRequirements field value if set, zero value otherwise.
func (o *CreateRequirementGroupRequest) GetRegulatoryRequirements() []CreateRequirementGroupRequestRegulatoryRequirementsInner {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		var ret []CreateRequirementGroupRequestRegulatoryRequirementsInner
		return ret
	}
	return o.RegulatoryRequirements
}

// GetRegulatoryRequirementsOk returns a tuple with the RegulatoryRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequirementGroupRequest) GetRegulatoryRequirementsOk() ([]CreateRequirementGroupRequestRegulatoryRequirementsInner, bool) {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		return nil, false
	}
	return o.RegulatoryRequirements, true
}

// HasRegulatoryRequirements returns a boolean if a field has been set.
func (o *CreateRequirementGroupRequest) HasRegulatoryRequirements() bool {
	if o != nil && !IsNil(o.RegulatoryRequirements) {
		return true
	}

	return false
}

// SetRegulatoryRequirements gets a reference to the given []CreateRequirementGroupRequestRegulatoryRequirementsInner and assigns it to the RegulatoryRequirements field.
func (o *CreateRequirementGroupRequest) SetRegulatoryRequirements(v []CreateRequirementGroupRequestRegulatoryRequirementsInner) {
	o.RegulatoryRequirements = v
}

func (o CreateRequirementGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRequirementGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["phone_number_type"] = o.PhoneNumberType
	toSerialize["action"] = o.Action
	if !IsNil(o.CustomerReference) {
		toSerialize["customer_reference"] = o.CustomerReference
	}
	if !IsNil(o.RegulatoryRequirements) {
		toSerialize["regulatory_requirements"] = o.RegulatoryRequirements
	}
	return toSerialize, nil
}

func (o *CreateRequirementGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"country_code",
		"phone_number_type",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRequirementGroupRequest := _CreateRequirementGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRequirementGroupRequest)

	if err != nil {
		return err
	}

	*o = CreateRequirementGroupRequest(varCreateRequirementGroupRequest)

	return err
}

type NullableCreateRequirementGroupRequest struct {
	value *CreateRequirementGroupRequest
	isSet bool
}

func (v NullableCreateRequirementGroupRequest) Get() *CreateRequirementGroupRequest {
	return v.value
}

func (v *NullableCreateRequirementGroupRequest) Set(val *CreateRequirementGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRequirementGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRequirementGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRequirementGroupRequest(val *CreateRequirementGroupRequest) *NullableCreateRequirementGroupRequest {
	return &NullableCreateRequirementGroupRequest{value: val, isSet: true}
}

func (v NullableCreateRequirementGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRequirementGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



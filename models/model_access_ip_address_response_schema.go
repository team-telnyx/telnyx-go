/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AccessIPAddressResponseSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessIPAddressResponseSchema{}

// AccessIPAddressResponseSchema struct for AccessIPAddressResponseSchema
type AccessIPAddressResponseSchema struct {
	Id string `json:"id"`
	IpAddress string `json:"ip_address"`
	Source string `json:"source"`
	Status CloudflareSyncStatus `json:"status"`
	Description *string `json:"description,omitempty"`
	UserId string `json:"user_id"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type _AccessIPAddressResponseSchema AccessIPAddressResponseSchema

// NewAccessIPAddressResponseSchema instantiates a new AccessIPAddressResponseSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessIPAddressResponseSchema(id string, ipAddress string, source string, status CloudflareSyncStatus, userId string) *AccessIPAddressResponseSchema {
	this := AccessIPAddressResponseSchema{}
	this.Id = id
	this.IpAddress = ipAddress
	this.Source = source
	this.Status = status
	this.UserId = userId
	return &this
}

// NewAccessIPAddressResponseSchemaWithDefaults instantiates a new AccessIPAddressResponseSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessIPAddressResponseSchemaWithDefaults() *AccessIPAddressResponseSchema {
	this := AccessIPAddressResponseSchema{}
	return &this
}

// GetId returns the Id field value
func (o *AccessIPAddressResponseSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccessIPAddressResponseSchema) SetId(v string) {
	o.Id = v
}

// GetIpAddress returns the IpAddress field value
func (o *AccessIPAddressResponseSchema) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *AccessIPAddressResponseSchema) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetSource returns the Source field value
func (o *AccessIPAddressResponseSchema) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *AccessIPAddressResponseSchema) SetSource(v string) {
	o.Source = v
}

// GetStatus returns the Status field value
func (o *AccessIPAddressResponseSchema) GetStatus() CloudflareSyncStatus {
	if o == nil {
		var ret CloudflareSyncStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetStatusOk() (*CloudflareSyncStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccessIPAddressResponseSchema) SetStatus(v CloudflareSyncStatus) {
	o.Status = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccessIPAddressResponseSchema) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessIPAddressResponseSchema) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccessIPAddressResponseSchema) SetDescription(v string) {
	o.Description = &v
}

// GetUserId returns the UserId field value
func (o *AccessIPAddressResponseSchema) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *AccessIPAddressResponseSchema) SetUserId(v string) {
	o.UserId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AccessIPAddressResponseSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AccessIPAddressResponseSchema) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AccessIPAddressResponseSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AccessIPAddressResponseSchema) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessIPAddressResponseSchema) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccessIPAddressResponseSchema) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AccessIPAddressResponseSchema) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o AccessIPAddressResponseSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessIPAddressResponseSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["ip_address"] = o.IpAddress
	toSerialize["source"] = o.Source
	toSerialize["status"] = o.Status
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["user_id"] = o.UserId
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *AccessIPAddressResponseSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"ip_address",
		"source",
		"status",
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessIPAddressResponseSchema := _AccessIPAddressResponseSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessIPAddressResponseSchema)

	if err != nil {
		return err
	}

	*o = AccessIPAddressResponseSchema(varAccessIPAddressResponseSchema)

	return err
}

type NullableAccessIPAddressResponseSchema struct {
	value *AccessIPAddressResponseSchema
	isSet bool
}

func (v NullableAccessIPAddressResponseSchema) Get() *AccessIPAddressResponseSchema {
	return v.value
}

func (v *NullableAccessIPAddressResponseSchema) Set(val *AccessIPAddressResponseSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessIPAddressResponseSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessIPAddressResponseSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessIPAddressResponseSchema(val *AccessIPAddressResponseSchema) *NullableAccessIPAddressResponseSchema {
	return &NullableAccessIPAddressResponseSchema{value: val, isSet: true}
}

func (v NullableAccessIPAddressResponseSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessIPAddressResponseSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



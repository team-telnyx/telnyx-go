/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingLOAConfigurationAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingLOAConfigurationAddress{}

// PortingLOAConfigurationAddress The address of the company.
type PortingLOAConfigurationAddress struct {
	// The street address of the company
	StreetAddress *string `json:"street_address,omitempty"`
	// The extended address of the company
	ExtendedAddress *string `json:"extended_address,omitempty"`
	// The locality of the company
	City *string `json:"city,omitempty"`
	// The administrative area of the company
	State *string `json:"state,omitempty" validate:"regexp=^[A-Z]{2}$"`
	// The postal code of the company
	ZipCode *string `json:"zip_code,omitempty" validate:"regexp=^[0-9]{5}(?:-[0-9]{4})?$"`
	// The country code of the company
	CountryCode *string `json:"country_code,omitempty" validate:"regexp=^[A-Z]{2}$"`
}

// NewPortingLOAConfigurationAddress instantiates a new PortingLOAConfigurationAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingLOAConfigurationAddress() *PortingLOAConfigurationAddress {
	this := PortingLOAConfigurationAddress{}
	return &this
}

// NewPortingLOAConfigurationAddressWithDefaults instantiates a new PortingLOAConfigurationAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingLOAConfigurationAddressWithDefaults() *PortingLOAConfigurationAddress {
	this := PortingLOAConfigurationAddress{}
	return &this
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *PortingLOAConfigurationAddress) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetExtendedAddress returns the ExtendedAddress field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetExtendedAddress() string {
	if o == nil || IsNil(o.ExtendedAddress) {
		var ret string
		return ret
	}
	return *o.ExtendedAddress
}

// GetExtendedAddressOk returns a tuple with the ExtendedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetExtendedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedAddress) {
		return nil, false
	}
	return o.ExtendedAddress, true
}

// HasExtendedAddress returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasExtendedAddress() bool {
	if o != nil && !IsNil(o.ExtendedAddress) {
		return true
	}

	return false
}

// SetExtendedAddress gets a reference to the given string and assigns it to the ExtendedAddress field.
func (o *PortingLOAConfigurationAddress) SetExtendedAddress(v string) {
	o.ExtendedAddress = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PortingLOAConfigurationAddress) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PortingLOAConfigurationAddress) SetState(v string) {
	o.State = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode) {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetZipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ZipCode) {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasZipCode() bool {
	if o != nil && !IsNil(o.ZipCode) {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *PortingLOAConfigurationAddress) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PortingLOAConfigurationAddress) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PortingLOAConfigurationAddress) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PortingLOAConfigurationAddress) SetCountryCode(v string) {
	o.CountryCode = &v
}

func (o PortingLOAConfigurationAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingLOAConfigurationAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StreetAddress) {
		toSerialize["street_address"] = o.StreetAddress
	}
	if !IsNil(o.ExtendedAddress) {
		toSerialize["extended_address"] = o.ExtendedAddress
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ZipCode) {
		toSerialize["zip_code"] = o.ZipCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	return toSerialize, nil
}

type NullablePortingLOAConfigurationAddress struct {
	value *PortingLOAConfigurationAddress
	isSet bool
}

func (v NullablePortingLOAConfigurationAddress) Get() *PortingLOAConfigurationAddress {
	return v.value
}

func (v *NullablePortingLOAConfigurationAddress) Set(val *PortingLOAConfigurationAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingLOAConfigurationAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingLOAConfigurationAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingLOAConfigurationAddress(val *PortingLOAConfigurationAddress) *NullablePortingLOAConfigurationAddress {
	return &NullablePortingLOAConfigurationAddress{value: val, isSet: true}
}

func (v NullablePortingLOAConfigurationAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingLOAConfigurationAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



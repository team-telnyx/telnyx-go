/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the AuthenticationProviderSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationProviderSettings{}

// AuthenticationProviderSettings The settings associated with the authentication provider.
type AuthenticationProviderSettings struct {
	// The Assertion Consumer Service URL for the service provider (Telnyx).
	AssertionConsumerServiceUrl *string `json:"assertion_consumer_service_url,omitempty"`
	// The Entity ID for the service provider (Telnyx).
	ServiceProviderEntityId *string `json:"service_provider_entity_id,omitempty"`
	// The Entity ID for the identity provider (IdP).
	IdpEntityId *string `json:"idp_entity_id,omitempty"`
	// The SSO target url for the identity provider (IdP).
	IdpSsoTargetUrl *string `json:"idp_sso_target_url,omitempty"`
	// The certificate fingerprint for the identity provider (IdP)
	IdpCertFingerprint *string `json:"idp_cert_fingerprint,omitempty"`
	// The algorithm used to generate the identity provider's (IdP) certificate fingerprint
	IdpCertFingerprintAlgorithm *string `json:"idp_cert_fingerprint_algorithm,omitempty"`
	// The name identifier format associated with the authentication provider. This must be the same for both the Identity Provider (IdP) and the service provider (Telnyx).
	NameIdentifierFormat *string `json:"name_identifier_format,omitempty"`
}

// NewAuthenticationProviderSettings instantiates a new AuthenticationProviderSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationProviderSettings() *AuthenticationProviderSettings {
	this := AuthenticationProviderSettings{}
	var idpCertFingerprintAlgorithm string = "sha1"
	this.IdpCertFingerprintAlgorithm = &idpCertFingerprintAlgorithm
	return &this
}

// NewAuthenticationProviderSettingsWithDefaults instantiates a new AuthenticationProviderSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationProviderSettingsWithDefaults() *AuthenticationProviderSettings {
	this := AuthenticationProviderSettings{}
	var idpCertFingerprintAlgorithm string = "sha1"
	this.IdpCertFingerprintAlgorithm = &idpCertFingerprintAlgorithm
	return &this
}

// GetAssertionConsumerServiceUrl returns the AssertionConsumerServiceUrl field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetAssertionConsumerServiceUrl() string {
	if o == nil || IsNil(o.AssertionConsumerServiceUrl) {
		var ret string
		return ret
	}
	return *o.AssertionConsumerServiceUrl
}

// GetAssertionConsumerServiceUrlOk returns a tuple with the AssertionConsumerServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetAssertionConsumerServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionConsumerServiceUrl) {
		return nil, false
	}
	return o.AssertionConsumerServiceUrl, true
}

// HasAssertionConsumerServiceUrl returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasAssertionConsumerServiceUrl() bool {
	if o != nil && !IsNil(o.AssertionConsumerServiceUrl) {
		return true
	}

	return false
}

// SetAssertionConsumerServiceUrl gets a reference to the given string and assigns it to the AssertionConsumerServiceUrl field.
func (o *AuthenticationProviderSettings) SetAssertionConsumerServiceUrl(v string) {
	o.AssertionConsumerServiceUrl = &v
}

// GetServiceProviderEntityId returns the ServiceProviderEntityId field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetServiceProviderEntityId() string {
	if o == nil || IsNil(o.ServiceProviderEntityId) {
		var ret string
		return ret
	}
	return *o.ServiceProviderEntityId
}

// GetServiceProviderEntityIdOk returns a tuple with the ServiceProviderEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetServiceProviderEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceProviderEntityId) {
		return nil, false
	}
	return o.ServiceProviderEntityId, true
}

// HasServiceProviderEntityId returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasServiceProviderEntityId() bool {
	if o != nil && !IsNil(o.ServiceProviderEntityId) {
		return true
	}

	return false
}

// SetServiceProviderEntityId gets a reference to the given string and assigns it to the ServiceProviderEntityId field.
func (o *AuthenticationProviderSettings) SetServiceProviderEntityId(v string) {
	o.ServiceProviderEntityId = &v
}

// GetIdpEntityId returns the IdpEntityId field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetIdpEntityId() string {
	if o == nil || IsNil(o.IdpEntityId) {
		var ret string
		return ret
	}
	return *o.IdpEntityId
}

// GetIdpEntityIdOk returns a tuple with the IdpEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetIdpEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdpEntityId) {
		return nil, false
	}
	return o.IdpEntityId, true
}

// HasIdpEntityId returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasIdpEntityId() bool {
	if o != nil && !IsNil(o.IdpEntityId) {
		return true
	}

	return false
}

// SetIdpEntityId gets a reference to the given string and assigns it to the IdpEntityId field.
func (o *AuthenticationProviderSettings) SetIdpEntityId(v string) {
	o.IdpEntityId = &v
}

// GetIdpSsoTargetUrl returns the IdpSsoTargetUrl field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetIdpSsoTargetUrl() string {
	if o == nil || IsNil(o.IdpSsoTargetUrl) {
		var ret string
		return ret
	}
	return *o.IdpSsoTargetUrl
}

// GetIdpSsoTargetUrlOk returns a tuple with the IdpSsoTargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetIdpSsoTargetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IdpSsoTargetUrl) {
		return nil, false
	}
	return o.IdpSsoTargetUrl, true
}

// HasIdpSsoTargetUrl returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasIdpSsoTargetUrl() bool {
	if o != nil && !IsNil(o.IdpSsoTargetUrl) {
		return true
	}

	return false
}

// SetIdpSsoTargetUrl gets a reference to the given string and assigns it to the IdpSsoTargetUrl field.
func (o *AuthenticationProviderSettings) SetIdpSsoTargetUrl(v string) {
	o.IdpSsoTargetUrl = &v
}

// GetIdpCertFingerprint returns the IdpCertFingerprint field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetIdpCertFingerprint() string {
	if o == nil || IsNil(o.IdpCertFingerprint) {
		var ret string
		return ret
	}
	return *o.IdpCertFingerprint
}

// GetIdpCertFingerprintOk returns a tuple with the IdpCertFingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetIdpCertFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.IdpCertFingerprint) {
		return nil, false
	}
	return o.IdpCertFingerprint, true
}

// HasIdpCertFingerprint returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasIdpCertFingerprint() bool {
	if o != nil && !IsNil(o.IdpCertFingerprint) {
		return true
	}

	return false
}

// SetIdpCertFingerprint gets a reference to the given string and assigns it to the IdpCertFingerprint field.
func (o *AuthenticationProviderSettings) SetIdpCertFingerprint(v string) {
	o.IdpCertFingerprint = &v
}

// GetIdpCertFingerprintAlgorithm returns the IdpCertFingerprintAlgorithm field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetIdpCertFingerprintAlgorithm() string {
	if o == nil || IsNil(o.IdpCertFingerprintAlgorithm) {
		var ret string
		return ret
	}
	return *o.IdpCertFingerprintAlgorithm
}

// GetIdpCertFingerprintAlgorithmOk returns a tuple with the IdpCertFingerprintAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetIdpCertFingerprintAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.IdpCertFingerprintAlgorithm) {
		return nil, false
	}
	return o.IdpCertFingerprintAlgorithm, true
}

// HasIdpCertFingerprintAlgorithm returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasIdpCertFingerprintAlgorithm() bool {
	if o != nil && !IsNil(o.IdpCertFingerprintAlgorithm) {
		return true
	}

	return false
}

// SetIdpCertFingerprintAlgorithm gets a reference to the given string and assigns it to the IdpCertFingerprintAlgorithm field.
func (o *AuthenticationProviderSettings) SetIdpCertFingerprintAlgorithm(v string) {
	o.IdpCertFingerprintAlgorithm = &v
}

// GetNameIdentifierFormat returns the NameIdentifierFormat field value if set, zero value otherwise.
func (o *AuthenticationProviderSettings) GetNameIdentifierFormat() string {
	if o == nil || IsNil(o.NameIdentifierFormat) {
		var ret string
		return ret
	}
	return *o.NameIdentifierFormat
}

// GetNameIdentifierFormatOk returns a tuple with the NameIdentifierFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationProviderSettings) GetNameIdentifierFormatOk() (*string, bool) {
	if o == nil || IsNil(o.NameIdentifierFormat) {
		return nil, false
	}
	return o.NameIdentifierFormat, true
}

// HasNameIdentifierFormat returns a boolean if a field has been set.
func (o *AuthenticationProviderSettings) HasNameIdentifierFormat() bool {
	if o != nil && !IsNil(o.NameIdentifierFormat) {
		return true
	}

	return false
}

// SetNameIdentifierFormat gets a reference to the given string and assigns it to the NameIdentifierFormat field.
func (o *AuthenticationProviderSettings) SetNameIdentifierFormat(v string) {
	o.NameIdentifierFormat = &v
}

func (o AuthenticationProviderSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationProviderSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssertionConsumerServiceUrl) {
		toSerialize["assertion_consumer_service_url"] = o.AssertionConsumerServiceUrl
	}
	if !IsNil(o.ServiceProviderEntityId) {
		toSerialize["service_provider_entity_id"] = o.ServiceProviderEntityId
	}
	if !IsNil(o.IdpEntityId) {
		toSerialize["idp_entity_id"] = o.IdpEntityId
	}
	if !IsNil(o.IdpSsoTargetUrl) {
		toSerialize["idp_sso_target_url"] = o.IdpSsoTargetUrl
	}
	if !IsNil(o.IdpCertFingerprint) {
		toSerialize["idp_cert_fingerprint"] = o.IdpCertFingerprint
	}
	if !IsNil(o.IdpCertFingerprintAlgorithm) {
		toSerialize["idp_cert_fingerprint_algorithm"] = o.IdpCertFingerprintAlgorithm
	}
	if !IsNil(o.NameIdentifierFormat) {
		toSerialize["name_identifier_format"] = o.NameIdentifierFormat
	}
	return toSerialize, nil
}

type NullableAuthenticationProviderSettings struct {
	value *AuthenticationProviderSettings
	isSet bool
}

func (v NullableAuthenticationProviderSettings) Get() *AuthenticationProviderSettings {
	return v.value
}

func (v *NullableAuthenticationProviderSettings) Set(val *AuthenticationProviderSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationProviderSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationProviderSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationProviderSettings(val *AuthenticationProviderSettings) *NullableAuthenticationProviderSettings {
	return &NullableAuthenticationProviderSettings{value: val, isSet: true}
}

func (v NullableAuthenticationProviderSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationProviderSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoRespConfigCreateSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoRespConfigCreateSchema{}

// AutoRespConfigCreateSchema struct for AutoRespConfigCreateSchema
type AutoRespConfigCreateSchema struct {
	Op string `json:"op"`
	Keywords []string `json:"keywords"`
	RespText *string `json:"resp_text,omitempty"`
	CountryCode string `json:"country_code"`
}

type _AutoRespConfigCreateSchema AutoRespConfigCreateSchema

// NewAutoRespConfigCreateSchema instantiates a new AutoRespConfigCreateSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoRespConfigCreateSchema(op string, keywords []string, countryCode string) *AutoRespConfigCreateSchema {
	this := AutoRespConfigCreateSchema{}
	this.Op = op
	this.Keywords = keywords
	this.CountryCode = countryCode
	return &this
}

// NewAutoRespConfigCreateSchemaWithDefaults instantiates a new AutoRespConfigCreateSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoRespConfigCreateSchemaWithDefaults() *AutoRespConfigCreateSchema {
	this := AutoRespConfigCreateSchema{}
	return &this
}

// GetOp returns the Op field value
func (o *AutoRespConfigCreateSchema) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *AutoRespConfigCreateSchema) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *AutoRespConfigCreateSchema) SetOp(v string) {
	o.Op = v
}

// GetKeywords returns the Keywords field value
func (o *AutoRespConfigCreateSchema) GetKeywords() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value
// and a boolean to check if the value has been set.
func (o *AutoRespConfigCreateSchema) GetKeywordsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keywords, true
}

// SetKeywords sets field value
func (o *AutoRespConfigCreateSchema) SetKeywords(v []string) {
	o.Keywords = v
}

// GetRespText returns the RespText field value if set, zero value otherwise.
func (o *AutoRespConfigCreateSchema) GetRespText() string {
	if o == nil || IsNil(o.RespText) {
		var ret string
		return ret
	}
	return *o.RespText
}

// GetRespTextOk returns a tuple with the RespText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRespConfigCreateSchema) GetRespTextOk() (*string, bool) {
	if o == nil || IsNil(o.RespText) {
		return nil, false
	}
	return o.RespText, true
}

// HasRespText returns a boolean if a field has been set.
func (o *AutoRespConfigCreateSchema) HasRespText() bool {
	if o != nil && !IsNil(o.RespText) {
		return true
	}

	return false
}

// SetRespText gets a reference to the given string and assigns it to the RespText field.
func (o *AutoRespConfigCreateSchema) SetRespText(v string) {
	o.RespText = &v
}

// GetCountryCode returns the CountryCode field value
func (o *AutoRespConfigCreateSchema) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *AutoRespConfigCreateSchema) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *AutoRespConfigCreateSchema) SetCountryCode(v string) {
	o.CountryCode = v
}

func (o AutoRespConfigCreateSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoRespConfigCreateSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["keywords"] = o.Keywords
	if !IsNil(o.RespText) {
		toSerialize["resp_text"] = o.RespText
	}
	toSerialize["country_code"] = o.CountryCode
	return toSerialize, nil
}

func (o *AutoRespConfigCreateSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"op",
		"keywords",
		"country_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoRespConfigCreateSchema := _AutoRespConfigCreateSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoRespConfigCreateSchema)

	if err != nil {
		return err
	}

	*o = AutoRespConfigCreateSchema(varAutoRespConfigCreateSchema)

	return err
}

type NullableAutoRespConfigCreateSchema struct {
	value *AutoRespConfigCreateSchema
	isSet bool
}

func (v NullableAutoRespConfigCreateSchema) Get() *AutoRespConfigCreateSchema {
	return v.value
}

func (v *NullableAutoRespConfigCreateSchema) Set(val *AutoRespConfigCreateSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoRespConfigCreateSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoRespConfigCreateSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoRespConfigCreateSchema(val *AutoRespConfigCreateSchema) *NullableAutoRespConfigCreateSchema {
	return &NullableAutoRespConfigCreateSchema{value: val, isSet: true}
}

func (v NullableAutoRespConfigCreateSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoRespConfigCreateSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GlobalIpAssignmentUsageMetricReceived type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIpAssignmentUsageMetricReceived{}

// GlobalIpAssignmentUsageMetricReceived struct for GlobalIpAssignmentUsageMetricReceived
type GlobalIpAssignmentUsageMetricReceived struct {
	// The amount of data received.
	Amount *float32 `json:"amount,omitempty"`
	// The unit of the amount of data received.
	Unit *string `json:"unit,omitempty"`
}

// NewGlobalIpAssignmentUsageMetricReceived instantiates a new GlobalIpAssignmentUsageMetricReceived object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIpAssignmentUsageMetricReceived() *GlobalIpAssignmentUsageMetricReceived {
	this := GlobalIpAssignmentUsageMetricReceived{}
	return &this
}

// NewGlobalIpAssignmentUsageMetricReceivedWithDefaults instantiates a new GlobalIpAssignmentUsageMetricReceived object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIpAssignmentUsageMetricReceivedWithDefaults() *GlobalIpAssignmentUsageMetricReceived {
	this := GlobalIpAssignmentUsageMetricReceived{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GlobalIpAssignmentUsageMetricReceived) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentUsageMetricReceived) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GlobalIpAssignmentUsageMetricReceived) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *GlobalIpAssignmentUsageMetricReceived) SetAmount(v float32) {
	o.Amount = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *GlobalIpAssignmentUsageMetricReceived) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpAssignmentUsageMetricReceived) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *GlobalIpAssignmentUsageMetricReceived) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *GlobalIpAssignmentUsageMetricReceived) SetUnit(v string) {
	o.Unit = &v
}

func (o GlobalIpAssignmentUsageMetricReceived) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIpAssignmentUsageMetricReceived) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableGlobalIpAssignmentUsageMetricReceived struct {
	value *GlobalIpAssignmentUsageMetricReceived
	isSet bool
}

func (v NullableGlobalIpAssignmentUsageMetricReceived) Get() *GlobalIpAssignmentUsageMetricReceived {
	return v.value
}

func (v *NullableGlobalIpAssignmentUsageMetricReceived) Set(val *GlobalIpAssignmentUsageMetricReceived) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIpAssignmentUsageMetricReceived) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIpAssignmentUsageMetricReceived) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIpAssignmentUsageMetricReceived(val *GlobalIpAssignmentUsageMetricReceived) *NullableGlobalIpAssignmentUsageMetricReceived {
	return &NullableGlobalIpAssignmentUsageMetricReceived{value: val, isSet: true}
}

func (v NullableGlobalIpAssignmentUsageMetricReceived) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIpAssignmentUsageMetricReceived) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



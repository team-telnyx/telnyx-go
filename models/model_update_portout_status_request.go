/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdatePortoutStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePortoutStatusRequest{}

// UpdatePortoutStatusRequest struct for UpdatePortoutStatusRequest
type UpdatePortoutStatusRequest struct {
	// Provide a reason if rejecting the port out request
	Reason *string `json:"reason,omitempty"`
}

// NewUpdatePortoutStatusRequest instantiates a new UpdatePortoutStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePortoutStatusRequest() *UpdatePortoutStatusRequest {
	this := UpdatePortoutStatusRequest{}
	return &this
}

// NewUpdatePortoutStatusRequestWithDefaults instantiates a new UpdatePortoutStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePortoutStatusRequestWithDefaults() *UpdatePortoutStatusRequest {
	this := UpdatePortoutStatusRequest{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *UpdatePortoutStatusRequest) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortoutStatusRequest) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *UpdatePortoutStatusRequest) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *UpdatePortoutStatusRequest) SetReason(v string) {
	o.Reason = &v
}

func (o UpdatePortoutStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePortoutStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableUpdatePortoutStatusRequest struct {
	value *UpdatePortoutStatusRequest
	isSet bool
}

func (v NullableUpdatePortoutStatusRequest) Get() *UpdatePortoutStatusRequest {
	return v.value
}

func (v *NullableUpdatePortoutStatusRequest) Set(val *UpdatePortoutStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePortoutStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePortoutStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePortoutStatusRequest(val *UpdatePortoutStatusRequest) *NullableUpdatePortoutStatusRequest {
	return &NullableUpdatePortoutStatusRequest{value: val, isSet: true}
}

func (v NullableUpdatePortoutStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePortoutStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the GlobalIpUsageMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIpUsageMetric{}

// GlobalIpUsageMetric struct for GlobalIpUsageMetric
type GlobalIpUsageMetric struct {
	// The timestamp of the metric.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	GlobalIp *GlobalIpUsageMetricGlobalIp `json:"global_ip,omitempty"`
	Transmitted *GlobalIpAssignmentUsageMetricTransmitted `json:"transmitted,omitempty"`
	Received *GlobalIpAssignmentUsageMetricReceived `json:"received,omitempty"`
}

// NewGlobalIpUsageMetric instantiates a new GlobalIpUsageMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIpUsageMetric() *GlobalIpUsageMetric {
	this := GlobalIpUsageMetric{}
	return &this
}

// NewGlobalIpUsageMetricWithDefaults instantiates a new GlobalIpUsageMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIpUsageMetricWithDefaults() *GlobalIpUsageMetric {
	this := GlobalIpUsageMetric{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GlobalIpUsageMetric) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpUsageMetric) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GlobalIpUsageMetric) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *GlobalIpUsageMetric) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetGlobalIp returns the GlobalIp field value if set, zero value otherwise.
func (o *GlobalIpUsageMetric) GetGlobalIp() GlobalIpUsageMetricGlobalIp {
	if o == nil || IsNil(o.GlobalIp) {
		var ret GlobalIpUsageMetricGlobalIp
		return ret
	}
	return *o.GlobalIp
}

// GetGlobalIpOk returns a tuple with the GlobalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpUsageMetric) GetGlobalIpOk() (*GlobalIpUsageMetricGlobalIp, bool) {
	if o == nil || IsNil(o.GlobalIp) {
		return nil, false
	}
	return o.GlobalIp, true
}

// HasGlobalIp returns a boolean if a field has been set.
func (o *GlobalIpUsageMetric) HasGlobalIp() bool {
	if o != nil && !IsNil(o.GlobalIp) {
		return true
	}

	return false
}

// SetGlobalIp gets a reference to the given GlobalIpUsageMetricGlobalIp and assigns it to the GlobalIp field.
func (o *GlobalIpUsageMetric) SetGlobalIp(v GlobalIpUsageMetricGlobalIp) {
	o.GlobalIp = &v
}

// GetTransmitted returns the Transmitted field value if set, zero value otherwise.
func (o *GlobalIpUsageMetric) GetTransmitted() GlobalIpAssignmentUsageMetricTransmitted {
	if o == nil || IsNil(o.Transmitted) {
		var ret GlobalIpAssignmentUsageMetricTransmitted
		return ret
	}
	return *o.Transmitted
}

// GetTransmittedOk returns a tuple with the Transmitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpUsageMetric) GetTransmittedOk() (*GlobalIpAssignmentUsageMetricTransmitted, bool) {
	if o == nil || IsNil(o.Transmitted) {
		return nil, false
	}
	return o.Transmitted, true
}

// HasTransmitted returns a boolean if a field has been set.
func (o *GlobalIpUsageMetric) HasTransmitted() bool {
	if o != nil && !IsNil(o.Transmitted) {
		return true
	}

	return false
}

// SetTransmitted gets a reference to the given GlobalIpAssignmentUsageMetricTransmitted and assigns it to the Transmitted field.
func (o *GlobalIpUsageMetric) SetTransmitted(v GlobalIpAssignmentUsageMetricTransmitted) {
	o.Transmitted = &v
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *GlobalIpUsageMetric) GetReceived() GlobalIpAssignmentUsageMetricReceived {
	if o == nil || IsNil(o.Received) {
		var ret GlobalIpAssignmentUsageMetricReceived
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIpUsageMetric) GetReceivedOk() (*GlobalIpAssignmentUsageMetricReceived, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *GlobalIpUsageMetric) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given GlobalIpAssignmentUsageMetricReceived and assigns it to the Received field.
func (o *GlobalIpUsageMetric) SetReceived(v GlobalIpAssignmentUsageMetricReceived) {
	o.Received = &v
}

func (o GlobalIpUsageMetric) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIpUsageMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.GlobalIp) {
		toSerialize["global_ip"] = o.GlobalIp
	}
	if !IsNil(o.Transmitted) {
		toSerialize["transmitted"] = o.Transmitted
	}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	return toSerialize, nil
}

type NullableGlobalIpUsageMetric struct {
	value *GlobalIpUsageMetric
	isSet bool
}

func (v NullableGlobalIpUsageMetric) Get() *GlobalIpUsageMetric {
	return v.value
}

func (v *NullableGlobalIpUsageMetric) Set(val *GlobalIpUsageMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIpUsageMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIpUsageMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIpUsageMetric(val *GlobalIpUsageMetric) *NullableGlobalIpUsageMetric {
	return &NullableGlobalIpUsageMetric{value: val, isSet: true}
}

func (v NullableGlobalIpUsageMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIpUsageMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



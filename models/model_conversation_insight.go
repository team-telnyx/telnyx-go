/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ConversationInsight type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversationInsight{}

// ConversationInsight struct for ConversationInsight
type ConversationInsight struct {
	// Unique identifier for the conversation insight.
	Id string `json:"id"`
	// Current status of the insight generation for the conversation.
	Status string `json:"status"`
	// Timestamp of when the object was created.
	CreatedAt time.Time `json:"created_at"`
	// List of insights extracted from the conversation.
	ConversationInsights []ConversationInsightConversationInsightsInner `json:"conversation_insights"`
}

type _ConversationInsight ConversationInsight

// NewConversationInsight instantiates a new ConversationInsight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationInsight(id string, status string, createdAt time.Time, conversationInsights []ConversationInsightConversationInsightsInner) *ConversationInsight {
	this := ConversationInsight{}
	this.Id = id
	this.Status = status
	this.CreatedAt = createdAt
	this.ConversationInsights = conversationInsights
	return &this
}

// NewConversationInsightWithDefaults instantiates a new ConversationInsight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationInsightWithDefaults() *ConversationInsight {
	this := ConversationInsight{}
	return &this
}

// GetId returns the Id field value
func (o *ConversationInsight) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConversationInsight) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConversationInsight) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *ConversationInsight) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConversationInsight) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConversationInsight) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ConversationInsight) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ConversationInsight) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ConversationInsight) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetConversationInsights returns the ConversationInsights field value
func (o *ConversationInsight) GetConversationInsights() []ConversationInsightConversationInsightsInner {
	if o == nil {
		var ret []ConversationInsightConversationInsightsInner
		return ret
	}

	return o.ConversationInsights
}

// GetConversationInsightsOk returns a tuple with the ConversationInsights field value
// and a boolean to check if the value has been set.
func (o *ConversationInsight) GetConversationInsightsOk() ([]ConversationInsightConversationInsightsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConversationInsights, true
}

// SetConversationInsights sets field value
func (o *ConversationInsight) SetConversationInsights(v []ConversationInsightConversationInsightsInner) {
	o.ConversationInsights = v
}

func (o ConversationInsight) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversationInsight) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["conversation_insights"] = o.ConversationInsights
	return toSerialize, nil
}

func (o *ConversationInsight) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"status",
		"created_at",
		"conversation_insights",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversationInsight := _ConversationInsight{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversationInsight)

	if err != nil {
		return err
	}

	*o = ConversationInsight(varConversationInsight)

	return err
}

type NullableConversationInsight struct {
	value *ConversationInsight
	isSet bool
}

func (v NullableConversationInsight) Get() *ConversationInsight {
	return v.value
}

func (v *NullableConversationInsight) Set(val *ConversationInsight) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationInsight) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationInsight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationInsight(val *ConversationInsight) *NullableConversationInsight {
	return &NullableConversationInsight{value: val, isSet: true}
}

func (v NullableConversationInsight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationInsight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



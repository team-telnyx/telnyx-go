/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SIMCardOrderOrderAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SIMCardOrderOrderAddress{}

// SIMCardOrderOrderAddress An object representing the address information from when the order was submitted.
type SIMCardOrderOrderAddress struct {
	// Uniquely identifies the address for the order.
	Id *string `json:"id,omitempty"`
	// The first name of the shipping recipient.
	FirstName *string `json:"first_name,omitempty"`
	// The last name of the shipping recipient.
	LastName *string `json:"last_name,omitempty"`
	// The name of the business where the address is located.
	BusinessName *string `json:"business_name,omitempty"`
	// The name of the street where the address is located.
	StreetAddress *string `json:"street_address,omitempty"`
	// Supplemental field for address information.
	ExtendedAddress *string `json:"extended_address,omitempty"`
	// The name of the city where the address is located.
	Locality *string `json:"locality,omitempty"`
	// State or province where the address is located.
	AdministrativeArea *string `json:"administrative_area,omitempty"`
	// The mobile operator two-character (ISO 3166-1 alpha-2) origin country code.
	CountryCode *string `json:"country_code,omitempty"`
	// Postal code for the address.
	PostalCode *string `json:"postal_code,omitempty"`
}

// NewSIMCardOrderOrderAddress instantiates a new SIMCardOrderOrderAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSIMCardOrderOrderAddress() *SIMCardOrderOrderAddress {
	this := SIMCardOrderOrderAddress{}
	return &this
}

// NewSIMCardOrderOrderAddressWithDefaults instantiates a new SIMCardOrderOrderAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSIMCardOrderOrderAddressWithDefaults() *SIMCardOrderOrderAddress {
	this := SIMCardOrderOrderAddress{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SIMCardOrderOrderAddress) SetId(v string) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *SIMCardOrderOrderAddress) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *SIMCardOrderOrderAddress) SetLastName(v string) {
	o.LastName = &v
}

// GetBusinessName returns the BusinessName field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetBusinessName() string {
	if o == nil || IsNil(o.BusinessName) {
		var ret string
		return ret
	}
	return *o.BusinessName
}

// GetBusinessNameOk returns a tuple with the BusinessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetBusinessNameOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessName) {
		return nil, false
	}
	return o.BusinessName, true
}

// HasBusinessName returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasBusinessName() bool {
	if o != nil && !IsNil(o.BusinessName) {
		return true
	}

	return false
}

// SetBusinessName gets a reference to the given string and assigns it to the BusinessName field.
func (o *SIMCardOrderOrderAddress) SetBusinessName(v string) {
	o.BusinessName = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *SIMCardOrderOrderAddress) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetExtendedAddress returns the ExtendedAddress field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetExtendedAddress() string {
	if o == nil || IsNil(o.ExtendedAddress) {
		var ret string
		return ret
	}
	return *o.ExtendedAddress
}

// GetExtendedAddressOk returns a tuple with the ExtendedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetExtendedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedAddress) {
		return nil, false
	}
	return o.ExtendedAddress, true
}

// HasExtendedAddress returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasExtendedAddress() bool {
	if o != nil && !IsNil(o.ExtendedAddress) {
		return true
	}

	return false
}

// SetExtendedAddress gets a reference to the given string and assigns it to the ExtendedAddress field.
func (o *SIMCardOrderOrderAddress) SetExtendedAddress(v string) {
	o.ExtendedAddress = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *SIMCardOrderOrderAddress) SetLocality(v string) {
	o.Locality = &v
}

// GetAdministrativeArea returns the AdministrativeArea field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetAdministrativeArea() string {
	if o == nil || IsNil(o.AdministrativeArea) {
		var ret string
		return ret
	}
	return *o.AdministrativeArea
}

// GetAdministrativeAreaOk returns a tuple with the AdministrativeArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetAdministrativeAreaOk() (*string, bool) {
	if o == nil || IsNil(o.AdministrativeArea) {
		return nil, false
	}
	return o.AdministrativeArea, true
}

// HasAdministrativeArea returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasAdministrativeArea() bool {
	if o != nil && !IsNil(o.AdministrativeArea) {
		return true
	}

	return false
}

// SetAdministrativeArea gets a reference to the given string and assigns it to the AdministrativeArea field.
func (o *SIMCardOrderOrderAddress) SetAdministrativeArea(v string) {
	o.AdministrativeArea = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *SIMCardOrderOrderAddress) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *SIMCardOrderOrderAddress) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderOrderAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *SIMCardOrderOrderAddress) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *SIMCardOrderOrderAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

func (o SIMCardOrderOrderAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SIMCardOrderOrderAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.BusinessName) {
		toSerialize["business_name"] = o.BusinessName
	}
	if !IsNil(o.StreetAddress) {
		toSerialize["street_address"] = o.StreetAddress
	}
	if !IsNil(o.ExtendedAddress) {
		toSerialize["extended_address"] = o.ExtendedAddress
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.AdministrativeArea) {
		toSerialize["administrative_area"] = o.AdministrativeArea
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	return toSerialize, nil
}

type NullableSIMCardOrderOrderAddress struct {
	value *SIMCardOrderOrderAddress
	isSet bool
}

func (v NullableSIMCardOrderOrderAddress) Get() *SIMCardOrderOrderAddress {
	return v.value
}

func (v *NullableSIMCardOrderOrderAddress) Set(val *SIMCardOrderOrderAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableSIMCardOrderOrderAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableSIMCardOrderOrderAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSIMCardOrderOrderAddress(val *SIMCardOrderOrderAddress) *NullableSIMCardOrderOrderAddress {
	return &NullableSIMCardOrderOrderAddress{value: val, isSet: true}
}

func (v NullableSIMCardOrderOrderAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSIMCardOrderOrderAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



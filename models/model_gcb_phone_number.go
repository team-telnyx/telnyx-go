/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GcbPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcbPhoneNumber{}

// GcbPhoneNumber struct for GcbPhoneNumber
type GcbPhoneNumber struct {
	RecordType string `json:"record_type"`
	ChannelZoneId string `json:"channel_zone_id"`
	Id *string `json:"id,omitempty"`
	PhoneNumber string `json:"phone_number"`
	// ISO 8601 formatted date of when the phone number was created
	CreatedAt *string `json:"created_at,omitempty"`
}

type _GcbPhoneNumber GcbPhoneNumber

// NewGcbPhoneNumber instantiates a new GcbPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcbPhoneNumber(recordType string, channelZoneId string, phoneNumber string) *GcbPhoneNumber {
	this := GcbPhoneNumber{}
	this.RecordType = recordType
	this.ChannelZoneId = channelZoneId
	this.PhoneNumber = phoneNumber
	return &this
}

// NewGcbPhoneNumberWithDefaults instantiates a new GcbPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcbPhoneNumberWithDefaults() *GcbPhoneNumber {
	this := GcbPhoneNumber{}
	return &this
}

// GetRecordType returns the RecordType field value
func (o *GcbPhoneNumber) GetRecordType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value
// and a boolean to check if the value has been set.
func (o *GcbPhoneNumber) GetRecordTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordType, true
}

// SetRecordType sets field value
func (o *GcbPhoneNumber) SetRecordType(v string) {
	o.RecordType = v
}

// GetChannelZoneId returns the ChannelZoneId field value
func (o *GcbPhoneNumber) GetChannelZoneId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelZoneId
}

// GetChannelZoneIdOk returns a tuple with the ChannelZoneId field value
// and a boolean to check if the value has been set.
func (o *GcbPhoneNumber) GetChannelZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelZoneId, true
}

// SetChannelZoneId sets field value
func (o *GcbPhoneNumber) SetChannelZoneId(v string) {
	o.ChannelZoneId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GcbPhoneNumber) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcbPhoneNumber) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GcbPhoneNumber) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GcbPhoneNumber) SetId(v string) {
	o.Id = &v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *GcbPhoneNumber) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *GcbPhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *GcbPhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GcbPhoneNumber) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcbPhoneNumber) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GcbPhoneNumber) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GcbPhoneNumber) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o GcbPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcbPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["record_type"] = o.RecordType
	toSerialize["channel_zone_id"] = o.ChannelZoneId
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["phone_number"] = o.PhoneNumber
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

func (o *GcbPhoneNumber) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_type",
		"channel_zone_id",
		"phone_number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGcbPhoneNumber := _GcbPhoneNumber{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGcbPhoneNumber)

	if err != nil {
		return err
	}

	*o = GcbPhoneNumber(varGcbPhoneNumber)

	return err
}

type NullableGcbPhoneNumber struct {
	value *GcbPhoneNumber
	isSet bool
}

func (v NullableGcbPhoneNumber) Get() *GcbPhoneNumber {
	return v.value
}

func (v *NullableGcbPhoneNumber) Set(val *GcbPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableGcbPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableGcbPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcbPhoneNumber(val *GcbPhoneNumber) *NullableGcbPhoneNumber {
	return &NullableGcbPhoneNumber{value: val, isSet: true}
}

func (v NullableGcbPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcbPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the RoomSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomSession{}

// RoomSession struct for RoomSession
type RoomSession struct {
	// A unique identifier for the room session.
	Id *string `json:"id,omitempty"`
	// Identify the room hosting that room session.
	RoomId *string `json:"room_id,omitempty"`
	// Shows if the room session is active or not.
	Active *bool `json:"active,omitempty"`
	// ISO 8601 timestamp when the room session was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 timestamp when the room session was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// ISO 8601 timestamp when the room session has ended.
	EndedAt *string `json:"ended_at,omitempty"`
	Participants []RoomParticipant `json:"participants,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
}

// NewRoomSession instantiates a new RoomSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomSession() *RoomSession {
	this := RoomSession{}
	return &this
}

// NewRoomSessionWithDefaults instantiates a new RoomSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomSessionWithDefaults() *RoomSession {
	this := RoomSession{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RoomSession) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RoomSession) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RoomSession) SetId(v string) {
	o.Id = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *RoomSession) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *RoomSession) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *RoomSession) SetRoomId(v string) {
	o.RoomId = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *RoomSession) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *RoomSession) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *RoomSession) SetActive(v bool) {
	o.Active = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RoomSession) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RoomSession) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RoomSession) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RoomSession) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RoomSession) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *RoomSession) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *RoomSession) GetEndedAt() string {
	if o == nil || IsNil(o.EndedAt) {
		var ret string
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetEndedAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *RoomSession) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given string and assigns it to the EndedAt field.
func (o *RoomSession) SetEndedAt(v string) {
	o.EndedAt = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise.
func (o *RoomSession) GetParticipants() []RoomParticipant {
	if o == nil || IsNil(o.Participants) {
		var ret []RoomParticipant
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetParticipantsOk() ([]RoomParticipant, bool) {
	if o == nil || IsNil(o.Participants) {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *RoomSession) HasParticipants() bool {
	if o != nil && !IsNil(o.Participants) {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []RoomParticipant and assigns it to the Participants field.
func (o *RoomSession) SetParticipants(v []RoomParticipant) {
	o.Participants = v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *RoomSession) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSession) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *RoomSession) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *RoomSession) SetRecordType(v string) {
	o.RecordType = &v
}

func (o RoomSession) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RoomId) {
		toSerialize["room_id"] = o.RoomId
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	if !IsNil(o.Participants) {
		toSerialize["participants"] = o.Participants
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullableRoomSession struct {
	value *RoomSession
	isSet bool
}

func (v NullableRoomSession) Get() *RoomSession {
	return v.value
}

func (v *NullableRoomSession) Set(val *RoomSession) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomSession) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomSession(val *RoomSession) *NullableRoomSession {
	return &NullableRoomSession{value: val, isSet: true}
}

func (v NullableRoomSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



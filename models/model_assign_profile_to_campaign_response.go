/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AssignProfileToCampaignResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignProfileToCampaignResponse{}

// AssignProfileToCampaignResponse struct for AssignProfileToCampaignResponse
type AssignProfileToCampaignResponse struct {
	// The ID of the messaging profile that you want to link to the specified campaign.
	MessagingProfileId string `json:"messagingProfileId"`
	// The TCR ID of the shared campaign you want to link to the specified messaging profile (for campaigns not created using Telnyx 10DLC services only). If you supply this ID in the request, do not also include a campaignId.
	TcrCampaignId *string `json:"tcrCampaignId,omitempty"`
	// The ID of the campaign you want to link to the specified messaging profile. If you supply this ID in the request, do not also include a tcrCampaignId.
	CampaignId *string `json:"campaignId,omitempty"`
	// The ID of the task associated with assigning a messaging profile to a campaign.
	TaskId string `json:"taskId"`
}

type _AssignProfileToCampaignResponse AssignProfileToCampaignResponse

// NewAssignProfileToCampaignResponse instantiates a new AssignProfileToCampaignResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignProfileToCampaignResponse(messagingProfileId string, taskId string) *AssignProfileToCampaignResponse {
	this := AssignProfileToCampaignResponse{}
	this.MessagingProfileId = messagingProfileId
	this.TaskId = taskId
	return &this
}

// NewAssignProfileToCampaignResponseWithDefaults instantiates a new AssignProfileToCampaignResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignProfileToCampaignResponseWithDefaults() *AssignProfileToCampaignResponse {
	this := AssignProfileToCampaignResponse{}
	return &this
}

// GetMessagingProfileId returns the MessagingProfileId field value
func (o *AssignProfileToCampaignResponse) GetMessagingProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagingProfileId
}

// GetMessagingProfileIdOk returns a tuple with the MessagingProfileId field value
// and a boolean to check if the value has been set.
func (o *AssignProfileToCampaignResponse) GetMessagingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagingProfileId, true
}

// SetMessagingProfileId sets field value
func (o *AssignProfileToCampaignResponse) SetMessagingProfileId(v string) {
	o.MessagingProfileId = v
}

// GetTcrCampaignId returns the TcrCampaignId field value if set, zero value otherwise.
func (o *AssignProfileToCampaignResponse) GetTcrCampaignId() string {
	if o == nil || IsNil(o.TcrCampaignId) {
		var ret string
		return ret
	}
	return *o.TcrCampaignId
}

// GetTcrCampaignIdOk returns a tuple with the TcrCampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignProfileToCampaignResponse) GetTcrCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.TcrCampaignId) {
		return nil, false
	}
	return o.TcrCampaignId, true
}

// HasTcrCampaignId returns a boolean if a field has been set.
func (o *AssignProfileToCampaignResponse) HasTcrCampaignId() bool {
	if o != nil && !IsNil(o.TcrCampaignId) {
		return true
	}

	return false
}

// SetTcrCampaignId gets a reference to the given string and assigns it to the TcrCampaignId field.
func (o *AssignProfileToCampaignResponse) SetTcrCampaignId(v string) {
	o.TcrCampaignId = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *AssignProfileToCampaignResponse) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignProfileToCampaignResponse) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *AssignProfileToCampaignResponse) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *AssignProfileToCampaignResponse) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetTaskId returns the TaskId field value
func (o *AssignProfileToCampaignResponse) GetTaskId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
func (o *AssignProfileToCampaignResponse) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskId, true
}

// SetTaskId sets field value
func (o *AssignProfileToCampaignResponse) SetTaskId(v string) {
	o.TaskId = v
}

func (o AssignProfileToCampaignResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignProfileToCampaignResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messagingProfileId"] = o.MessagingProfileId
	if !IsNil(o.TcrCampaignId) {
		toSerialize["tcrCampaignId"] = o.TcrCampaignId
	}
	if !IsNil(o.CampaignId) {
		toSerialize["campaignId"] = o.CampaignId
	}
	toSerialize["taskId"] = o.TaskId
	return toSerialize, nil
}

func (o *AssignProfileToCampaignResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messagingProfileId",
		"taskId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssignProfileToCampaignResponse := _AssignProfileToCampaignResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssignProfileToCampaignResponse)

	if err != nil {
		return err
	}

	*o = AssignProfileToCampaignResponse(varAssignProfileToCampaignResponse)

	return err
}

type NullableAssignProfileToCampaignResponse struct {
	value *AssignProfileToCampaignResponse
	isSet bool
}

func (v NullableAssignProfileToCampaignResponse) Get() *AssignProfileToCampaignResponse {
	return v.value
}

func (v *NullableAssignProfileToCampaignResponse) Set(val *AssignProfileToCampaignResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignProfileToCampaignResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignProfileToCampaignResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignProfileToCampaignResponse(val *AssignProfileToCampaignResponse) *NullableAssignProfileToCampaignResponse {
	return &NullableAssignProfileToCampaignResponse{value: val, isSet: true}
}

func (v NullableAssignProfileToCampaignResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignProfileToCampaignResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



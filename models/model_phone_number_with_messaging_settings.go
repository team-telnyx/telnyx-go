/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PhoneNumberWithMessagingSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneNumberWithMessagingSettings{}

// PhoneNumberWithMessagingSettings struct for PhoneNumberWithMessagingSettings
type PhoneNumberWithMessagingSettings struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Identifies the type of resource.
	Id *string `json:"id,omitempty"`
	// +E.164 formatted phone number.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Unique identifier for a messaging profile.
	MessagingProfileId NullableString `json:"messaging_profile_id,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// ISO 3166-1 alpha-2 country code.
	CountryCode *string `json:"country_code,omitempty" validate:"regexp=^[A-Z]{2}$"`
	// The type of the phone number
	Type *string `json:"type,omitempty"`
	Health *NumberHealthMetrics `json:"health,omitempty"`
	// The messaging products that this number can be registered to use
	EligibleMessagingProducts []string `json:"eligible_messaging_products,omitempty"`
	// The messaging traffic or use case for which the number is currently configured.
	TrafficType *string `json:"traffic_type,omitempty"`
	// The messaging product that the number is registered to use
	MessagingProduct *string `json:"messaging_product,omitempty"`
	Features *PhoneNumberWithMessagingSettingsFeatures `json:"features,omitempty"`
}

// NewPhoneNumberWithMessagingSettings instantiates a new PhoneNumberWithMessagingSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumberWithMessagingSettings() *PhoneNumberWithMessagingSettings {
	this := PhoneNumberWithMessagingSettings{}
	return &this
}

// NewPhoneNumberWithMessagingSettingsWithDefaults instantiates a new PhoneNumberWithMessagingSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumberWithMessagingSettingsWithDefaults() *PhoneNumberWithMessagingSettings {
	this := PhoneNumberWithMessagingSettings{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PhoneNumberWithMessagingSettings) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PhoneNumberWithMessagingSettings) SetId(v string) {
	o.Id = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *PhoneNumberWithMessagingSettings) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetMessagingProfileId returns the MessagingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneNumberWithMessagingSettings) GetMessagingProfileId() string {
	if o == nil || IsNil(o.MessagingProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.MessagingProfileId.Get()
}

// GetMessagingProfileIdOk returns a tuple with the MessagingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneNumberWithMessagingSettings) GetMessagingProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessagingProfileId.Get(), o.MessagingProfileId.IsSet()
}

// HasMessagingProfileId returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasMessagingProfileId() bool {
	if o != nil && o.MessagingProfileId.IsSet() {
		return true
	}

	return false
}

// SetMessagingProfileId gets a reference to the given NullableString and assigns it to the MessagingProfileId field.
func (o *PhoneNumberWithMessagingSettings) SetMessagingProfileId(v string) {
	o.MessagingProfileId.Set(&v)
}
// SetMessagingProfileIdNil sets the value for MessagingProfileId to be an explicit nil
func (o *PhoneNumberWithMessagingSettings) SetMessagingProfileIdNil() {
	o.MessagingProfileId.Set(nil)
}

// UnsetMessagingProfileId ensures that no value is present for MessagingProfileId, not even an explicit nil
func (o *PhoneNumberWithMessagingSettings) UnsetMessagingProfileId() {
	o.MessagingProfileId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PhoneNumberWithMessagingSettings) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PhoneNumberWithMessagingSettings) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PhoneNumberWithMessagingSettings) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PhoneNumberWithMessagingSettings) SetType(v string) {
	o.Type = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetHealth() NumberHealthMetrics {
	if o == nil || IsNil(o.Health) {
		var ret NumberHealthMetrics
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetHealthOk() (*NumberHealthMetrics, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given NumberHealthMetrics and assigns it to the Health field.
func (o *PhoneNumberWithMessagingSettings) SetHealth(v NumberHealthMetrics) {
	o.Health = &v
}

// GetEligibleMessagingProducts returns the EligibleMessagingProducts field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetEligibleMessagingProducts() []string {
	if o == nil || IsNil(o.EligibleMessagingProducts) {
		var ret []string
		return ret
	}
	return o.EligibleMessagingProducts
}

// GetEligibleMessagingProductsOk returns a tuple with the EligibleMessagingProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetEligibleMessagingProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.EligibleMessagingProducts) {
		return nil, false
	}
	return o.EligibleMessagingProducts, true
}

// HasEligibleMessagingProducts returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasEligibleMessagingProducts() bool {
	if o != nil && !IsNil(o.EligibleMessagingProducts) {
		return true
	}

	return false
}

// SetEligibleMessagingProducts gets a reference to the given []string and assigns it to the EligibleMessagingProducts field.
func (o *PhoneNumberWithMessagingSettings) SetEligibleMessagingProducts(v []string) {
	o.EligibleMessagingProducts = v
}

// GetTrafficType returns the TrafficType field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetTrafficType() string {
	if o == nil || IsNil(o.TrafficType) {
		var ret string
		return ret
	}
	return *o.TrafficType
}

// GetTrafficTypeOk returns a tuple with the TrafficType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetTrafficTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrafficType) {
		return nil, false
	}
	return o.TrafficType, true
}

// HasTrafficType returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasTrafficType() bool {
	if o != nil && !IsNil(o.TrafficType) {
		return true
	}

	return false
}

// SetTrafficType gets a reference to the given string and assigns it to the TrafficType field.
func (o *PhoneNumberWithMessagingSettings) SetTrafficType(v string) {
	o.TrafficType = &v
}

// GetMessagingProduct returns the MessagingProduct field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetMessagingProduct() string {
	if o == nil || IsNil(o.MessagingProduct) {
		var ret string
		return ret
	}
	return *o.MessagingProduct
}

// GetMessagingProductOk returns a tuple with the MessagingProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetMessagingProductOk() (*string, bool) {
	if o == nil || IsNil(o.MessagingProduct) {
		return nil, false
	}
	return o.MessagingProduct, true
}

// HasMessagingProduct returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasMessagingProduct() bool {
	if o != nil && !IsNil(o.MessagingProduct) {
		return true
	}

	return false
}

// SetMessagingProduct gets a reference to the given string and assigns it to the MessagingProduct field.
func (o *PhoneNumberWithMessagingSettings) SetMessagingProduct(v string) {
	o.MessagingProduct = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *PhoneNumberWithMessagingSettings) GetFeatures() PhoneNumberWithMessagingSettingsFeatures {
	if o == nil || IsNil(o.Features) {
		var ret PhoneNumberWithMessagingSettingsFeatures
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithMessagingSettings) GetFeaturesOk() (*PhoneNumberWithMessagingSettingsFeatures, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *PhoneNumberWithMessagingSettings) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given PhoneNumberWithMessagingSettingsFeatures and assigns it to the Features field.
func (o *PhoneNumberWithMessagingSettings) SetFeatures(v PhoneNumberWithMessagingSettingsFeatures) {
	o.Features = &v
}

func (o PhoneNumberWithMessagingSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneNumberWithMessagingSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.MessagingProfileId.IsSet() {
		toSerialize["messaging_profile_id"] = o.MessagingProfileId.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.EligibleMessagingProducts) {
		toSerialize["eligible_messaging_products"] = o.EligibleMessagingProducts
	}
	if !IsNil(o.TrafficType) {
		toSerialize["traffic_type"] = o.TrafficType
	}
	if !IsNil(o.MessagingProduct) {
		toSerialize["messaging_product"] = o.MessagingProduct
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	return toSerialize, nil
}

type NullablePhoneNumberWithMessagingSettings struct {
	value *PhoneNumberWithMessagingSettings
	isSet bool
}

func (v NullablePhoneNumberWithMessagingSettings) Get() *PhoneNumberWithMessagingSettings {
	return v.value
}

func (v *NullablePhoneNumberWithMessagingSettings) Set(val *PhoneNumberWithMessagingSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumberWithMessagingSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumberWithMessagingSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumberWithMessagingSettings(val *PhoneNumberWithMessagingSettings) *NullablePhoneNumberWithMessagingSettings {
	return &NullablePhoneNumberWithMessagingSettings{value: val, isSet: true}
}

func (v NullablePhoneNumberWithMessagingSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumberWithMessagingSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



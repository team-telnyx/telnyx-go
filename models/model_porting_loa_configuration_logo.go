/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingLOAConfigurationLogo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingLOAConfigurationLogo{}

// PortingLOAConfigurationLogo The logo to be used in the LOA.
type PortingLOAConfigurationLogo struct {
	// Identifies the document that contains the logo.
	DocumentId *string `json:"document_id,omitempty"`
	// The content type of the logo.
	ContentType *string `json:"content_type,omitempty"`
}

// NewPortingLOAConfigurationLogo instantiates a new PortingLOAConfigurationLogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingLOAConfigurationLogo() *PortingLOAConfigurationLogo {
	this := PortingLOAConfigurationLogo{}
	return &this
}

// NewPortingLOAConfigurationLogoWithDefaults instantiates a new PortingLOAConfigurationLogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingLOAConfigurationLogoWithDefaults() *PortingLOAConfigurationLogo {
	this := PortingLOAConfigurationLogo{}
	return &this
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *PortingLOAConfigurationLogo) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationLogo) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *PortingLOAConfigurationLogo) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *PortingLOAConfigurationLogo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *PortingLOAConfigurationLogo) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfigurationLogo) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *PortingLOAConfigurationLogo) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *PortingLOAConfigurationLogo) SetContentType(v string) {
	o.ContentType = &v
}

func (o PortingLOAConfigurationLogo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingLOAConfigurationLogo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocumentId) {
		toSerialize["document_id"] = o.DocumentId
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	return toSerialize, nil
}

type NullablePortingLOAConfigurationLogo struct {
	value *PortingLOAConfigurationLogo
	isSet bool
}

func (v NullablePortingLOAConfigurationLogo) Get() *PortingLOAConfigurationLogo {
	return v.value
}

func (v *NullablePortingLOAConfigurationLogo) Set(val *PortingLOAConfigurationLogo) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingLOAConfigurationLogo) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingLOAConfigurationLogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingLOAConfigurationLogo(val *PortingLOAConfigurationLogo) *NullablePortingLOAConfigurationLogo {
	return &NullablePortingLOAConfigurationLogo{value: val, isSet: true}
}

func (v NullablePortingLOAConfigurationLogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingLOAConfigurationLogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



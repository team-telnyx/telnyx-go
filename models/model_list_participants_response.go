/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the ListParticipantsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListParticipantsResponse{}

// ListParticipantsResponse struct for ListParticipantsResponse
type ListParticipantsResponse struct {
	Data []Participant `json:"data,omitempty"`
	Meta *PaginationMeta `json:"meta,omitempty"`
}

// NewListParticipantsResponse instantiates a new ListParticipantsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListParticipantsResponse() *ListParticipantsResponse {
	this := ListParticipantsResponse{}
	return &this
}

// NewListParticipantsResponseWithDefaults instantiates a new ListParticipantsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListParticipantsResponseWithDefaults() *ListParticipantsResponse {
	this := ListParticipantsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListParticipantsResponse) GetData() []Participant {
	if o == nil || IsNil(o.Data) {
		var ret []Participant
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListParticipantsResponse) GetDataOk() ([]Participant, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListParticipantsResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Participant and assigns it to the Data field.
func (o *ListParticipantsResponse) SetData(v []Participant) {
	o.Data = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListParticipantsResponse) GetMeta() PaginationMeta {
	if o == nil || IsNil(o.Meta) {
		var ret PaginationMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListParticipantsResponse) GetMetaOk() (*PaginationMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListParticipantsResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PaginationMeta and assigns it to the Meta field.
func (o *ListParticipantsResponse) SetMeta(v PaginationMeta) {
	o.Meta = &v
}

func (o ListParticipantsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListParticipantsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListParticipantsResponse struct {
	value *ListParticipantsResponse
	isSet bool
}

func (v NullableListParticipantsResponse) Get() *ListParticipantsResponse {
	return v.value
}

func (v *NullableListParticipantsResponse) Set(val *ListParticipantsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListParticipantsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListParticipantsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListParticipantsResponse(val *ListParticipantsResponse) *NullableListParticipantsResponse {
	return &NullableListParticipantsResponse{value: val, isSet: true}
}

func (v NullableListParticipantsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListParticipantsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



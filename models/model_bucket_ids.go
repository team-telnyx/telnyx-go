/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BucketIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketIds{}

// BucketIds struct for BucketIds
type BucketIds struct {
	// List of [embedded storage buckets](https://developers.telnyx.com/api/inference/inference-embedding/post-embedding) to use for retrieval-augmented generation.
	BucketIds []string `json:"bucket_ids"`
	// The maximum number of results to retrieve as context for the language model.
	MaxNumResults *int32 `json:"max_num_results,omitempty"`
}

type _BucketIds BucketIds

// NewBucketIds instantiates a new BucketIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketIds(bucketIds []string) *BucketIds {
	this := BucketIds{}
	this.BucketIds = bucketIds
	return &this
}

// NewBucketIdsWithDefaults instantiates a new BucketIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketIdsWithDefaults() *BucketIds {
	this := BucketIds{}
	return &this
}

// GetBucketIds returns the BucketIds field value
func (o *BucketIds) GetBucketIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BucketIds
}

// GetBucketIdsOk returns a tuple with the BucketIds field value
// and a boolean to check if the value has been set.
func (o *BucketIds) GetBucketIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BucketIds, true
}

// SetBucketIds sets field value
func (o *BucketIds) SetBucketIds(v []string) {
	o.BucketIds = v
}

// GetMaxNumResults returns the MaxNumResults field value if set, zero value otherwise.
func (o *BucketIds) GetMaxNumResults() int32 {
	if o == nil || IsNil(o.MaxNumResults) {
		var ret int32
		return ret
	}
	return *o.MaxNumResults
}

// GetMaxNumResultsOk returns a tuple with the MaxNumResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketIds) GetMaxNumResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNumResults) {
		return nil, false
	}
	return o.MaxNumResults, true
}

// HasMaxNumResults returns a boolean if a field has been set.
func (o *BucketIds) HasMaxNumResults() bool {
	if o != nil && !IsNil(o.MaxNumResults) {
		return true
	}

	return false
}

// SetMaxNumResults gets a reference to the given int32 and assigns it to the MaxNumResults field.
func (o *BucketIds) SetMaxNumResults(v int32) {
	o.MaxNumResults = &v
}

func (o BucketIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucket_ids"] = o.BucketIds
	if !IsNil(o.MaxNumResults) {
		toSerialize["max_num_results"] = o.MaxNumResults
	}
	return toSerialize, nil
}

func (o *BucketIds) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBucketIds := _BucketIds{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBucketIds)

	if err != nil {
		return err
	}

	*o = BucketIds(varBucketIds)

	return err
}

type NullableBucketIds struct {
	value *BucketIds
	isSet bool
}

func (v NullableBucketIds) Get() *BucketIds {
	return v.value
}

func (v *NullableBucketIds) Set(val *BucketIds) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketIds) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketIds(val *BucketIds) *NullableBucketIds {
	return &NullableBucketIds{value: val, isSet: true}
}

func (v NullableBucketIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



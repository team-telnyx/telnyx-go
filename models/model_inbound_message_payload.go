/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the InboundMessagePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InboundMessagePayload{}

// InboundMessagePayload struct for InboundMessagePayload
type InboundMessagePayload struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you.
	Direction *string `json:"direction,omitempty"`
	// Identifies the type of resource.
	Id *string `json:"id,omitempty"`
	// The type of message. This value can be either 'sms' or 'mms'.
	Type *string `json:"type,omitempty"`
	// Unique identifier for a messaging profile.
	MessagingProfileId *string `json:"messaging_profile_id,omitempty"`
	To []InboundMessagePayloadToInner `json:"to,omitempty"`
	Cc []InboundMessagePayloadCcInner `json:"cc,omitempty"`
	From *InboundMessagePayloadFrom `json:"from,omitempty"`
	// Message body (i.e., content) as a non-empty string.  **Required for SMS**
	Text *string `json:"text,omitempty"`
	Media []InboundMessagePayloadMediaInner `json:"media,omitempty"`
	// The URL where webhooks related to this message will be sent.
	WebhookUrl NullableString `json:"webhook_url,omitempty"`
	// The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.
	WebhookFailoverUrl NullableString `json:"webhook_failover_url,omitempty"`
	// Encoding scheme used for the message body.
	Encoding *string `json:"encoding,omitempty"`
	// Number of parts into which the message's body must be split.
	Parts *int32 `json:"parts,omitempty"`
	// Tags associated with the resource.
	Tags []string `json:"tags,omitempty"`
	Cost NullableInboundMessagePayloadCost `json:"cost,omitempty"`
	CostBreakdown NullableInboundMessagePayloadCostBreakdown `json:"cost_breakdown,omitempty"`
	// The Campaign Registry (TCR) campaign ID associated with the message.
	TcrCampaignId NullableString `json:"tcr_campaign_id,omitempty"`
	// Indicates whether the TCR campaign is billable.
	TcrCampaignBillable *bool `json:"tcr_campaign_billable,omitempty"`
	// The registration status of the TCR campaign.
	TcrCampaignRegistered NullableString `json:"tcr_campaign_registered,omitempty"`
	// ISO 8601 formatted date indicating when the message request was received.
	ReceivedAt *time.Time `json:"received_at,omitempty"`
	// Not used for inbound messages.
	SentAt NullableTime `json:"sent_at,omitempty"`
	// Not used for inbound messages.
	CompletedAt NullableTime `json:"completed_at,omitempty"`
	// Not used for inbound messages.
	ValidUntil NullableTime `json:"valid_until,omitempty"`
	// These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.
	Errors []Error `json:"errors,omitempty"`
}

// NewInboundMessagePayload instantiates a new InboundMessagePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInboundMessagePayload() *InboundMessagePayload {
	this := InboundMessagePayload{}
	return &this
}

// NewInboundMessagePayloadWithDefaults instantiates a new InboundMessagePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInboundMessagePayloadWithDefaults() *InboundMessagePayload {
	this := InboundMessagePayload{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *InboundMessagePayload) SetRecordType(v string) {
	o.RecordType = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *InboundMessagePayload) SetDirection(v string) {
	o.Direction = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InboundMessagePayload) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InboundMessagePayload) SetType(v string) {
	o.Type = &v
}

// GetMessagingProfileId returns the MessagingProfileId field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetMessagingProfileId() string {
	if o == nil || IsNil(o.MessagingProfileId) {
		var ret string
		return ret
	}
	return *o.MessagingProfileId
}

// GetMessagingProfileIdOk returns a tuple with the MessagingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetMessagingProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessagingProfileId) {
		return nil, false
	}
	return o.MessagingProfileId, true
}

// HasMessagingProfileId returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasMessagingProfileId() bool {
	if o != nil && !IsNil(o.MessagingProfileId) {
		return true
	}

	return false
}

// SetMessagingProfileId gets a reference to the given string and assigns it to the MessagingProfileId field.
func (o *InboundMessagePayload) SetMessagingProfileId(v string) {
	o.MessagingProfileId = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetTo() []InboundMessagePayloadToInner {
	if o == nil || IsNil(o.To) {
		var ret []InboundMessagePayloadToInner
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetToOk() ([]InboundMessagePayloadToInner, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []InboundMessagePayloadToInner and assigns it to the To field.
func (o *InboundMessagePayload) SetTo(v []InboundMessagePayloadToInner) {
	o.To = v
}

// GetCc returns the Cc field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetCc() []InboundMessagePayloadCcInner {
	if o == nil || IsNil(o.Cc) {
		var ret []InboundMessagePayloadCcInner
		return ret
	}
	return o.Cc
}

// GetCcOk returns a tuple with the Cc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetCcOk() ([]InboundMessagePayloadCcInner, bool) {
	if o == nil || IsNil(o.Cc) {
		return nil, false
	}
	return o.Cc, true
}

// HasCc returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasCc() bool {
	if o != nil && !IsNil(o.Cc) {
		return true
	}

	return false
}

// SetCc gets a reference to the given []InboundMessagePayloadCcInner and assigns it to the Cc field.
func (o *InboundMessagePayload) SetCc(v []InboundMessagePayloadCcInner) {
	o.Cc = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetFrom() InboundMessagePayloadFrom {
	if o == nil || IsNil(o.From) {
		var ret InboundMessagePayloadFrom
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetFromOk() (*InboundMessagePayloadFrom, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given InboundMessagePayloadFrom and assigns it to the From field.
func (o *InboundMessagePayload) SetFrom(v InboundMessagePayloadFrom) {
	o.From = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *InboundMessagePayload) SetText(v string) {
	o.Text = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetMedia() []InboundMessagePayloadMediaInner {
	if o == nil || IsNil(o.Media) {
		var ret []InboundMessagePayloadMediaInner
		return ret
	}
	return o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetMediaOk() ([]InboundMessagePayloadMediaInner, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given []InboundMessagePayloadMediaInner and assigns it to the Media field.
func (o *InboundMessagePayload) SetMedia(v []InboundMessagePayloadMediaInner) {
	o.Media = v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *InboundMessagePayload) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}
// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *InboundMessagePayload) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *InboundMessagePayload) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

// GetWebhookFailoverUrl returns the WebhookFailoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetWebhookFailoverUrl() string {
	if o == nil || IsNil(o.WebhookFailoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookFailoverUrl.Get()
}

// GetWebhookFailoverUrlOk returns a tuple with the WebhookFailoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetWebhookFailoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookFailoverUrl.Get(), o.WebhookFailoverUrl.IsSet()
}

// HasWebhookFailoverUrl returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasWebhookFailoverUrl() bool {
	if o != nil && o.WebhookFailoverUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookFailoverUrl gets a reference to the given NullableString and assigns it to the WebhookFailoverUrl field.
func (o *InboundMessagePayload) SetWebhookFailoverUrl(v string) {
	o.WebhookFailoverUrl.Set(&v)
}
// SetWebhookFailoverUrlNil sets the value for WebhookFailoverUrl to be an explicit nil
func (o *InboundMessagePayload) SetWebhookFailoverUrlNil() {
	o.WebhookFailoverUrl.Set(nil)
}

// UnsetWebhookFailoverUrl ensures that no value is present for WebhookFailoverUrl, not even an explicit nil
func (o *InboundMessagePayload) UnsetWebhookFailoverUrl() {
	o.WebhookFailoverUrl.Unset()
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetEncoding() string {
	if o == nil || IsNil(o.Encoding) {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetEncodingOk() (*string, bool) {
	if o == nil || IsNil(o.Encoding) {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasEncoding() bool {
	if o != nil && !IsNil(o.Encoding) {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *InboundMessagePayload) SetEncoding(v string) {
	o.Encoding = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetParts() int32 {
	if o == nil || IsNil(o.Parts) {
		var ret int32
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetPartsOk() (*int32, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given int32 and assigns it to the Parts field.
func (o *InboundMessagePayload) SetParts(v int32) {
	o.Parts = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *InboundMessagePayload) SetTags(v []string) {
	o.Tags = v
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetCost() InboundMessagePayloadCost {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret InboundMessagePayloadCost
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetCostOk() (*InboundMessagePayloadCost, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableInboundMessagePayloadCost and assigns it to the Cost field.
func (o *InboundMessagePayload) SetCost(v InboundMessagePayloadCost) {
	o.Cost.Set(&v)
}
// SetCostNil sets the value for Cost to be an explicit nil
func (o *InboundMessagePayload) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *InboundMessagePayload) UnsetCost() {
	o.Cost.Unset()
}

// GetCostBreakdown returns the CostBreakdown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetCostBreakdown() InboundMessagePayloadCostBreakdown {
	if o == nil || IsNil(o.CostBreakdown.Get()) {
		var ret InboundMessagePayloadCostBreakdown
		return ret
	}
	return *o.CostBreakdown.Get()
}

// GetCostBreakdownOk returns a tuple with the CostBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetCostBreakdownOk() (*InboundMessagePayloadCostBreakdown, bool) {
	if o == nil {
		return nil, false
	}
	return o.CostBreakdown.Get(), o.CostBreakdown.IsSet()
}

// HasCostBreakdown returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasCostBreakdown() bool {
	if o != nil && o.CostBreakdown.IsSet() {
		return true
	}

	return false
}

// SetCostBreakdown gets a reference to the given NullableInboundMessagePayloadCostBreakdown and assigns it to the CostBreakdown field.
func (o *InboundMessagePayload) SetCostBreakdown(v InboundMessagePayloadCostBreakdown) {
	o.CostBreakdown.Set(&v)
}
// SetCostBreakdownNil sets the value for CostBreakdown to be an explicit nil
func (o *InboundMessagePayload) SetCostBreakdownNil() {
	o.CostBreakdown.Set(nil)
}

// UnsetCostBreakdown ensures that no value is present for CostBreakdown, not even an explicit nil
func (o *InboundMessagePayload) UnsetCostBreakdown() {
	o.CostBreakdown.Unset()
}

// GetTcrCampaignId returns the TcrCampaignId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetTcrCampaignId() string {
	if o == nil || IsNil(o.TcrCampaignId.Get()) {
		var ret string
		return ret
	}
	return *o.TcrCampaignId.Get()
}

// GetTcrCampaignIdOk returns a tuple with the TcrCampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetTcrCampaignIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TcrCampaignId.Get(), o.TcrCampaignId.IsSet()
}

// HasTcrCampaignId returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasTcrCampaignId() bool {
	if o != nil && o.TcrCampaignId.IsSet() {
		return true
	}

	return false
}

// SetTcrCampaignId gets a reference to the given NullableString and assigns it to the TcrCampaignId field.
func (o *InboundMessagePayload) SetTcrCampaignId(v string) {
	o.TcrCampaignId.Set(&v)
}
// SetTcrCampaignIdNil sets the value for TcrCampaignId to be an explicit nil
func (o *InboundMessagePayload) SetTcrCampaignIdNil() {
	o.TcrCampaignId.Set(nil)
}

// UnsetTcrCampaignId ensures that no value is present for TcrCampaignId, not even an explicit nil
func (o *InboundMessagePayload) UnsetTcrCampaignId() {
	o.TcrCampaignId.Unset()
}

// GetTcrCampaignBillable returns the TcrCampaignBillable field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetTcrCampaignBillable() bool {
	if o == nil || IsNil(o.TcrCampaignBillable) {
		var ret bool
		return ret
	}
	return *o.TcrCampaignBillable
}

// GetTcrCampaignBillableOk returns a tuple with the TcrCampaignBillable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetTcrCampaignBillableOk() (*bool, bool) {
	if o == nil || IsNil(o.TcrCampaignBillable) {
		return nil, false
	}
	return o.TcrCampaignBillable, true
}

// HasTcrCampaignBillable returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasTcrCampaignBillable() bool {
	if o != nil && !IsNil(o.TcrCampaignBillable) {
		return true
	}

	return false
}

// SetTcrCampaignBillable gets a reference to the given bool and assigns it to the TcrCampaignBillable field.
func (o *InboundMessagePayload) SetTcrCampaignBillable(v bool) {
	o.TcrCampaignBillable = &v
}

// GetTcrCampaignRegistered returns the TcrCampaignRegistered field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetTcrCampaignRegistered() string {
	if o == nil || IsNil(o.TcrCampaignRegistered.Get()) {
		var ret string
		return ret
	}
	return *o.TcrCampaignRegistered.Get()
}

// GetTcrCampaignRegisteredOk returns a tuple with the TcrCampaignRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetTcrCampaignRegisteredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TcrCampaignRegistered.Get(), o.TcrCampaignRegistered.IsSet()
}

// HasTcrCampaignRegistered returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasTcrCampaignRegistered() bool {
	if o != nil && o.TcrCampaignRegistered.IsSet() {
		return true
	}

	return false
}

// SetTcrCampaignRegistered gets a reference to the given NullableString and assigns it to the TcrCampaignRegistered field.
func (o *InboundMessagePayload) SetTcrCampaignRegistered(v string) {
	o.TcrCampaignRegistered.Set(&v)
}
// SetTcrCampaignRegisteredNil sets the value for TcrCampaignRegistered to be an explicit nil
func (o *InboundMessagePayload) SetTcrCampaignRegisteredNil() {
	o.TcrCampaignRegistered.Set(nil)
}

// UnsetTcrCampaignRegistered ensures that no value is present for TcrCampaignRegistered, not even an explicit nil
func (o *InboundMessagePayload) UnsetTcrCampaignRegistered() {
	o.TcrCampaignRegistered.Unset()
}

// GetReceivedAt returns the ReceivedAt field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetReceivedAt() time.Time {
	if o == nil || IsNil(o.ReceivedAt) {
		var ret time.Time
		return ret
	}
	return *o.ReceivedAt
}

// GetReceivedAtOk returns a tuple with the ReceivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetReceivedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReceivedAt) {
		return nil, false
	}
	return o.ReceivedAt, true
}

// HasReceivedAt returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasReceivedAt() bool {
	if o != nil && !IsNil(o.ReceivedAt) {
		return true
	}

	return false
}

// SetReceivedAt gets a reference to the given time.Time and assigns it to the ReceivedAt field.
func (o *InboundMessagePayload) SetReceivedAt(v time.Time) {
	o.ReceivedAt = &v
}

// GetSentAt returns the SentAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetSentAt() time.Time {
	if o == nil || IsNil(o.SentAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.SentAt.Get()
}

// GetSentAtOk returns a tuple with the SentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetSentAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SentAt.Get(), o.SentAt.IsSet()
}

// HasSentAt returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasSentAt() bool {
	if o != nil && o.SentAt.IsSet() {
		return true
	}

	return false
}

// SetSentAt gets a reference to the given NullableTime and assigns it to the SentAt field.
func (o *InboundMessagePayload) SetSentAt(v time.Time) {
	o.SentAt.Set(&v)
}
// SetSentAtNil sets the value for SentAt to be an explicit nil
func (o *InboundMessagePayload) SetSentAtNil() {
	o.SentAt.Set(nil)
}

// UnsetSentAt ensures that no value is present for SentAt, not even an explicit nil
func (o *InboundMessagePayload) UnsetSentAt() {
	o.SentAt.Unset()
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetCompletedAt() time.Time {
	if o == nil || IsNil(o.CompletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasCompletedAt() bool {
	if o != nil && o.CompletedAt.IsSet() {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given NullableTime and assigns it to the CompletedAt field.
func (o *InboundMessagePayload) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}
// SetCompletedAtNil sets the value for CompletedAt to be an explicit nil
func (o *InboundMessagePayload) SetCompletedAtNil() {
	o.CompletedAt.Set(nil)
}

// UnsetCompletedAt ensures that no value is present for CompletedAt, not even an explicit nil
func (o *InboundMessagePayload) UnsetCompletedAt() {
	o.CompletedAt.Unset()
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundMessagePayload) GetValidUntil() time.Time {
	if o == nil || IsNil(o.ValidUntil.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ValidUntil.Get()
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundMessagePayload) GetValidUntilOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidUntil.Get(), o.ValidUntil.IsSet()
}

// HasValidUntil returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasValidUntil() bool {
	if o != nil && o.ValidUntil.IsSet() {
		return true
	}

	return false
}

// SetValidUntil gets a reference to the given NullableTime and assigns it to the ValidUntil field.
func (o *InboundMessagePayload) SetValidUntil(v time.Time) {
	o.ValidUntil.Set(&v)
}
// SetValidUntilNil sets the value for ValidUntil to be an explicit nil
func (o *InboundMessagePayload) SetValidUntilNil() {
	o.ValidUntil.Set(nil)
}

// UnsetValidUntil ensures that no value is present for ValidUntil, not even an explicit nil
func (o *InboundMessagePayload) UnsetValidUntil() {
	o.ValidUntil.Unset()
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *InboundMessagePayload) GetErrors() []Error {
	if o == nil || IsNil(o.Errors) {
		var ret []Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayload) GetErrorsOk() ([]Error, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *InboundMessagePayload) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error and assigns it to the Errors field.
func (o *InboundMessagePayload) SetErrors(v []Error) {
	o.Errors = v
}

func (o InboundMessagePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InboundMessagePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.MessagingProfileId) {
		toSerialize["messaging_profile_id"] = o.MessagingProfileId
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Cc) {
		toSerialize["cc"] = o.Cc
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhook_url"] = o.WebhookUrl.Get()
	}
	if o.WebhookFailoverUrl.IsSet() {
		toSerialize["webhook_failover_url"] = o.WebhookFailoverUrl.Get()
	}
	if !IsNil(o.Encoding) {
		toSerialize["encoding"] = o.Encoding
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if o.CostBreakdown.IsSet() {
		toSerialize["cost_breakdown"] = o.CostBreakdown.Get()
	}
	if o.TcrCampaignId.IsSet() {
		toSerialize["tcr_campaign_id"] = o.TcrCampaignId.Get()
	}
	if !IsNil(o.TcrCampaignBillable) {
		toSerialize["tcr_campaign_billable"] = o.TcrCampaignBillable
	}
	if o.TcrCampaignRegistered.IsSet() {
		toSerialize["tcr_campaign_registered"] = o.TcrCampaignRegistered.Get()
	}
	if !IsNil(o.ReceivedAt) {
		toSerialize["received_at"] = o.ReceivedAt
	}
	if o.SentAt.IsSet() {
		toSerialize["sent_at"] = o.SentAt.Get()
	}
	if o.CompletedAt.IsSet() {
		toSerialize["completed_at"] = o.CompletedAt.Get()
	}
	if o.ValidUntil.IsSet() {
		toSerialize["valid_until"] = o.ValidUntil.Get()
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableInboundMessagePayload struct {
	value *InboundMessagePayload
	isSet bool
}

func (v NullableInboundMessagePayload) Get() *InboundMessagePayload {
	return v.value
}

func (v *NullableInboundMessagePayload) Set(val *InboundMessagePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableInboundMessagePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableInboundMessagePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInboundMessagePayload(val *InboundMessagePayload) *NullableInboundMessagePayload {
	return &NullableInboundMessagePayload{value: val, isSet: true}
}

func (v NullableInboundMessagePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInboundMessagePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



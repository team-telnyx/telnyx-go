/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SendDTMFRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendDTMFRequest{}

// SendDTMFRequest struct for SendDTMFRequest
type SendDTMFRequest struct {
	// DTMF digits to send. Valid digits are 0-9, A-D, *, and #. Pauses can be added using w (0.5s) and W (1s).
	Digits string `json:"digits"`
	// Specifies for how many milliseconds each digit will be played in the audio stream. Ranges from 100 to 500ms
	DurationMillis *int32 `json:"duration_millis,omitempty"`
	// Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
	ClientState *string `json:"client_state,omitempty"`
	// Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.
	CommandId *string `json:"command_id,omitempty"`
}

type _SendDTMFRequest SendDTMFRequest

// NewSendDTMFRequest instantiates a new SendDTMFRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendDTMFRequest(digits string) *SendDTMFRequest {
	this := SendDTMFRequest{}
	this.Digits = digits
	var durationMillis int32 = 250
	this.DurationMillis = &durationMillis
	return &this
}

// NewSendDTMFRequestWithDefaults instantiates a new SendDTMFRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendDTMFRequestWithDefaults() *SendDTMFRequest {
	this := SendDTMFRequest{}
	var durationMillis int32 = 250
	this.DurationMillis = &durationMillis
	return &this
}

// GetDigits returns the Digits field value
func (o *SendDTMFRequest) GetDigits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value
// and a boolean to check if the value has been set.
func (o *SendDTMFRequest) GetDigitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digits, true
}

// SetDigits sets field value
func (o *SendDTMFRequest) SetDigits(v string) {
	o.Digits = v
}

// GetDurationMillis returns the DurationMillis field value if set, zero value otherwise.
func (o *SendDTMFRequest) GetDurationMillis() int32 {
	if o == nil || IsNil(o.DurationMillis) {
		var ret int32
		return ret
	}
	return *o.DurationMillis
}

// GetDurationMillisOk returns a tuple with the DurationMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendDTMFRequest) GetDurationMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationMillis) {
		return nil, false
	}
	return o.DurationMillis, true
}

// HasDurationMillis returns a boolean if a field has been set.
func (o *SendDTMFRequest) HasDurationMillis() bool {
	if o != nil && !IsNil(o.DurationMillis) {
		return true
	}

	return false
}

// SetDurationMillis gets a reference to the given int32 and assigns it to the DurationMillis field.
func (o *SendDTMFRequest) SetDurationMillis(v int32) {
	o.DurationMillis = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *SendDTMFRequest) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendDTMFRequest) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *SendDTMFRequest) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *SendDTMFRequest) SetClientState(v string) {
	o.ClientState = &v
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *SendDTMFRequest) GetCommandId() string {
	if o == nil || IsNil(o.CommandId) {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendDTMFRequest) GetCommandIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommandId) {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *SendDTMFRequest) HasCommandId() bool {
	if o != nil && !IsNil(o.CommandId) {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *SendDTMFRequest) SetCommandId(v string) {
	o.CommandId = &v
}

func (o SendDTMFRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendDTMFRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["digits"] = o.Digits
	if !IsNil(o.DurationMillis) {
		toSerialize["duration_millis"] = o.DurationMillis
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.CommandId) {
		toSerialize["command_id"] = o.CommandId
	}
	return toSerialize, nil
}

func (o *SendDTMFRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"digits",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendDTMFRequest := _SendDTMFRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSendDTMFRequest)

	if err != nil {
		return err
	}

	*o = SendDTMFRequest(varSendDTMFRequest)

	return err
}

type NullableSendDTMFRequest struct {
	value *SendDTMFRequest
	isSet bool
}

func (v NullableSendDTMFRequest) Get() *SendDTMFRequest {
	return v.value
}

func (v *NullableSendDTMFRequest) Set(val *SendDTMFRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendDTMFRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendDTMFRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendDTMFRequest(val *SendDTMFRequest) *NullableSendDTMFRequest {
	return &NullableSendDTMFRequest{value: val, isSet: true}
}

func (v NullableSendDTMFRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendDTMFRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



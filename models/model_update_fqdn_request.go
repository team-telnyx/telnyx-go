/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdateFqdnRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFqdnRequest{}

// UpdateFqdnRequest struct for UpdateFqdnRequest
type UpdateFqdnRequest struct {
	// ID of the FQDN connection to which this IP should be attached.
	ConnectionId *string `json:"connection_id,omitempty"`
	// FQDN represented by this resource.
	Fqdn *string `json:"fqdn,omitempty"`
	// Port to use when connecting to this FQDN.
	Port NullableInt32 `json:"port,omitempty"`
	// The DNS record type for the FQDN. For cases where a port is not set, the DNS record type must be 'srv'. For cases where a port is set, the DNS record type must be 'a'. If the DNS record type is 'a' and a port is not specified, 5060 will be used.
	DnsRecordType *string `json:"dns_record_type,omitempty"`
}

// NewUpdateFqdnRequest instantiates a new UpdateFqdnRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFqdnRequest() *UpdateFqdnRequest {
	this := UpdateFqdnRequest{}
	var port int32 = 5060
	this.Port = *NewNullableInt32(&port)
	return &this
}

// NewUpdateFqdnRequestWithDefaults instantiates a new UpdateFqdnRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFqdnRequestWithDefaults() *UpdateFqdnRequest {
	this := UpdateFqdnRequest{}
	var port int32 = 5060
	this.Port = *NewNullableInt32(&port)
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *UpdateFqdnRequest) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFqdnRequest) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *UpdateFqdnRequest) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *UpdateFqdnRequest) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *UpdateFqdnRequest) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFqdnRequest) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *UpdateFqdnRequest) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *UpdateFqdnRequest) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateFqdnRequest) GetPort() int32 {
	if o == nil || IsNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateFqdnRequest) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *UpdateFqdnRequest) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *UpdateFqdnRequest) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *UpdateFqdnRequest) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *UpdateFqdnRequest) UnsetPort() {
	o.Port.Unset()
}

// GetDnsRecordType returns the DnsRecordType field value if set, zero value otherwise.
func (o *UpdateFqdnRequest) GetDnsRecordType() string {
	if o == nil || IsNil(o.DnsRecordType) {
		var ret string
		return ret
	}
	return *o.DnsRecordType
}

// GetDnsRecordTypeOk returns a tuple with the DnsRecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFqdnRequest) GetDnsRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DnsRecordType) {
		return nil, false
	}
	return o.DnsRecordType, true
}

// HasDnsRecordType returns a boolean if a field has been set.
func (o *UpdateFqdnRequest) HasDnsRecordType() bool {
	if o != nil && !IsNil(o.DnsRecordType) {
		return true
	}

	return false
}

// SetDnsRecordType gets a reference to the given string and assigns it to the DnsRecordType field.
func (o *UpdateFqdnRequest) SetDnsRecordType(v string) {
	o.DnsRecordType = &v
}

func (o UpdateFqdnRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFqdnRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if !IsNil(o.DnsRecordType) {
		toSerialize["dns_record_type"] = o.DnsRecordType
	}
	return toSerialize, nil
}

type NullableUpdateFqdnRequest struct {
	value *UpdateFqdnRequest
	isSet bool
}

func (v NullableUpdateFqdnRequest) Get() *UpdateFqdnRequest {
	return v.value
}

func (v *NullableUpdateFqdnRequest) Set(val *UpdateFqdnRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFqdnRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFqdnRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFqdnRequest(val *UpdateFqdnRequest) *NullableUpdateFqdnRequest {
	return &NullableUpdateFqdnRequest{value: val, isSet: true}
}

func (v NullableUpdateFqdnRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFqdnRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



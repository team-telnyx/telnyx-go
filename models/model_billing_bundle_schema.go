/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingBundleSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingBundleSchema{}

// BillingBundleSchema struct for BillingBundleSchema
type BillingBundleSchema struct {
	// Bundle's ID, this is used to identify the bundle in the API.
	Id string `json:"id"`
	// Bundle's name, this is used to identify the bundle in the UI.
	Name string `json:"name"`
	// Slugified version of the bundle's name.
	Slug *string `json:"slug,omitempty"`
	// Bundle's cost code, this is used to identify the bundle in the billing system.
	CostCode string `json:"cost_code"`
	// If that bundle is active or not.
	Active bool `json:"active"`
	// Available to all customers or only to specific customers.
	IsPublic bool `json:"is_public"`
	// Date the bundle was created.
	CreatedAt string `json:"created_at"`
	BundleLimits []BundleLimitSchema `json:"bundle_limits"`
}

type _BillingBundleSchema BillingBundleSchema

// NewBillingBundleSchema instantiates a new BillingBundleSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingBundleSchema(id string, name string, costCode string, active bool, isPublic bool, createdAt string, bundleLimits []BundleLimitSchema) *BillingBundleSchema {
	this := BillingBundleSchema{}
	this.Id = id
	this.Name = name
	this.CostCode = costCode
	this.Active = active
	this.IsPublic = isPublic
	this.CreatedAt = createdAt
	this.BundleLimits = bundleLimits
	return &this
}

// NewBillingBundleSchemaWithDefaults instantiates a new BillingBundleSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingBundleSchemaWithDefaults() *BillingBundleSchema {
	this := BillingBundleSchema{}
	return &this
}

// GetId returns the Id field value
func (o *BillingBundleSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingBundleSchema) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BillingBundleSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingBundleSchema) SetName(v string) {
	o.Name = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *BillingBundleSchema) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *BillingBundleSchema) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *BillingBundleSchema) SetSlug(v string) {
	o.Slug = &v
}

// GetCostCode returns the CostCode field value
func (o *BillingBundleSchema) GetCostCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CostCode
}

// GetCostCodeOk returns a tuple with the CostCode field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetCostCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostCode, true
}

// SetCostCode sets field value
func (o *BillingBundleSchema) SetCostCode(v string) {
	o.CostCode = v
}

// GetActive returns the Active field value
func (o *BillingBundleSchema) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *BillingBundleSchema) SetActive(v bool) {
	o.Active = v
}

// GetIsPublic returns the IsPublic field value
func (o *BillingBundleSchema) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *BillingBundleSchema) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingBundleSchema) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingBundleSchema) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetBundleLimits returns the BundleLimits field value
func (o *BillingBundleSchema) GetBundleLimits() []BundleLimitSchema {
	if o == nil {
		var ret []BundleLimitSchema
		return ret
	}

	return o.BundleLimits
}

// GetBundleLimitsOk returns a tuple with the BundleLimits field value
// and a boolean to check if the value has been set.
func (o *BillingBundleSchema) GetBundleLimitsOk() ([]BundleLimitSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleLimits, true
}

// SetBundleLimits sets field value
func (o *BillingBundleSchema) SetBundleLimits(v []BundleLimitSchema) {
	o.BundleLimits = v
}

func (o BillingBundleSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingBundleSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	toSerialize["cost_code"] = o.CostCode
	toSerialize["active"] = o.Active
	toSerialize["is_public"] = o.IsPublic
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["bundle_limits"] = o.BundleLimits
	return toSerialize, nil
}

func (o *BillingBundleSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"cost_code",
		"active",
		"is_public",
		"created_at",
		"bundle_limits",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingBundleSchema := _BillingBundleSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingBundleSchema)

	if err != nil {
		return err
	}

	*o = BillingBundleSchema(varBillingBundleSchema)

	return err
}

type NullableBillingBundleSchema struct {
	value *BillingBundleSchema
	isSet bool
}

func (v NullableBillingBundleSchema) Get() *BillingBundleSchema {
	return v.value
}

func (v *NullableBillingBundleSchema) Set(val *BillingBundleSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingBundleSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingBundleSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingBundleSchema(val *BillingBundleSchema) *NullableBillingBundleSchema {
	return &NullableBillingBundleSchema{value: val, isSet: true}
}

func (v NullableBillingBundleSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingBundleSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



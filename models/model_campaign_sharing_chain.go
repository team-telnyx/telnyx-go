/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CampaignSharingChain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignSharingChain{}

// CampaignSharingChain struct for CampaignSharingChain
type CampaignSharingChain struct {
	SharedByMe *CampaignSharingStatus `json:"sharedByMe,omitempty"`
	SharedWithMe *CampaignSharingStatus `json:"sharedWithMe,omitempty"`
}

// NewCampaignSharingChain instantiates a new CampaignSharingChain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignSharingChain() *CampaignSharingChain {
	this := CampaignSharingChain{}
	return &this
}

// NewCampaignSharingChainWithDefaults instantiates a new CampaignSharingChain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignSharingChainWithDefaults() *CampaignSharingChain {
	this := CampaignSharingChain{}
	return &this
}

// GetSharedByMe returns the SharedByMe field value if set, zero value otherwise.
func (o *CampaignSharingChain) GetSharedByMe() CampaignSharingStatus {
	if o == nil || IsNil(o.SharedByMe) {
		var ret CampaignSharingStatus
		return ret
	}
	return *o.SharedByMe
}

// GetSharedByMeOk returns a tuple with the SharedByMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSharingChain) GetSharedByMeOk() (*CampaignSharingStatus, bool) {
	if o == nil || IsNil(o.SharedByMe) {
		return nil, false
	}
	return o.SharedByMe, true
}

// HasSharedByMe returns a boolean if a field has been set.
func (o *CampaignSharingChain) HasSharedByMe() bool {
	if o != nil && !IsNil(o.SharedByMe) {
		return true
	}

	return false
}

// SetSharedByMe gets a reference to the given CampaignSharingStatus and assigns it to the SharedByMe field.
func (o *CampaignSharingChain) SetSharedByMe(v CampaignSharingStatus) {
	o.SharedByMe = &v
}

// GetSharedWithMe returns the SharedWithMe field value if set, zero value otherwise.
func (o *CampaignSharingChain) GetSharedWithMe() CampaignSharingStatus {
	if o == nil || IsNil(o.SharedWithMe) {
		var ret CampaignSharingStatus
		return ret
	}
	return *o.SharedWithMe
}

// GetSharedWithMeOk returns a tuple with the SharedWithMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSharingChain) GetSharedWithMeOk() (*CampaignSharingStatus, bool) {
	if o == nil || IsNil(o.SharedWithMe) {
		return nil, false
	}
	return o.SharedWithMe, true
}

// HasSharedWithMe returns a boolean if a field has been set.
func (o *CampaignSharingChain) HasSharedWithMe() bool {
	if o != nil && !IsNil(o.SharedWithMe) {
		return true
	}

	return false
}

// SetSharedWithMe gets a reference to the given CampaignSharingStatus and assigns it to the SharedWithMe field.
func (o *CampaignSharingChain) SetSharedWithMe(v CampaignSharingStatus) {
	o.SharedWithMe = &v
}

func (o CampaignSharingChain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignSharingChain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SharedByMe) {
		toSerialize["sharedByMe"] = o.SharedByMe
	}
	if !IsNil(o.SharedWithMe) {
		toSerialize["sharedWithMe"] = o.SharedWithMe
	}
	return toSerialize, nil
}

type NullableCampaignSharingChain struct {
	value *CampaignSharingChain
	isSet bool
}

func (v NullableCampaignSharingChain) Get() *CampaignSharingChain {
	return v.value
}

func (v *NullableCampaignSharingChain) Set(val *CampaignSharingChain) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSharingChain) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSharingChain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSharingChain(val *CampaignSharingChain) *NullableCampaignSharingChain {
	return &NullableCampaignSharingChain{value: val, isSet: true}
}

func (v NullableCampaignSharingChain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSharingChain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the FaxQueuedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FaxQueuedPayload{}

// FaxQueuedPayload struct for FaxQueuedPayload
type FaxQueuedPayload struct {
	// The ID of the connection used to send the fax.
	ConnectionId *string `json:"connection_id,omitempty"`
	Direction *Direction `json:"direction,omitempty"`
	// Identifies the fax.
	FaxId *string `json:"fax_id,omitempty"`
	// The original URL to the PDF used for the fax's media. If media_name was supplied, this is omitted
	OriginalMediaUrl *string `json:"original_media_url,omitempty"`
	// The media_name used for the fax's media. Must point to a file previously uploaded to api.telnyx.com/v2/media by the same user/organization. media_name and media_url/contents can't be submitted together.
	MediaName *string `json:"media_name,omitempty"`
	// The phone number, in E.164 format, the fax will be sent to or SIP URI
	To *string `json:"to,omitempty"`
	// The phone number, in E.164 format, the fax will be sent from.
	From *string `json:"from,omitempty"`
	// Identifier of the user to whom the fax belongs
	UserId *string `json:"user_id,omitempty"`
	// The status of the fax.
	Status *string `json:"status,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
}

// NewFaxQueuedPayload instantiates a new FaxQueuedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFaxQueuedPayload() *FaxQueuedPayload {
	this := FaxQueuedPayload{}
	return &this
}

// NewFaxQueuedPayloadWithDefaults instantiates a new FaxQueuedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFaxQueuedPayloadWithDefaults() *FaxQueuedPayload {
	this := FaxQueuedPayload{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *FaxQueuedPayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetDirection() Direction {
	if o == nil || IsNil(o.Direction) {
		var ret Direction
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetDirectionOk() (*Direction, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given Direction and assigns it to the Direction field.
func (o *FaxQueuedPayload) SetDirection(v Direction) {
	o.Direction = &v
}

// GetFaxId returns the FaxId field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetFaxId() string {
	if o == nil || IsNil(o.FaxId) {
		var ret string
		return ret
	}
	return *o.FaxId
}

// GetFaxIdOk returns a tuple with the FaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetFaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.FaxId) {
		return nil, false
	}
	return o.FaxId, true
}

// HasFaxId returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasFaxId() bool {
	if o != nil && !IsNil(o.FaxId) {
		return true
	}

	return false
}

// SetFaxId gets a reference to the given string and assigns it to the FaxId field.
func (o *FaxQueuedPayload) SetFaxId(v string) {
	o.FaxId = &v
}

// GetOriginalMediaUrl returns the OriginalMediaUrl field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetOriginalMediaUrl() string {
	if o == nil || IsNil(o.OriginalMediaUrl) {
		var ret string
		return ret
	}
	return *o.OriginalMediaUrl
}

// GetOriginalMediaUrlOk returns a tuple with the OriginalMediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetOriginalMediaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalMediaUrl) {
		return nil, false
	}
	return o.OriginalMediaUrl, true
}

// HasOriginalMediaUrl returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasOriginalMediaUrl() bool {
	if o != nil && !IsNil(o.OriginalMediaUrl) {
		return true
	}

	return false
}

// SetOriginalMediaUrl gets a reference to the given string and assigns it to the OriginalMediaUrl field.
func (o *FaxQueuedPayload) SetOriginalMediaUrl(v string) {
	o.OriginalMediaUrl = &v
}

// GetMediaName returns the MediaName field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetMediaName() string {
	if o == nil || IsNil(o.MediaName) {
		var ret string
		return ret
	}
	return *o.MediaName
}

// GetMediaNameOk returns a tuple with the MediaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetMediaNameOk() (*string, bool) {
	if o == nil || IsNil(o.MediaName) {
		return nil, false
	}
	return o.MediaName, true
}

// HasMediaName returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasMediaName() bool {
	if o != nil && !IsNil(o.MediaName) {
		return true
	}

	return false
}

// SetMediaName gets a reference to the given string and assigns it to the MediaName field.
func (o *FaxQueuedPayload) SetMediaName(v string) {
	o.MediaName = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *FaxQueuedPayload) SetTo(v string) {
	o.To = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *FaxQueuedPayload) SetFrom(v string) {
	o.From = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *FaxQueuedPayload) SetUserId(v string) {
	o.UserId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FaxQueuedPayload) SetStatus(v string) {
	o.Status = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *FaxQueuedPayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaxQueuedPayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *FaxQueuedPayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *FaxQueuedPayload) SetClientState(v string) {
	o.ClientState = &v
}

func (o FaxQueuedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FaxQueuedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.FaxId) {
		toSerialize["fax_id"] = o.FaxId
	}
	if !IsNil(o.OriginalMediaUrl) {
		toSerialize["original_media_url"] = o.OriginalMediaUrl
	}
	if !IsNil(o.MediaName) {
		toSerialize["media_name"] = o.MediaName
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	return toSerialize, nil
}

type NullableFaxQueuedPayload struct {
	value *FaxQueuedPayload
	isSet bool
}

func (v NullableFaxQueuedPayload) Get() *FaxQueuedPayload {
	return v.value
}

func (v *NullableFaxQueuedPayload) Set(val *FaxQueuedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableFaxQueuedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableFaxQueuedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFaxQueuedPayload(val *FaxQueuedPayload) *NullableFaxQueuedPayload {
	return &NullableFaxQueuedPayload{value: val, isSet: true}
}

func (v NullableFaxQueuedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFaxQueuedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



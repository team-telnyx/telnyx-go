/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SIMCardOrderPreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SIMCardOrderPreview{}

// SIMCardOrderPreview struct for SIMCardOrderPreview
type SIMCardOrderPreview struct {
	TotalCost *SIMCardOrderPreviewTotalCost `json:"total_cost,omitempty"`
	ShippingCost *SIMCardOrderPreviewTotalCost `json:"shipping_cost,omitempty"`
	SimCardsCost *SIMCardOrderPreviewTotalCost `json:"sim_cards_cost,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// The amount of SIM cards requested in the SIM card order.
	Quantity *int32 `json:"quantity,omitempty"`
}

// NewSIMCardOrderPreview instantiates a new SIMCardOrderPreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSIMCardOrderPreview() *SIMCardOrderPreview {
	this := SIMCardOrderPreview{}
	return &this
}

// NewSIMCardOrderPreviewWithDefaults instantiates a new SIMCardOrderPreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSIMCardOrderPreviewWithDefaults() *SIMCardOrderPreview {
	this := SIMCardOrderPreview{}
	return &this
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *SIMCardOrderPreview) GetTotalCost() SIMCardOrderPreviewTotalCost {
	if o == nil || IsNil(o.TotalCost) {
		var ret SIMCardOrderPreviewTotalCost
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreview) GetTotalCostOk() (*SIMCardOrderPreviewTotalCost, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *SIMCardOrderPreview) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given SIMCardOrderPreviewTotalCost and assigns it to the TotalCost field.
func (o *SIMCardOrderPreview) SetTotalCost(v SIMCardOrderPreviewTotalCost) {
	o.TotalCost = &v
}

// GetShippingCost returns the ShippingCost field value if set, zero value otherwise.
func (o *SIMCardOrderPreview) GetShippingCost() SIMCardOrderPreviewTotalCost {
	if o == nil || IsNil(o.ShippingCost) {
		var ret SIMCardOrderPreviewTotalCost
		return ret
	}
	return *o.ShippingCost
}

// GetShippingCostOk returns a tuple with the ShippingCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreview) GetShippingCostOk() (*SIMCardOrderPreviewTotalCost, bool) {
	if o == nil || IsNil(o.ShippingCost) {
		return nil, false
	}
	return o.ShippingCost, true
}

// HasShippingCost returns a boolean if a field has been set.
func (o *SIMCardOrderPreview) HasShippingCost() bool {
	if o != nil && !IsNil(o.ShippingCost) {
		return true
	}

	return false
}

// SetShippingCost gets a reference to the given SIMCardOrderPreviewTotalCost and assigns it to the ShippingCost field.
func (o *SIMCardOrderPreview) SetShippingCost(v SIMCardOrderPreviewTotalCost) {
	o.ShippingCost = &v
}

// GetSimCardsCost returns the SimCardsCost field value if set, zero value otherwise.
func (o *SIMCardOrderPreview) GetSimCardsCost() SIMCardOrderPreviewTotalCost {
	if o == nil || IsNil(o.SimCardsCost) {
		var ret SIMCardOrderPreviewTotalCost
		return ret
	}
	return *o.SimCardsCost
}

// GetSimCardsCostOk returns a tuple with the SimCardsCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreview) GetSimCardsCostOk() (*SIMCardOrderPreviewTotalCost, bool) {
	if o == nil || IsNil(o.SimCardsCost) {
		return nil, false
	}
	return o.SimCardsCost, true
}

// HasSimCardsCost returns a boolean if a field has been set.
func (o *SIMCardOrderPreview) HasSimCardsCost() bool {
	if o != nil && !IsNil(o.SimCardsCost) {
		return true
	}

	return false
}

// SetSimCardsCost gets a reference to the given SIMCardOrderPreviewTotalCost and assigns it to the SimCardsCost field.
func (o *SIMCardOrderPreview) SetSimCardsCost(v SIMCardOrderPreviewTotalCost) {
	o.SimCardsCost = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *SIMCardOrderPreview) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreview) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *SIMCardOrderPreview) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *SIMCardOrderPreview) SetRecordType(v string) {
	o.RecordType = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *SIMCardOrderPreview) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardOrderPreview) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *SIMCardOrderPreview) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *SIMCardOrderPreview) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o SIMCardOrderPreview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SIMCardOrderPreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCost) {
		toSerialize["total_cost"] = o.TotalCost
	}
	if !IsNil(o.ShippingCost) {
		toSerialize["shipping_cost"] = o.ShippingCost
	}
	if !IsNil(o.SimCardsCost) {
		toSerialize["sim_cards_cost"] = o.SimCardsCost
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableSIMCardOrderPreview struct {
	value *SIMCardOrderPreview
	isSet bool
}

func (v NullableSIMCardOrderPreview) Get() *SIMCardOrderPreview {
	return v.value
}

func (v *NullableSIMCardOrderPreview) Set(val *SIMCardOrderPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableSIMCardOrderPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableSIMCardOrderPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSIMCardOrderPreview(val *SIMCardOrderPreview) *NullableSIMCardOrderPreview {
	return &NullableSIMCardOrderPreview{value: val, isSet: true}
}

func (v NullableSIMCardOrderPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSIMCardOrderPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallControlApplicationOutbound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallControlApplicationOutbound{}

// CallControlApplicationOutbound struct for CallControlApplicationOutbound
type CallControlApplicationOutbound struct {
	// When set, this will limit the total number of outbound calls to phone numbers associated with this connection.
	ChannelLimit *int32 `json:"channel_limit,omitempty"`
	// Identifies the associated outbound voice profile.
	OutboundVoiceProfileId *string `json:"outbound_voice_profile_id,omitempty"`
}

// NewCallControlApplicationOutbound instantiates a new CallControlApplicationOutbound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallControlApplicationOutbound() *CallControlApplicationOutbound {
	this := CallControlApplicationOutbound{}
	return &this
}

// NewCallControlApplicationOutboundWithDefaults instantiates a new CallControlApplicationOutbound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallControlApplicationOutboundWithDefaults() *CallControlApplicationOutbound {
	this := CallControlApplicationOutbound{}
	return &this
}

// GetChannelLimit returns the ChannelLimit field value if set, zero value otherwise.
func (o *CallControlApplicationOutbound) GetChannelLimit() int32 {
	if o == nil || IsNil(o.ChannelLimit) {
		var ret int32
		return ret
	}
	return *o.ChannelLimit
}

// GetChannelLimitOk returns a tuple with the ChannelLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallControlApplicationOutbound) GetChannelLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelLimit) {
		return nil, false
	}
	return o.ChannelLimit, true
}

// HasChannelLimit returns a boolean if a field has been set.
func (o *CallControlApplicationOutbound) HasChannelLimit() bool {
	if o != nil && !IsNil(o.ChannelLimit) {
		return true
	}

	return false
}

// SetChannelLimit gets a reference to the given int32 and assigns it to the ChannelLimit field.
func (o *CallControlApplicationOutbound) SetChannelLimit(v int32) {
	o.ChannelLimit = &v
}

// GetOutboundVoiceProfileId returns the OutboundVoiceProfileId field value if set, zero value otherwise.
func (o *CallControlApplicationOutbound) GetOutboundVoiceProfileId() string {
	if o == nil || IsNil(o.OutboundVoiceProfileId) {
		var ret string
		return ret
	}
	return *o.OutboundVoiceProfileId
}

// GetOutboundVoiceProfileIdOk returns a tuple with the OutboundVoiceProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallControlApplicationOutbound) GetOutboundVoiceProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundVoiceProfileId) {
		return nil, false
	}
	return o.OutboundVoiceProfileId, true
}

// HasOutboundVoiceProfileId returns a boolean if a field has been set.
func (o *CallControlApplicationOutbound) HasOutboundVoiceProfileId() bool {
	if o != nil && !IsNil(o.OutboundVoiceProfileId) {
		return true
	}

	return false
}

// SetOutboundVoiceProfileId gets a reference to the given string and assigns it to the OutboundVoiceProfileId field.
func (o *CallControlApplicationOutbound) SetOutboundVoiceProfileId(v string) {
	o.OutboundVoiceProfileId = &v
}

func (o CallControlApplicationOutbound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallControlApplicationOutbound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelLimit) {
		toSerialize["channel_limit"] = o.ChannelLimit
	}
	if !IsNil(o.OutboundVoiceProfileId) {
		toSerialize["outbound_voice_profile_id"] = o.OutboundVoiceProfileId
	}
	return toSerialize, nil
}

type NullableCallControlApplicationOutbound struct {
	value *CallControlApplicationOutbound
	isSet bool
}

func (v NullableCallControlApplicationOutbound) Get() *CallControlApplicationOutbound {
	return v.value
}

func (v *NullableCallControlApplicationOutbound) Set(val *CallControlApplicationOutbound) {
	v.value = val
	v.isSet = true
}

func (v NullableCallControlApplicationOutbound) IsSet() bool {
	return v.isSet
}

func (v *NullableCallControlApplicationOutbound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallControlApplicationOutbound(val *CallControlApplicationOutbound) *NullableCallControlApplicationOutbound {
	return &NullableCallControlApplicationOutbound{value: val, isSet: true}
}

func (v NullableCallControlApplicationOutbound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallControlApplicationOutbound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



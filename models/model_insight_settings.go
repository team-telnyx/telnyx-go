/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the InsightSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsightSettings{}

// InsightSettings struct for InsightSettings
type InsightSettings struct {
	// Reference to an Insight Group. Insights in this group will be run automatically for all the assistant's conversations.
	InsightGroupId *string `json:"insight_group_id,omitempty"`
}

// NewInsightSettings instantiates a new InsightSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsightSettings() *InsightSettings {
	this := InsightSettings{}
	return &this
}

// NewInsightSettingsWithDefaults instantiates a new InsightSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsightSettingsWithDefaults() *InsightSettings {
	this := InsightSettings{}
	return &this
}

// GetInsightGroupId returns the InsightGroupId field value if set, zero value otherwise.
func (o *InsightSettings) GetInsightGroupId() string {
	if o == nil || IsNil(o.InsightGroupId) {
		var ret string
		return ret
	}
	return *o.InsightGroupId
}

// GetInsightGroupIdOk returns a tuple with the InsightGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsightSettings) GetInsightGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.InsightGroupId) {
		return nil, false
	}
	return o.InsightGroupId, true
}

// HasInsightGroupId returns a boolean if a field has been set.
func (o *InsightSettings) HasInsightGroupId() bool {
	if o != nil && !IsNil(o.InsightGroupId) {
		return true
	}

	return false
}

// SetInsightGroupId gets a reference to the given string and assigns it to the InsightGroupId field.
func (o *InsightSettings) SetInsightGroupId(v string) {
	o.InsightGroupId = &v
}

func (o InsightSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsightSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InsightGroupId) {
		toSerialize["insight_group_id"] = o.InsightGroupId
	}
	return toSerialize, nil
}

type NullableInsightSettings struct {
	value *InsightSettings
	isSet bool
}

func (v NullableInsightSettings) Get() *InsightSettings {
	return v.value
}

func (v *NullableInsightSettings) Set(val *InsightSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableInsightSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableInsightSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsightSettings(val *InsightSettings) *NullableInsightSettings {
	return &NullableInsightSettings{value: val, isSet: true}
}

func (v NullableInsightSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsightSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



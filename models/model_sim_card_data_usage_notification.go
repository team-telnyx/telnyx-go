/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SimCardDataUsageNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimCardDataUsageNotification{}

// SimCardDataUsageNotification The SIM card individual data usage notification information.
type SimCardDataUsageNotification struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// The identification UUID of the related SIM card resource.
	SimCardId *string `json:"sim_card_id,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	Threshold *PostSimCardDataUsageNotificationRequestThreshold `json:"threshold,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewSimCardDataUsageNotification instantiates a new SimCardDataUsageNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimCardDataUsageNotification() *SimCardDataUsageNotification {
	this := SimCardDataUsageNotification{}
	return &this
}

// NewSimCardDataUsageNotificationWithDefaults instantiates a new SimCardDataUsageNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimCardDataUsageNotificationWithDefaults() *SimCardDataUsageNotification {
	this := SimCardDataUsageNotification{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SimCardDataUsageNotification) SetId(v string) {
	o.Id = &v
}

// GetSimCardId returns the SimCardId field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetSimCardId() string {
	if o == nil || IsNil(o.SimCardId) {
		var ret string
		return ret
	}
	return *o.SimCardId
}

// GetSimCardIdOk returns a tuple with the SimCardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetSimCardIdOk() (*string, bool) {
	if o == nil || IsNil(o.SimCardId) {
		return nil, false
	}
	return o.SimCardId, true
}

// HasSimCardId returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasSimCardId() bool {
	if o != nil && !IsNil(o.SimCardId) {
		return true
	}

	return false
}

// SetSimCardId gets a reference to the given string and assigns it to the SimCardId field.
func (o *SimCardDataUsageNotification) SetSimCardId(v string) {
	o.SimCardId = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *SimCardDataUsageNotification) SetRecordType(v string) {
	o.RecordType = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetThreshold() PostSimCardDataUsageNotificationRequestThreshold {
	if o == nil || IsNil(o.Threshold) {
		var ret PostSimCardDataUsageNotificationRequestThreshold
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetThresholdOk() (*PostSimCardDataUsageNotificationRequestThreshold, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given PostSimCardDataUsageNotificationRequestThreshold and assigns it to the Threshold field.
func (o *SimCardDataUsageNotification) SetThreshold(v PostSimCardDataUsageNotificationRequestThreshold) {
	o.Threshold = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SimCardDataUsageNotification) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SimCardDataUsageNotification) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimCardDataUsageNotification) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SimCardDataUsageNotification) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SimCardDataUsageNotification) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o SimCardDataUsageNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimCardDataUsageNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SimCardId) {
		toSerialize["sim_card_id"] = o.SimCardId
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSimCardDataUsageNotification struct {
	value *SimCardDataUsageNotification
	isSet bool
}

func (v NullableSimCardDataUsageNotification) Get() *SimCardDataUsageNotification {
	return v.value
}

func (v *NullableSimCardDataUsageNotification) Set(val *SimCardDataUsageNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableSimCardDataUsageNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableSimCardDataUsageNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimCardDataUsageNotification(val *SimCardDataUsageNotification) *NullableSimCardDataUsageNotification {
	return &NullableSimCardDataUsageNotification{value: val, isSet: true}
}

func (v NullableSimCardDataUsageNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimCardDataUsageNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



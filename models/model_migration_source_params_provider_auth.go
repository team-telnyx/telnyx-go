/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MigrationSourceParamsProviderAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationSourceParamsProviderAuth{}

// MigrationSourceParamsProviderAuth struct for MigrationSourceParamsProviderAuth
type MigrationSourceParamsProviderAuth struct {
	// AWS Access Key. For Telnyx-to-Telnyx migrations, use your Telnyx API key here.
	AccessKey *string `json:"access_key,omitempty"`
	// AWS Secret Access Key. For Telnyx-to-Telnyx migrations, use your Telnyx API key here as well.
	SecretAccessKey *string `json:"secret_access_key,omitempty"`
}

// NewMigrationSourceParamsProviderAuth instantiates a new MigrationSourceParamsProviderAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationSourceParamsProviderAuth() *MigrationSourceParamsProviderAuth {
	this := MigrationSourceParamsProviderAuth{}
	return &this
}

// NewMigrationSourceParamsProviderAuthWithDefaults instantiates a new MigrationSourceParamsProviderAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationSourceParamsProviderAuthWithDefaults() *MigrationSourceParamsProviderAuth {
	this := MigrationSourceParamsProviderAuth{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *MigrationSourceParamsProviderAuth) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSourceParamsProviderAuth) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *MigrationSourceParamsProviderAuth) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *MigrationSourceParamsProviderAuth) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *MigrationSourceParamsProviderAuth) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSourceParamsProviderAuth) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *MigrationSourceParamsProviderAuth) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *MigrationSourceParamsProviderAuth) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

func (o MigrationSourceParamsProviderAuth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationSourceParamsProviderAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secret_access_key"] = o.SecretAccessKey
	}
	return toSerialize, nil
}

type NullableMigrationSourceParamsProviderAuth struct {
	value *MigrationSourceParamsProviderAuth
	isSet bool
}

func (v NullableMigrationSourceParamsProviderAuth) Get() *MigrationSourceParamsProviderAuth {
	return v.value
}

func (v *NullableMigrationSourceParamsProviderAuth) Set(val *MigrationSourceParamsProviderAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationSourceParamsProviderAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationSourceParamsProviderAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationSourceParamsProviderAuth(val *MigrationSourceParamsProviderAuth) *NullableMigrationSourceParamsProviderAuth {
	return &NullableMigrationSourceParamsProviderAuth{value: val, isSet: true}
}

func (v NullableMigrationSourceParamsProviderAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationSourceParamsProviderAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



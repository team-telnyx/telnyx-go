/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the BucketNotFoundError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketNotFoundError{}

// BucketNotFoundError struct for BucketNotFoundError
type BucketNotFoundError struct {
	Detail []NotFoundError `json:"detail,omitempty"`
}

// NewBucketNotFoundError instantiates a new BucketNotFoundError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketNotFoundError() *BucketNotFoundError {
	this := BucketNotFoundError{}
	return &this
}

// NewBucketNotFoundErrorWithDefaults instantiates a new BucketNotFoundError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketNotFoundErrorWithDefaults() *BucketNotFoundError {
	this := BucketNotFoundError{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *BucketNotFoundError) GetDetail() []NotFoundError {
	if o == nil || IsNil(o.Detail) {
		var ret []NotFoundError
		return ret
	}
	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketNotFoundError) GetDetailOk() ([]NotFoundError, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *BucketNotFoundError) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given []NotFoundError and assigns it to the Detail field.
func (o *BucketNotFoundError) SetDetail(v []NotFoundError) {
	o.Detail = v
}

func (o BucketNotFoundError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketNotFoundError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableBucketNotFoundError struct {
	value *BucketNotFoundError
	isSet bool
}

func (v NullableBucketNotFoundError) Get() *BucketNotFoundError {
	return v.value
}

func (v *NullableBucketNotFoundError) Set(val *BucketNotFoundError) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketNotFoundError) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketNotFoundError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketNotFoundError(val *BucketNotFoundError) *NullableBucketNotFoundError {
	return &NullableBucketNotFoundError{value: val, isSet: true}
}

func (v NullableBucketNotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketNotFoundError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



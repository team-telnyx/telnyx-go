/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PlaybackStopRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaybackStopRequest{}

// PlaybackStopRequest struct for PlaybackStopRequest
type PlaybackStopRequest struct {
	// When enabled, it stops the audio being played in the overlay queue.
	Overlay *bool `json:"overlay,omitempty"`
	// Use `current` to stop the current audio being played. Use `all` to stop the current audio file being played and clear all audio files from the queue.
	Stop *string `json:"stop,omitempty"`
	// Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
	ClientState *string `json:"client_state,omitempty"`
	// Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.
	CommandId *string `json:"command_id,omitempty"`
}

// NewPlaybackStopRequest instantiates a new PlaybackStopRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaybackStopRequest() *PlaybackStopRequest {
	this := PlaybackStopRequest{}
	var overlay bool = false
	this.Overlay = &overlay
	var stop string = "all"
	this.Stop = &stop
	return &this
}

// NewPlaybackStopRequestWithDefaults instantiates a new PlaybackStopRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaybackStopRequestWithDefaults() *PlaybackStopRequest {
	this := PlaybackStopRequest{}
	var overlay bool = false
	this.Overlay = &overlay
	var stop string = "all"
	this.Stop = &stop
	return &this
}

// GetOverlay returns the Overlay field value if set, zero value otherwise.
func (o *PlaybackStopRequest) GetOverlay() bool {
	if o == nil || IsNil(o.Overlay) {
		var ret bool
		return ret
	}
	return *o.Overlay
}

// GetOverlayOk returns a tuple with the Overlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackStopRequest) GetOverlayOk() (*bool, bool) {
	if o == nil || IsNil(o.Overlay) {
		return nil, false
	}
	return o.Overlay, true
}

// HasOverlay returns a boolean if a field has been set.
func (o *PlaybackStopRequest) HasOverlay() bool {
	if o != nil && !IsNil(o.Overlay) {
		return true
	}

	return false
}

// SetOverlay gets a reference to the given bool and assigns it to the Overlay field.
func (o *PlaybackStopRequest) SetOverlay(v bool) {
	o.Overlay = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *PlaybackStopRequest) GetStop() string {
	if o == nil || IsNil(o.Stop) {
		var ret string
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackStopRequest) GetStopOk() (*string, bool) {
	if o == nil || IsNil(o.Stop) {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *PlaybackStopRequest) HasStop() bool {
	if o != nil && !IsNil(o.Stop) {
		return true
	}

	return false
}

// SetStop gets a reference to the given string and assigns it to the Stop field.
func (o *PlaybackStopRequest) SetStop(v string) {
	o.Stop = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *PlaybackStopRequest) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackStopRequest) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *PlaybackStopRequest) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *PlaybackStopRequest) SetClientState(v string) {
	o.ClientState = &v
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *PlaybackStopRequest) GetCommandId() string {
	if o == nil || IsNil(o.CommandId) {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackStopRequest) GetCommandIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommandId) {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *PlaybackStopRequest) HasCommandId() bool {
	if o != nil && !IsNil(o.CommandId) {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *PlaybackStopRequest) SetCommandId(v string) {
	o.CommandId = &v
}

func (o PlaybackStopRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaybackStopRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Overlay) {
		toSerialize["overlay"] = o.Overlay
	}
	if !IsNil(o.Stop) {
		toSerialize["stop"] = o.Stop
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.CommandId) {
		toSerialize["command_id"] = o.CommandId
	}
	return toSerialize, nil
}

type NullablePlaybackStopRequest struct {
	value *PlaybackStopRequest
	isSet bool
}

func (v NullablePlaybackStopRequest) Get() *PlaybackStopRequest {
	return v.value
}

func (v *NullablePlaybackStopRequest) Set(val *PlaybackStopRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaybackStopRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaybackStopRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaybackStopRequest(val *PlaybackStopRequest) *NullablePlaybackStopRequest {
	return &NullablePlaybackStopRequest{value: val, isSet: true}
}

func (v NullablePlaybackStopRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaybackStopRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



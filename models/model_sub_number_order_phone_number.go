/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SubNumberOrderPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubNumberOrderPhoneNumber{}

// SubNumberOrderPhoneNumber struct for SubNumberOrderPhoneNumber
type SubNumberOrderPhoneNumber struct {
	Id *string `json:"id,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	PhoneNumberType *string `json:"phone_number_type,omitempty"`
	RequirementsMet *bool `json:"requirements_met,omitempty"`
	RequirementsStatus *string `json:"requirements_status,omitempty"`
	Status *string `json:"status,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	BundleId *string `json:"bundle_id,omitempty"`
	RegulatoryRequirements []SubNumberOrderPhoneNumberRegulatoryRequirementsInner `json:"regulatory_requirements,omitempty"`
}

// NewSubNumberOrderPhoneNumber instantiates a new SubNumberOrderPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubNumberOrderPhoneNumber() *SubNumberOrderPhoneNumber {
	this := SubNumberOrderPhoneNumber{}
	return &this
}

// NewSubNumberOrderPhoneNumberWithDefaults instantiates a new SubNumberOrderPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubNumberOrderPhoneNumberWithDefaults() *SubNumberOrderPhoneNumber {
	this := SubNumberOrderPhoneNumber{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubNumberOrderPhoneNumber) SetId(v string) {
	o.Id = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *SubNumberOrderPhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *SubNumberOrderPhoneNumber) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetPhoneNumberType returns the PhoneNumberType field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetPhoneNumberType() string {
	if o == nil || IsNil(o.PhoneNumberType) {
		var ret string
		return ret
	}
	return *o.PhoneNumberType
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberType) {
		return nil, false
	}
	return o.PhoneNumberType, true
}

// HasPhoneNumberType returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasPhoneNumberType() bool {
	if o != nil && !IsNil(o.PhoneNumberType) {
		return true
	}

	return false
}

// SetPhoneNumberType gets a reference to the given string and assigns it to the PhoneNumberType field.
func (o *SubNumberOrderPhoneNumber) SetPhoneNumberType(v string) {
	o.PhoneNumberType = &v
}

// GetRequirementsMet returns the RequirementsMet field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetRequirementsMet() bool {
	if o == nil || IsNil(o.RequirementsMet) {
		var ret bool
		return ret
	}
	return *o.RequirementsMet
}

// GetRequirementsMetOk returns a tuple with the RequirementsMet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetRequirementsMetOk() (*bool, bool) {
	if o == nil || IsNil(o.RequirementsMet) {
		return nil, false
	}
	return o.RequirementsMet, true
}

// HasRequirementsMet returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasRequirementsMet() bool {
	if o != nil && !IsNil(o.RequirementsMet) {
		return true
	}

	return false
}

// SetRequirementsMet gets a reference to the given bool and assigns it to the RequirementsMet field.
func (o *SubNumberOrderPhoneNumber) SetRequirementsMet(v bool) {
	o.RequirementsMet = &v
}

// GetRequirementsStatus returns the RequirementsStatus field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetRequirementsStatus() string {
	if o == nil || IsNil(o.RequirementsStatus) {
		var ret string
		return ret
	}
	return *o.RequirementsStatus
}

// GetRequirementsStatusOk returns a tuple with the RequirementsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetRequirementsStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RequirementsStatus) {
		return nil, false
	}
	return o.RequirementsStatus, true
}

// HasRequirementsStatus returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasRequirementsStatus() bool {
	if o != nil && !IsNil(o.RequirementsStatus) {
		return true
	}

	return false
}

// SetRequirementsStatus gets a reference to the given string and assigns it to the RequirementsStatus field.
func (o *SubNumberOrderPhoneNumber) SetRequirementsStatus(v string) {
	o.RequirementsStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SubNumberOrderPhoneNumber) SetStatus(v string) {
	o.Status = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *SubNumberOrderPhoneNumber) SetRecordType(v string) {
	o.RecordType = &v
}

// GetBundleId returns the BundleId field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetBundleId() string {
	if o == nil || IsNil(o.BundleId) {
		var ret string
		return ret
	}
	return *o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetBundleIdOk() (*string, bool) {
	if o == nil || IsNil(o.BundleId) {
		return nil, false
	}
	return o.BundleId, true
}

// HasBundleId returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasBundleId() bool {
	if o != nil && !IsNil(o.BundleId) {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given string and assigns it to the BundleId field.
func (o *SubNumberOrderPhoneNumber) SetBundleId(v string) {
	o.BundleId = &v
}

// GetRegulatoryRequirements returns the RegulatoryRequirements field value if set, zero value otherwise.
func (o *SubNumberOrderPhoneNumber) GetRegulatoryRequirements() []SubNumberOrderPhoneNumberRegulatoryRequirementsInner {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		var ret []SubNumberOrderPhoneNumberRegulatoryRequirementsInner
		return ret
	}
	return o.RegulatoryRequirements
}

// GetRegulatoryRequirementsOk returns a tuple with the RegulatoryRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubNumberOrderPhoneNumber) GetRegulatoryRequirementsOk() ([]SubNumberOrderPhoneNumberRegulatoryRequirementsInner, bool) {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		return nil, false
	}
	return o.RegulatoryRequirements, true
}

// HasRegulatoryRequirements returns a boolean if a field has been set.
func (o *SubNumberOrderPhoneNumber) HasRegulatoryRequirements() bool {
	if o != nil && !IsNil(o.RegulatoryRequirements) {
		return true
	}

	return false
}

// SetRegulatoryRequirements gets a reference to the given []SubNumberOrderPhoneNumberRegulatoryRequirementsInner and assigns it to the RegulatoryRequirements field.
func (o *SubNumberOrderPhoneNumber) SetRegulatoryRequirements(v []SubNumberOrderPhoneNumberRegulatoryRequirementsInner) {
	o.RegulatoryRequirements = v
}

func (o SubNumberOrderPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubNumberOrderPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.PhoneNumberType) {
		toSerialize["phone_number_type"] = o.PhoneNumberType
	}
	if !IsNil(o.RequirementsMet) {
		toSerialize["requirements_met"] = o.RequirementsMet
	}
	if !IsNil(o.RequirementsStatus) {
		toSerialize["requirements_status"] = o.RequirementsStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.BundleId) {
		toSerialize["bundle_id"] = o.BundleId
	}
	if !IsNil(o.RegulatoryRequirements) {
		toSerialize["regulatory_requirements"] = o.RegulatoryRequirements
	}
	return toSerialize, nil
}

type NullableSubNumberOrderPhoneNumber struct {
	value *SubNumberOrderPhoneNumber
	isSet bool
}

func (v NullableSubNumberOrderPhoneNumber) Get() *SubNumberOrderPhoneNumber {
	return v.value
}

func (v *NullableSubNumberOrderPhoneNumber) Set(val *SubNumberOrderPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableSubNumberOrderPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableSubNumberOrderPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubNumberOrderPhoneNumber(val *SubNumberOrderPhoneNumber) *NullableSubNumberOrderPhoneNumber {
	return &NullableSubNumberOrderPhoneNumber{value: val, isSet: true}
}

func (v NullableSubNumberOrderPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubNumberOrderPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



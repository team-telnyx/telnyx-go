/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConversationMessageToolCallsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversationMessageToolCallsInner{}

// ConversationMessageToolCallsInner struct for ConversationMessageToolCallsInner
type ConversationMessageToolCallsInner struct {
	// Unique identifier for the tool call.
	Id string `json:"id"`
	// Type of the tool call.
	Type string `json:"type"`
	Function ConversationMessageToolCallsInnerFunction `json:"function"`
}

type _ConversationMessageToolCallsInner ConversationMessageToolCallsInner

// NewConversationMessageToolCallsInner instantiates a new ConversationMessageToolCallsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationMessageToolCallsInner(id string, type_ string, function ConversationMessageToolCallsInnerFunction) *ConversationMessageToolCallsInner {
	this := ConversationMessageToolCallsInner{}
	this.Id = id
	this.Type = type_
	this.Function = function
	return &this
}

// NewConversationMessageToolCallsInnerWithDefaults instantiates a new ConversationMessageToolCallsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationMessageToolCallsInnerWithDefaults() *ConversationMessageToolCallsInner {
	this := ConversationMessageToolCallsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ConversationMessageToolCallsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConversationMessageToolCallsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConversationMessageToolCallsInner) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *ConversationMessageToolCallsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ConversationMessageToolCallsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ConversationMessageToolCallsInner) SetType(v string) {
	o.Type = v
}

// GetFunction returns the Function field value
func (o *ConversationMessageToolCallsInner) GetFunction() ConversationMessageToolCallsInnerFunction {
	if o == nil {
		var ret ConversationMessageToolCallsInnerFunction
		return ret
	}

	return o.Function
}

// GetFunctionOk returns a tuple with the Function field value
// and a boolean to check if the value has been set.
func (o *ConversationMessageToolCallsInner) GetFunctionOk() (*ConversationMessageToolCallsInnerFunction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Function, true
}

// SetFunction sets field value
func (o *ConversationMessageToolCallsInner) SetFunction(v ConversationMessageToolCallsInnerFunction) {
	o.Function = v
}

func (o ConversationMessageToolCallsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversationMessageToolCallsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["function"] = o.Function
	return toSerialize, nil
}

func (o *ConversationMessageToolCallsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"function",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversationMessageToolCallsInner := _ConversationMessageToolCallsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversationMessageToolCallsInner)

	if err != nil {
		return err
	}

	*o = ConversationMessageToolCallsInner(varConversationMessageToolCallsInner)

	return err
}

type NullableConversationMessageToolCallsInner struct {
	value *ConversationMessageToolCallsInner
	isSet bool
}

func (v NullableConversationMessageToolCallsInner) Get() *ConversationMessageToolCallsInner {
	return v.value
}

func (v *NullableConversationMessageToolCallsInner) Set(val *ConversationMessageToolCallsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationMessageToolCallsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationMessageToolCallsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationMessageToolCallsInner(val *ConversationMessageToolCallsInner) *NullableConversationMessageToolCallsInner {
	return &NullableConversationMessageToolCallsInner{value: val, isSet: true}
}

func (v NullableConversationMessageToolCallsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationMessageToolCallsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



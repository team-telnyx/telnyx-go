/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MnoMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MnoMetadata{}

// MnoMetadata struct for MnoMetadata
type MnoMetadata struct {
	Var10999 *MnoMetadataItem `json:"10999,omitempty"`
}

// NewMnoMetadata instantiates a new MnoMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMnoMetadata() *MnoMetadata {
	this := MnoMetadata{}
	return &this
}

// NewMnoMetadataWithDefaults instantiates a new MnoMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMnoMetadataWithDefaults() *MnoMetadata {
	this := MnoMetadata{}
	return &this
}

// GetVar10999 returns the Var10999 field value if set, zero value otherwise.
func (o *MnoMetadata) GetVar10999() MnoMetadataItem {
	if o == nil || IsNil(o.Var10999) {
		var ret MnoMetadataItem
		return ret
	}
	return *o.Var10999
}

// GetVar10999Ok returns a tuple with the Var10999 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MnoMetadata) GetVar10999Ok() (*MnoMetadataItem, bool) {
	if o == nil || IsNil(o.Var10999) {
		return nil, false
	}
	return o.Var10999, true
}

// HasVar10999 returns a boolean if a field has been set.
func (o *MnoMetadata) HasVar10999() bool {
	if o != nil && !IsNil(o.Var10999) {
		return true
	}

	return false
}

// SetVar10999 gets a reference to the given MnoMetadataItem and assigns it to the Var10999 field.
func (o *MnoMetadata) SetVar10999(v MnoMetadataItem) {
	o.Var10999 = &v
}

func (o MnoMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MnoMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var10999) {
		toSerialize["10999"] = o.Var10999
	}
	return toSerialize, nil
}

type NullableMnoMetadata struct {
	value *MnoMetadata
	isSet bool
}

func (v NullableMnoMetadata) Get() *MnoMetadata {
	return v.value
}

func (v *NullableMnoMetadata) Set(val *MnoMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMnoMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMnoMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMnoMetadata(val *MnoMetadata) *NullableMnoMetadata {
	return &NullableMnoMetadata{value: val, isSet: true}
}

func (v NullableMnoMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMnoMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the OutboundMessagePayloadMediaInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutboundMessagePayloadMediaInner{}

// OutboundMessagePayloadMediaInner struct for OutboundMessagePayloadMediaInner
type OutboundMessagePayloadMediaInner struct {
	// The url of the media requested to be sent.
	Url *string `json:"url,omitempty"`
	// The MIME type of the requested media.
	ContentType NullableString `json:"content_type,omitempty"`
	// The SHA256 hash of the requested media.
	Sha256 NullableString `json:"sha256,omitempty"`
	// The size of the requested media.
	Size NullableInt32 `json:"size,omitempty"`
}

// NewOutboundMessagePayloadMediaInner instantiates a new OutboundMessagePayloadMediaInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutboundMessagePayloadMediaInner() *OutboundMessagePayloadMediaInner {
	this := OutboundMessagePayloadMediaInner{}
	return &this
}

// NewOutboundMessagePayloadMediaInnerWithDefaults instantiates a new OutboundMessagePayloadMediaInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutboundMessagePayloadMediaInnerWithDefaults() *OutboundMessagePayloadMediaInner {
	this := OutboundMessagePayloadMediaInner{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OutboundMessagePayloadMediaInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundMessagePayloadMediaInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OutboundMessagePayloadMediaInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OutboundMessagePayloadMediaInner) SetUrl(v string) {
	o.Url = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutboundMessagePayloadMediaInner) GetContentType() string {
	if o == nil || IsNil(o.ContentType.Get()) {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutboundMessagePayloadMediaInner) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *OutboundMessagePayloadMediaInner) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *OutboundMessagePayloadMediaInner) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *OutboundMessagePayloadMediaInner) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *OutboundMessagePayloadMediaInner) UnsetContentType() {
	o.ContentType.Unset()
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutboundMessagePayloadMediaInner) GetSha256() string {
	if o == nil || IsNil(o.Sha256.Get()) {
		var ret string
		return ret
	}
	return *o.Sha256.Get()
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutboundMessagePayloadMediaInner) GetSha256Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sha256.Get(), o.Sha256.IsSet()
}

// HasSha256 returns a boolean if a field has been set.
func (o *OutboundMessagePayloadMediaInner) HasSha256() bool {
	if o != nil && o.Sha256.IsSet() {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given NullableString and assigns it to the Sha256 field.
func (o *OutboundMessagePayloadMediaInner) SetSha256(v string) {
	o.Sha256.Set(&v)
}
// SetSha256Nil sets the value for Sha256 to be an explicit nil
func (o *OutboundMessagePayloadMediaInner) SetSha256Nil() {
	o.Sha256.Set(nil)
}

// UnsetSha256 ensures that no value is present for Sha256, not even an explicit nil
func (o *OutboundMessagePayloadMediaInner) UnsetSha256() {
	o.Sha256.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutboundMessagePayloadMediaInner) GetSize() int32 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutboundMessagePayloadMediaInner) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *OutboundMessagePayloadMediaInner) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt32 and assigns it to the Size field.
func (o *OutboundMessagePayloadMediaInner) SetSize(v int32) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *OutboundMessagePayloadMediaInner) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *OutboundMessagePayloadMediaInner) UnsetSize() {
	o.Size.Unset()
}

func (o OutboundMessagePayloadMediaInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutboundMessagePayloadMediaInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if o.ContentType.IsSet() {
		toSerialize["content_type"] = o.ContentType.Get()
	}
	if o.Sha256.IsSet() {
		toSerialize["sha256"] = o.Sha256.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return toSerialize, nil
}

type NullableOutboundMessagePayloadMediaInner struct {
	value *OutboundMessagePayloadMediaInner
	isSet bool
}

func (v NullableOutboundMessagePayloadMediaInner) Get() *OutboundMessagePayloadMediaInner {
	return v.value
}

func (v *NullableOutboundMessagePayloadMediaInner) Set(val *OutboundMessagePayloadMediaInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOutboundMessagePayloadMediaInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOutboundMessagePayloadMediaInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutboundMessagePayloadMediaInner(val *OutboundMessagePayloadMediaInner) *NullableOutboundMessagePayloadMediaInner {
	return &NullableOutboundMessagePayloadMediaInner{value: val, isSet: true}
}

func (v NullableOutboundMessagePayloadMediaInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutboundMessagePayloadMediaInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



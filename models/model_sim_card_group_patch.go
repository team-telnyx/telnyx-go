/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SIMCardGroupPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SIMCardGroupPatch{}

// SIMCardGroupPatch struct for SIMCardGroupPatch
type SIMCardGroupPatch struct {
	// A user friendly name for the SIM card group.
	Name *string `json:"name,omitempty"`
	DataLimit *SIMCardGroupDataLimit `json:"data_limit,omitempty"`
}

// NewSIMCardGroupPatch instantiates a new SIMCardGroupPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSIMCardGroupPatch() *SIMCardGroupPatch {
	this := SIMCardGroupPatch{}
	return &this
}

// NewSIMCardGroupPatchWithDefaults instantiates a new SIMCardGroupPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSIMCardGroupPatchWithDefaults() *SIMCardGroupPatch {
	this := SIMCardGroupPatch{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SIMCardGroupPatch) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupPatch) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SIMCardGroupPatch) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SIMCardGroupPatch) SetName(v string) {
	o.Name = &v
}

// GetDataLimit returns the DataLimit field value if set, zero value otherwise.
func (o *SIMCardGroupPatch) GetDataLimit() SIMCardGroupDataLimit {
	if o == nil || IsNil(o.DataLimit) {
		var ret SIMCardGroupDataLimit
		return ret
	}
	return *o.DataLimit
}

// GetDataLimitOk returns a tuple with the DataLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupPatch) GetDataLimitOk() (*SIMCardGroupDataLimit, bool) {
	if o == nil || IsNil(o.DataLimit) {
		return nil, false
	}
	return o.DataLimit, true
}

// HasDataLimit returns a boolean if a field has been set.
func (o *SIMCardGroupPatch) HasDataLimit() bool {
	if o != nil && !IsNil(o.DataLimit) {
		return true
	}

	return false
}

// SetDataLimit gets a reference to the given SIMCardGroupDataLimit and assigns it to the DataLimit field.
func (o *SIMCardGroupPatch) SetDataLimit(v SIMCardGroupDataLimit) {
	o.DataLimit = &v
}

func (o SIMCardGroupPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SIMCardGroupPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DataLimit) {
		toSerialize["data_limit"] = o.DataLimit
	}
	return toSerialize, nil
}

type NullableSIMCardGroupPatch struct {
	value *SIMCardGroupPatch
	isSet bool
}

func (v NullableSIMCardGroupPatch) Get() *SIMCardGroupPatch {
	return v.value
}

func (v *NullableSIMCardGroupPatch) Set(val *SIMCardGroupPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableSIMCardGroupPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableSIMCardGroupPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSIMCardGroupPatch(val *SIMCardGroupPatch) *NullableSIMCardGroupPatch {
	return &NullableSIMCardGroupPatch{value: val, isSet: true}
}

func (v NullableSIMCardGroupPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSIMCardGroupPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



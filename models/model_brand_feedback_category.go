/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BrandFeedbackCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandFeedbackCategory{}

// BrandFeedbackCategory struct for BrandFeedbackCategory
type BrandFeedbackCategory struct {
	// One of `TAX_ID`, `STOCK_SYMBOL`, `GOVERNMENT_ENTITY`, `NONPROFIT`, and `OTHERS`
	Id string `json:"id"`
	// Human-readable version of the `id` field
	DisplayName string `json:"displayName"`
	// Long-form description of the feedback with additional information
	Description string `json:"description"`
	// List of relevant fields in the originally-submitted brand json
	Fields []string `json:"fields"`
}

type _BrandFeedbackCategory BrandFeedbackCategory

// NewBrandFeedbackCategory instantiates a new BrandFeedbackCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandFeedbackCategory(id string, displayName string, description string, fields []string) *BrandFeedbackCategory {
	this := BrandFeedbackCategory{}
	this.Id = id
	this.DisplayName = displayName
	this.Description = description
	this.Fields = fields
	return &this
}

// NewBrandFeedbackCategoryWithDefaults instantiates a new BrandFeedbackCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandFeedbackCategoryWithDefaults() *BrandFeedbackCategory {
	this := BrandFeedbackCategory{}
	return &this
}

// GetId returns the Id field value
func (o *BrandFeedbackCategory) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BrandFeedbackCategory) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BrandFeedbackCategory) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *BrandFeedbackCategory) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *BrandFeedbackCategory) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *BrandFeedbackCategory) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDescription returns the Description field value
func (o *BrandFeedbackCategory) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BrandFeedbackCategory) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BrandFeedbackCategory) SetDescription(v string) {
	o.Description = v
}

// GetFields returns the Fields field value
func (o *BrandFeedbackCategory) GetFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *BrandFeedbackCategory) GetFieldsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *BrandFeedbackCategory) SetFields(v []string) {
	o.Fields = v
}

func (o BrandFeedbackCategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandFeedbackCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["displayName"] = o.DisplayName
	toSerialize["description"] = o.Description
	toSerialize["fields"] = o.Fields
	return toSerialize, nil
}

func (o *BrandFeedbackCategory) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"displayName",
		"description",
		"fields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBrandFeedbackCategory := _BrandFeedbackCategory{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBrandFeedbackCategory)

	if err != nil {
		return err
	}

	*o = BrandFeedbackCategory(varBrandFeedbackCategory)

	return err
}

type NullableBrandFeedbackCategory struct {
	value *BrandFeedbackCategory
	isSet bool
}

func (v NullableBrandFeedbackCategory) Get() *BrandFeedbackCategory {
	return v.value
}

func (v *NullableBrandFeedbackCategory) Set(val *BrandFeedbackCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandFeedbackCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandFeedbackCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandFeedbackCategory(val *BrandFeedbackCategory) *NullableBrandFeedbackCategory {
	return &NullableBrandFeedbackCategory{value: val, isSet: true}
}

func (v NullableBrandFeedbackCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandFeedbackCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



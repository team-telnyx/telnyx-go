/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the DownlinkData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownlinkData{}

// DownlinkData struct for DownlinkData
type DownlinkData struct {
	// Downlink data
	Amount *float32 `json:"amount,omitempty"`
	// Transmission unit
	Unit *string `json:"unit,omitempty"`
}

// NewDownlinkData instantiates a new DownlinkData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownlinkData() *DownlinkData {
	this := DownlinkData{}
	var unit string = "MB"
	this.Unit = &unit
	return &this
}

// NewDownlinkDataWithDefaults instantiates a new DownlinkData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownlinkDataWithDefaults() *DownlinkData {
	this := DownlinkData{}
	var unit string = "MB"
	this.Unit = &unit
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DownlinkData) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownlinkData) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DownlinkData) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DownlinkData) SetAmount(v float32) {
	o.Amount = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *DownlinkData) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownlinkData) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *DownlinkData) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *DownlinkData) SetUnit(v string) {
	o.Unit = &v
}

func (o DownlinkData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownlinkData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableDownlinkData struct {
	value *DownlinkData
	isSet bool
}

func (v NullableDownlinkData) Get() *DownlinkData {
	return v.value
}

func (v *NullableDownlinkData) Set(val *DownlinkData) {
	v.value = val
	v.isSet = true
}

func (v NullableDownlinkData) IsSet() bool {
	return v.isSet
}

func (v *NullableDownlinkData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownlinkData(val *DownlinkData) *NullableDownlinkData {
	return &NullableDownlinkData{value: val, isSet: true}
}

func (v NullableDownlinkData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownlinkData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



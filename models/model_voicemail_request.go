/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the VoicemailRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoicemailRequest{}

// VoicemailRequest struct for VoicemailRequest
type VoicemailRequest struct {
	// The pin used for voicemail
	Pin *string `json:"pin,omitempty"`
	// Whether voicemail is enabled.
	Enabled *bool `json:"enabled,omitempty"`
}

// NewVoicemailRequest instantiates a new VoicemailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoicemailRequest() *VoicemailRequest {
	this := VoicemailRequest{}
	return &this
}

// NewVoicemailRequestWithDefaults instantiates a new VoicemailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoicemailRequestWithDefaults() *VoicemailRequest {
	this := VoicemailRequest{}
	return &this
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *VoicemailRequest) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailRequest) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *VoicemailRequest) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *VoicemailRequest) SetPin(v string) {
	o.Pin = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *VoicemailRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *VoicemailRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *VoicemailRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o VoicemailRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoicemailRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableVoicemailRequest struct {
	value *VoicemailRequest
	isSet bool
}

func (v NullableVoicemailRequest) Get() *VoicemailRequest {
	return v.value
}

func (v *NullableVoicemailRequest) Set(val *VoicemailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVoicemailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVoicemailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoicemailRequest(val *VoicemailRequest) *NullableVoicemailRequest {
	return &NullableVoicemailRequest{value: val, isSet: true}
}

func (v NullableVoicemailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoicemailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



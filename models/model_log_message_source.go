/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the LogMessageSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogMessageSource{}

// LogMessageSource struct for LogMessageSource
type LogMessageSource struct {
	// JSON pointer (RFC6901) to the offending entity.
	Pointer *string `json:"pointer,omitempty"`
}

// NewLogMessageSource instantiates a new LogMessageSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogMessageSource() *LogMessageSource {
	this := LogMessageSource{}
	return &this
}

// NewLogMessageSourceWithDefaults instantiates a new LogMessageSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogMessageSourceWithDefaults() *LogMessageSource {
	this := LogMessageSource{}
	return &this
}

// GetPointer returns the Pointer field value if set, zero value otherwise.
func (o *LogMessageSource) GetPointer() string {
	if o == nil || IsNil(o.Pointer) {
		var ret string
		return ret
	}
	return *o.Pointer
}

// GetPointerOk returns a tuple with the Pointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogMessageSource) GetPointerOk() (*string, bool) {
	if o == nil || IsNil(o.Pointer) {
		return nil, false
	}
	return o.Pointer, true
}

// HasPointer returns a boolean if a field has been set.
func (o *LogMessageSource) HasPointer() bool {
	if o != nil && !IsNil(o.Pointer) {
		return true
	}

	return false
}

// SetPointer gets a reference to the given string and assigns it to the Pointer field.
func (o *LogMessageSource) SetPointer(v string) {
	o.Pointer = &v
}

func (o LogMessageSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogMessageSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pointer) {
		toSerialize["pointer"] = o.Pointer
	}
	return toSerialize, nil
}

type NullableLogMessageSource struct {
	value *LogMessageSource
	isSet bool
}

func (v NullableLogMessageSource) Get() *LogMessageSource {
	return v.value
}

func (v *NullableLogMessageSource) Set(val *LogMessageSource) {
	v.value = val
	v.isSet = true
}

func (v NullableLogMessageSource) IsSet() bool {
	return v.isSet
}

func (v *NullableLogMessageSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogMessageSource(val *LogMessageSource) *NullableLogMessageSource {
	return &NullableLogMessageSource{value: val, isSet: true}
}

func (v NullableLogMessageSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogMessageSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateScheduledEventRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateScheduledEventRequest{}

// CreateScheduledEventRequest struct for CreateScheduledEventRequest
type CreateScheduledEventRequest struct {
	TelnyxConversationChannel ConversationChannelType `json:"telnyx_conversation_channel"`
	// The phone number, SIP URI, to schedule the call or text to.
	TelnyxEndUserTarget string `json:"telnyx_end_user_target"`
	// The phone number, SIP URI, to schedule the call or text from.
	TelnyxAgentTarget string `json:"telnyx_agent_target"`
	// The datetime at which the event should be scheduled. Formatted as ISO 8601.
	ScheduledAtFixedDatetime time.Time `json:"scheduled_at_fixed_datetime"`
	// Required for sms scheduled events. The text to be sent to the end user.
	Text *string `json:"text,omitempty"`
	// Metadata associated with the conversation. Telnyx provides several pieces of metadata, but customers can also add their own.
	ConversationMetadata map[string]ConversationMetadataValue `json:"conversation_metadata,omitempty"`
}

type _CreateScheduledEventRequest CreateScheduledEventRequest

// NewCreateScheduledEventRequest instantiates a new CreateScheduledEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateScheduledEventRequest(telnyxConversationChannel ConversationChannelType, telnyxEndUserTarget string, telnyxAgentTarget string, scheduledAtFixedDatetime time.Time) *CreateScheduledEventRequest {
	this := CreateScheduledEventRequest{}
	this.TelnyxConversationChannel = telnyxConversationChannel
	this.TelnyxEndUserTarget = telnyxEndUserTarget
	this.TelnyxAgentTarget = telnyxAgentTarget
	this.ScheduledAtFixedDatetime = scheduledAtFixedDatetime
	return &this
}

// NewCreateScheduledEventRequestWithDefaults instantiates a new CreateScheduledEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateScheduledEventRequestWithDefaults() *CreateScheduledEventRequest {
	this := CreateScheduledEventRequest{}
	return &this
}

// GetTelnyxConversationChannel returns the TelnyxConversationChannel field value
func (o *CreateScheduledEventRequest) GetTelnyxConversationChannel() ConversationChannelType {
	if o == nil {
		var ret ConversationChannelType
		return ret
	}

	return o.TelnyxConversationChannel
}

// GetTelnyxConversationChannelOk returns a tuple with the TelnyxConversationChannel field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetTelnyxConversationChannelOk() (*ConversationChannelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxConversationChannel, true
}

// SetTelnyxConversationChannel sets field value
func (o *CreateScheduledEventRequest) SetTelnyxConversationChannel(v ConversationChannelType) {
	o.TelnyxConversationChannel = v
}

// GetTelnyxEndUserTarget returns the TelnyxEndUserTarget field value
func (o *CreateScheduledEventRequest) GetTelnyxEndUserTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TelnyxEndUserTarget
}

// GetTelnyxEndUserTargetOk returns a tuple with the TelnyxEndUserTarget field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetTelnyxEndUserTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxEndUserTarget, true
}

// SetTelnyxEndUserTarget sets field value
func (o *CreateScheduledEventRequest) SetTelnyxEndUserTarget(v string) {
	o.TelnyxEndUserTarget = v
}

// GetTelnyxAgentTarget returns the TelnyxAgentTarget field value
func (o *CreateScheduledEventRequest) GetTelnyxAgentTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TelnyxAgentTarget
}

// GetTelnyxAgentTargetOk returns a tuple with the TelnyxAgentTarget field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetTelnyxAgentTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxAgentTarget, true
}

// SetTelnyxAgentTarget sets field value
func (o *CreateScheduledEventRequest) SetTelnyxAgentTarget(v string) {
	o.TelnyxAgentTarget = v
}

// GetScheduledAtFixedDatetime returns the ScheduledAtFixedDatetime field value
func (o *CreateScheduledEventRequest) GetScheduledAtFixedDatetime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ScheduledAtFixedDatetime
}

// GetScheduledAtFixedDatetimeOk returns a tuple with the ScheduledAtFixedDatetime field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetScheduledAtFixedDatetimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledAtFixedDatetime, true
}

// SetScheduledAtFixedDatetime sets field value
func (o *CreateScheduledEventRequest) SetScheduledAtFixedDatetime(v time.Time) {
	o.ScheduledAtFixedDatetime = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CreateScheduledEventRequest) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CreateScheduledEventRequest) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CreateScheduledEventRequest) SetText(v string) {
	o.Text = &v
}

// GetConversationMetadata returns the ConversationMetadata field value if set, zero value otherwise.
func (o *CreateScheduledEventRequest) GetConversationMetadata() map[string]ConversationMetadataValue {
	if o == nil || IsNil(o.ConversationMetadata) {
		var ret map[string]ConversationMetadataValue
		return ret
	}
	return o.ConversationMetadata
}

// GetConversationMetadataOk returns a tuple with the ConversationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledEventRequest) GetConversationMetadataOk() (map[string]ConversationMetadataValue, bool) {
	if o == nil || IsNil(o.ConversationMetadata) {
		return map[string]ConversationMetadataValue{}, false
	}
	return o.ConversationMetadata, true
}

// HasConversationMetadata returns a boolean if a field has been set.
func (o *CreateScheduledEventRequest) HasConversationMetadata() bool {
	if o != nil && !IsNil(o.ConversationMetadata) {
		return true
	}

	return false
}

// SetConversationMetadata gets a reference to the given map[string]ConversationMetadataValue and assigns it to the ConversationMetadata field.
func (o *CreateScheduledEventRequest) SetConversationMetadata(v map[string]ConversationMetadataValue) {
	o.ConversationMetadata = v
}

func (o CreateScheduledEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateScheduledEventRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["telnyx_conversation_channel"] = o.TelnyxConversationChannel
	toSerialize["telnyx_end_user_target"] = o.TelnyxEndUserTarget
	toSerialize["telnyx_agent_target"] = o.TelnyxAgentTarget
	toSerialize["scheduled_at_fixed_datetime"] = o.ScheduledAtFixedDatetime
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.ConversationMetadata) {
		toSerialize["conversation_metadata"] = o.ConversationMetadata
	}
	return toSerialize, nil
}

func (o *CreateScheduledEventRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"telnyx_conversation_channel",
		"telnyx_end_user_target",
		"telnyx_agent_target",
		"scheduled_at_fixed_datetime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateScheduledEventRequest := _CreateScheduledEventRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateScheduledEventRequest)

	if err != nil {
		return err
	}

	*o = CreateScheduledEventRequest(varCreateScheduledEventRequest)

	return err
}

type NullableCreateScheduledEventRequest struct {
	value *CreateScheduledEventRequest
	isSet bool
}

func (v NullableCreateScheduledEventRequest) Get() *CreateScheduledEventRequest {
	return v.value
}

func (v *NullableCreateScheduledEventRequest) Set(val *CreateScheduledEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateScheduledEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateScheduledEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateScheduledEventRequest(val *CreateScheduledEventRequest) *NullableCreateScheduledEventRequest {
	return &NullableCreateScheduledEventRequest{value: val, isSet: true}
}

func (v NullableCreateScheduledEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateScheduledEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



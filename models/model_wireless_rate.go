/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the WirelessRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WirelessRate{}

// WirelessRate struct for WirelessRate
type WirelessRate struct {
	// Rate from which cost is calculated
	Amount *string `json:"amount,omitempty"`
	// Currency of the rate and cost
	Currency *string `json:"currency,omitempty"`
}

// NewWirelessRate instantiates a new WirelessRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWirelessRate() *WirelessRate {
	this := WirelessRate{}
	return &this
}

// NewWirelessRateWithDefaults instantiates a new WirelessRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWirelessRateWithDefaults() *WirelessRate {
	this := WirelessRate{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *WirelessRate) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WirelessRate) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *WirelessRate) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *WirelessRate) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *WirelessRate) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WirelessRate) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *WirelessRate) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *WirelessRate) SetCurrency(v string) {
	o.Currency = &v
}

func (o WirelessRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WirelessRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableWirelessRate struct {
	value *WirelessRate
	isSet bool
}

func (v NullableWirelessRate) Get() *WirelessRate {
	return v.value
}

func (v *NullableWirelessRate) Set(val *WirelessRate) {
	v.value = val
	v.isSet = true
}

func (v NullableWirelessRate) IsSet() bool {
	return v.isSet
}

func (v *NullableWirelessRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWirelessRate(val *WirelessRate) *NullableWirelessRate {
	return &NullableWirelessRate{value: val, isSet: true}
}

func (v NullableWirelessRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWirelessRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



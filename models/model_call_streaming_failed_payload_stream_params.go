/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallStreamingFailedPayloadStreamParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallStreamingFailedPayloadStreamParams{}

// CallStreamingFailedPayloadStreamParams Streaming parameters as they were originally given to the Call Control API.
type CallStreamingFailedPayloadStreamParams struct {
	// The destination WebSocket address where the stream is going to be delivered.
	StreamUrl *string `json:"stream_url,omitempty"`
	// Specifies which track should be streamed.
	Track *string `json:"track,omitempty"`
}

// NewCallStreamingFailedPayloadStreamParams instantiates a new CallStreamingFailedPayloadStreamParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallStreamingFailedPayloadStreamParams() *CallStreamingFailedPayloadStreamParams {
	this := CallStreamingFailedPayloadStreamParams{}
	var track string = "inbound_track"
	this.Track = &track
	return &this
}

// NewCallStreamingFailedPayloadStreamParamsWithDefaults instantiates a new CallStreamingFailedPayloadStreamParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallStreamingFailedPayloadStreamParamsWithDefaults() *CallStreamingFailedPayloadStreamParams {
	this := CallStreamingFailedPayloadStreamParams{}
	var track string = "inbound_track"
	this.Track = &track
	return &this
}

// GetStreamUrl returns the StreamUrl field value if set, zero value otherwise.
func (o *CallStreamingFailedPayloadStreamParams) GetStreamUrl() string {
	if o == nil || IsNil(o.StreamUrl) {
		var ret string
		return ret
	}
	return *o.StreamUrl
}

// GetStreamUrlOk returns a tuple with the StreamUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayloadStreamParams) GetStreamUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StreamUrl) {
		return nil, false
	}
	return o.StreamUrl, true
}

// HasStreamUrl returns a boolean if a field has been set.
func (o *CallStreamingFailedPayloadStreamParams) HasStreamUrl() bool {
	if o != nil && !IsNil(o.StreamUrl) {
		return true
	}

	return false
}

// SetStreamUrl gets a reference to the given string and assigns it to the StreamUrl field.
func (o *CallStreamingFailedPayloadStreamParams) SetStreamUrl(v string) {
	o.StreamUrl = &v
}

// GetTrack returns the Track field value if set, zero value otherwise.
func (o *CallStreamingFailedPayloadStreamParams) GetTrack() string {
	if o == nil || IsNil(o.Track) {
		var ret string
		return ret
	}
	return *o.Track
}

// GetTrackOk returns a tuple with the Track field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStreamingFailedPayloadStreamParams) GetTrackOk() (*string, bool) {
	if o == nil || IsNil(o.Track) {
		return nil, false
	}
	return o.Track, true
}

// HasTrack returns a boolean if a field has been set.
func (o *CallStreamingFailedPayloadStreamParams) HasTrack() bool {
	if o != nil && !IsNil(o.Track) {
		return true
	}

	return false
}

// SetTrack gets a reference to the given string and assigns it to the Track field.
func (o *CallStreamingFailedPayloadStreamParams) SetTrack(v string) {
	o.Track = &v
}

func (o CallStreamingFailedPayloadStreamParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallStreamingFailedPayloadStreamParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StreamUrl) {
		toSerialize["stream_url"] = o.StreamUrl
	}
	if !IsNil(o.Track) {
		toSerialize["track"] = o.Track
	}
	return toSerialize, nil
}

type NullableCallStreamingFailedPayloadStreamParams struct {
	value *CallStreamingFailedPayloadStreamParams
	isSet bool
}

func (v NullableCallStreamingFailedPayloadStreamParams) Get() *CallStreamingFailedPayloadStreamParams {
	return v.value
}

func (v *NullableCallStreamingFailedPayloadStreamParams) Set(val *CallStreamingFailedPayloadStreamParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCallStreamingFailedPayloadStreamParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCallStreamingFailedPayloadStreamParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallStreamingFailedPayloadStreamParams(val *CallStreamingFailedPayloadStreamParams) *NullableCallStreamingFailedPayloadStreamParams {
	return &NullableCallStreamingFailedPayloadStreamParams{value: val, isSet: true}
}

func (v NullableCallStreamingFailedPayloadStreamParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallStreamingFailedPayloadStreamParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



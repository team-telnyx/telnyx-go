/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingOrderDocuments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderDocuments{}

// PortingOrderDocuments Can be specified directly or via the `requirement_group_id` parameter.
type PortingOrderDocuments struct {
	// Returned ID of the submitted LOA via the Documents endpoint
	Loa *string `json:"loa,omitempty"`
	// Returned ID of the submitted Invoice via the Documents endpoint
	Invoice *string `json:"invoice,omitempty"`
}

// NewPortingOrderDocuments instantiates a new PortingOrderDocuments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderDocuments() *PortingOrderDocuments {
	this := PortingOrderDocuments{}
	return &this
}

// NewPortingOrderDocumentsWithDefaults instantiates a new PortingOrderDocuments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderDocumentsWithDefaults() *PortingOrderDocuments {
	this := PortingOrderDocuments{}
	return &this
}

// GetLoa returns the Loa field value if set, zero value otherwise.
func (o *PortingOrderDocuments) GetLoa() string {
	if o == nil || IsNil(o.Loa) {
		var ret string
		return ret
	}
	return *o.Loa
}

// GetLoaOk returns a tuple with the Loa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderDocuments) GetLoaOk() (*string, bool) {
	if o == nil || IsNil(o.Loa) {
		return nil, false
	}
	return o.Loa, true
}

// HasLoa returns a boolean if a field has been set.
func (o *PortingOrderDocuments) HasLoa() bool {
	if o != nil && !IsNil(o.Loa) {
		return true
	}

	return false
}

// SetLoa gets a reference to the given string and assigns it to the Loa field.
func (o *PortingOrderDocuments) SetLoa(v string) {
	o.Loa = &v
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *PortingOrderDocuments) GetInvoice() string {
	if o == nil || IsNil(o.Invoice) {
		var ret string
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderDocuments) GetInvoiceOk() (*string, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *PortingOrderDocuments) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given string and assigns it to the Invoice field.
func (o *PortingOrderDocuments) SetInvoice(v string) {
	o.Invoice = &v
}

func (o PortingOrderDocuments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderDocuments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Loa) {
		toSerialize["loa"] = o.Loa
	}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	return toSerialize, nil
}

type NullablePortingOrderDocuments struct {
	value *PortingOrderDocuments
	isSet bool
}

func (v NullablePortingOrderDocuments) Get() *PortingOrderDocuments {
	return v.value
}

func (v *NullablePortingOrderDocuments) Set(val *PortingOrderDocuments) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderDocuments) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderDocuments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderDocuments(val *PortingOrderDocuments) *NullablePortingOrderDocuments {
	return &NullablePortingOrderDocuments{value: val, isSet: true}
}

func (v NullablePortingOrderDocuments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderDocuments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



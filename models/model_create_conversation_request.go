/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CreateConversationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConversationRequest{}

// CreateConversationRequest struct for CreateConversationRequest
type CreateConversationRequest struct {
	Name *string `json:"name,omitempty"`
	// Metadata associated with the conversation.
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewCreateConversationRequest instantiates a new CreateConversationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConversationRequest() *CreateConversationRequest {
	this := CreateConversationRequest{}
	return &this
}

// NewCreateConversationRequestWithDefaults instantiates a new CreateConversationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConversationRequestWithDefaults() *CreateConversationRequest {
	this := CreateConversationRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateConversationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConversationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateConversationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateConversationRequest) SetName(v string) {
	o.Name = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateConversationRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConversationRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateConversationRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateConversationRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o CreateConversationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConversationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCreateConversationRequest struct {
	value *CreateConversationRequest
	isSet bool
}

func (v NullableCreateConversationRequest) Get() *CreateConversationRequest {
	return v.value
}

func (v *NullableCreateConversationRequest) Set(val *CreateConversationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConversationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConversationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConversationRequest(val *CreateConversationRequest) *NullableCreateConversationRequest {
	return &NullableCreateConversationRequest{value: val, isSet: true}
}

func (v NullableCreateConversationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConversationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



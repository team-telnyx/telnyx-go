/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the OperatorConnectRefreshResponse1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperatorConnectRefreshResponse1{}

// OperatorConnectRefreshResponse1 struct for OperatorConnectRefreshResponse1
type OperatorConnectRefreshResponse1 struct {
	// Describes wether or not the operation was successful
	Success *bool `json:"success,omitempty"`
	// A message describing the result of the operation
	Message *string `json:"message,omitempty"`
}

// NewOperatorConnectRefreshResponse1 instantiates a new OperatorConnectRefreshResponse1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatorConnectRefreshResponse1() *OperatorConnectRefreshResponse1 {
	this := OperatorConnectRefreshResponse1{}
	return &this
}

// NewOperatorConnectRefreshResponse1WithDefaults instantiates a new OperatorConnectRefreshResponse1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatorConnectRefreshResponse1WithDefaults() *OperatorConnectRefreshResponse1 {
	this := OperatorConnectRefreshResponse1{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *OperatorConnectRefreshResponse1) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorConnectRefreshResponse1) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *OperatorConnectRefreshResponse1) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *OperatorConnectRefreshResponse1) SetSuccess(v bool) {
	o.Success = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OperatorConnectRefreshResponse1) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorConnectRefreshResponse1) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OperatorConnectRefreshResponse1) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OperatorConnectRefreshResponse1) SetMessage(v string) {
	o.Message = &v
}

func (o OperatorConnectRefreshResponse1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperatorConnectRefreshResponse1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableOperatorConnectRefreshResponse1 struct {
	value *OperatorConnectRefreshResponse1
	isSet bool
}

func (v NullableOperatorConnectRefreshResponse1) Get() *OperatorConnectRefreshResponse1 {
	return v.value
}

func (v *NullableOperatorConnectRefreshResponse1) Set(val *OperatorConnectRefreshResponse1) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatorConnectRefreshResponse1) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatorConnectRefreshResponse1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatorConnectRefreshResponse1(val *OperatorConnectRefreshResponse1) *NullableOperatorConnectRefreshResponse1 {
	return &NullableOperatorConnectRefreshResponse1{value: val, isSet: true}
}

func (v NullableOperatorConnectRefreshResponse1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatorConnectRefreshResponse1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



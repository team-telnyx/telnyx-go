/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the UpdateMessagingProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMessagingProfileRequest{}

// UpdateMessagingProfileRequest struct for UpdateMessagingProfileRequest
type UpdateMessagingProfileRequest struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Identifies the type of resource.
	Id *string `json:"id,omitempty"`
	// A user friendly name for the messaging profile.
	Name *string `json:"name,omitempty"`
	// Specifies whether the messaging profile is enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
	// The URL where webhooks related to this messaging profile will be sent.
	WebhookUrl NullableString `json:"webhook_url,omitempty"`
	// The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.
	WebhookFailoverUrl NullableString `json:"webhook_failover_url,omitempty"`
	// Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.
	WebhookApiVersion *string `json:"webhook_api_version,omitempty"`
	// Destinations to which the messaging profile is allowed to send. The elements in the list must be valid ISO 3166-1 alpha-2 country codes. If set to `[\"*\"]`, all destinations will be allowed.  This field is required if the messaging profile doesn't have it defined yet.
	WhitelistedDestinations []string `json:"whitelisted_destinations,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Secret used to authenticate with v1 endpoints.
	V1Secret *string `json:"v1_secret,omitempty"`
	NumberPoolSettings NullableNumberPoolSettings `json:"number_pool_settings,omitempty"`
	UrlShortenerSettings NullableUrlShortenerSettings `json:"url_shortener_settings,omitempty"`
	// The alphanumeric sender ID to use when sending to destinations that require an alphanumeric sender ID.
	AlphaSender NullableString `json:"alpha_sender,omitempty" validate:"regexp=^[A-Za-z0-9 ]{1,11}$"`
	// The maximum amount of money (in USD) that can be spent by this profile before midnight UTC.
	DailySpendLimit *string `json:"daily_spend_limit,omitempty" validate:"regexp=^[0-9]+(?:\\\\.[0-9]+)?$"`
	// Whether to enforce the value configured by `daily_spend_limit`.
	DailySpendLimitEnabled *bool `json:"daily_spend_limit_enabled,omitempty"`
	// enables SMS fallback for MMS messages.
	MmsFallBackToSms *bool `json:"mms_fall_back_to_sms,omitempty"`
	// enables automated resizing of MMS media.
	MmsTranscoding *bool `json:"mms_transcoding,omitempty"`
}

// NewUpdateMessagingProfileRequest instantiates a new UpdateMessagingProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMessagingProfileRequest() *UpdateMessagingProfileRequest {
	this := UpdateMessagingProfileRequest{}
	var mmsFallBackToSms bool = false
	this.MmsFallBackToSms = &mmsFallBackToSms
	var mmsTranscoding bool = false
	this.MmsTranscoding = &mmsTranscoding
	return &this
}

// NewUpdateMessagingProfileRequestWithDefaults instantiates a new UpdateMessagingProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMessagingProfileRequestWithDefaults() *UpdateMessagingProfileRequest {
	this := UpdateMessagingProfileRequest{}
	var mmsFallBackToSms bool = false
	this.MmsFallBackToSms = &mmsFallBackToSms
	var mmsTranscoding bool = false
	this.MmsTranscoding = &mmsTranscoding
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *UpdateMessagingProfileRequest) SetRecordType(v string) {
	o.RecordType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateMessagingProfileRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMessagingProfileRequest) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateMessagingProfileRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessagingProfileRequest) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessagingProfileRequest) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *UpdateMessagingProfileRequest) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}
// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *UpdateMessagingProfileRequest) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *UpdateMessagingProfileRequest) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

// GetWebhookFailoverUrl returns the WebhookFailoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessagingProfileRequest) GetWebhookFailoverUrl() string {
	if o == nil || IsNil(o.WebhookFailoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookFailoverUrl.Get()
}

// GetWebhookFailoverUrlOk returns a tuple with the WebhookFailoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessagingProfileRequest) GetWebhookFailoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookFailoverUrl.Get(), o.WebhookFailoverUrl.IsSet()
}

// HasWebhookFailoverUrl returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasWebhookFailoverUrl() bool {
	if o != nil && o.WebhookFailoverUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookFailoverUrl gets a reference to the given NullableString and assigns it to the WebhookFailoverUrl field.
func (o *UpdateMessagingProfileRequest) SetWebhookFailoverUrl(v string) {
	o.WebhookFailoverUrl.Set(&v)
}
// SetWebhookFailoverUrlNil sets the value for WebhookFailoverUrl to be an explicit nil
func (o *UpdateMessagingProfileRequest) SetWebhookFailoverUrlNil() {
	o.WebhookFailoverUrl.Set(nil)
}

// UnsetWebhookFailoverUrl ensures that no value is present for WebhookFailoverUrl, not even an explicit nil
func (o *UpdateMessagingProfileRequest) UnsetWebhookFailoverUrl() {
	o.WebhookFailoverUrl.Unset()
}

// GetWebhookApiVersion returns the WebhookApiVersion field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetWebhookApiVersion() string {
	if o == nil || IsNil(o.WebhookApiVersion) {
		var ret string
		return ret
	}
	return *o.WebhookApiVersion
}

// GetWebhookApiVersionOk returns a tuple with the WebhookApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetWebhookApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookApiVersion) {
		return nil, false
	}
	return o.WebhookApiVersion, true
}

// HasWebhookApiVersion returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasWebhookApiVersion() bool {
	if o != nil && !IsNil(o.WebhookApiVersion) {
		return true
	}

	return false
}

// SetWebhookApiVersion gets a reference to the given string and assigns it to the WebhookApiVersion field.
func (o *UpdateMessagingProfileRequest) SetWebhookApiVersion(v string) {
	o.WebhookApiVersion = &v
}

// GetWhitelistedDestinations returns the WhitelistedDestinations field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetWhitelistedDestinations() []string {
	if o == nil || IsNil(o.WhitelistedDestinations) {
		var ret []string
		return ret
	}
	return o.WhitelistedDestinations
}

// GetWhitelistedDestinationsOk returns a tuple with the WhitelistedDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetWhitelistedDestinationsOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistedDestinations) {
		return nil, false
	}
	return o.WhitelistedDestinations, true
}

// HasWhitelistedDestinations returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasWhitelistedDestinations() bool {
	if o != nil && !IsNil(o.WhitelistedDestinations) {
		return true
	}

	return false
}

// SetWhitelistedDestinations gets a reference to the given []string and assigns it to the WhitelistedDestinations field.
func (o *UpdateMessagingProfileRequest) SetWhitelistedDestinations(v []string) {
	o.WhitelistedDestinations = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *UpdateMessagingProfileRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *UpdateMessagingProfileRequest) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetV1Secret returns the V1Secret field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetV1Secret() string {
	if o == nil || IsNil(o.V1Secret) {
		var ret string
		return ret
	}
	return *o.V1Secret
}

// GetV1SecretOk returns a tuple with the V1Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetV1SecretOk() (*string, bool) {
	if o == nil || IsNil(o.V1Secret) {
		return nil, false
	}
	return o.V1Secret, true
}

// HasV1Secret returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasV1Secret() bool {
	if o != nil && !IsNil(o.V1Secret) {
		return true
	}

	return false
}

// SetV1Secret gets a reference to the given string and assigns it to the V1Secret field.
func (o *UpdateMessagingProfileRequest) SetV1Secret(v string) {
	o.V1Secret = &v
}

// GetNumberPoolSettings returns the NumberPoolSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessagingProfileRequest) GetNumberPoolSettings() NumberPoolSettings {
	if o == nil || IsNil(o.NumberPoolSettings.Get()) {
		var ret NumberPoolSettings
		return ret
	}
	return *o.NumberPoolSettings.Get()
}

// GetNumberPoolSettingsOk returns a tuple with the NumberPoolSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessagingProfileRequest) GetNumberPoolSettingsOk() (*NumberPoolSettings, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberPoolSettings.Get(), o.NumberPoolSettings.IsSet()
}

// HasNumberPoolSettings returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasNumberPoolSettings() bool {
	if o != nil && o.NumberPoolSettings.IsSet() {
		return true
	}

	return false
}

// SetNumberPoolSettings gets a reference to the given NullableNumberPoolSettings and assigns it to the NumberPoolSettings field.
func (o *UpdateMessagingProfileRequest) SetNumberPoolSettings(v NumberPoolSettings) {
	o.NumberPoolSettings.Set(&v)
}
// SetNumberPoolSettingsNil sets the value for NumberPoolSettings to be an explicit nil
func (o *UpdateMessagingProfileRequest) SetNumberPoolSettingsNil() {
	o.NumberPoolSettings.Set(nil)
}

// UnsetNumberPoolSettings ensures that no value is present for NumberPoolSettings, not even an explicit nil
func (o *UpdateMessagingProfileRequest) UnsetNumberPoolSettings() {
	o.NumberPoolSettings.Unset()
}

// GetUrlShortenerSettings returns the UrlShortenerSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessagingProfileRequest) GetUrlShortenerSettings() UrlShortenerSettings {
	if o == nil || IsNil(o.UrlShortenerSettings.Get()) {
		var ret UrlShortenerSettings
		return ret
	}
	return *o.UrlShortenerSettings.Get()
}

// GetUrlShortenerSettingsOk returns a tuple with the UrlShortenerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessagingProfileRequest) GetUrlShortenerSettingsOk() (*UrlShortenerSettings, bool) {
	if o == nil {
		return nil, false
	}
	return o.UrlShortenerSettings.Get(), o.UrlShortenerSettings.IsSet()
}

// HasUrlShortenerSettings returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasUrlShortenerSettings() bool {
	if o != nil && o.UrlShortenerSettings.IsSet() {
		return true
	}

	return false
}

// SetUrlShortenerSettings gets a reference to the given NullableUrlShortenerSettings and assigns it to the UrlShortenerSettings field.
func (o *UpdateMessagingProfileRequest) SetUrlShortenerSettings(v UrlShortenerSettings) {
	o.UrlShortenerSettings.Set(&v)
}
// SetUrlShortenerSettingsNil sets the value for UrlShortenerSettings to be an explicit nil
func (o *UpdateMessagingProfileRequest) SetUrlShortenerSettingsNil() {
	o.UrlShortenerSettings.Set(nil)
}

// UnsetUrlShortenerSettings ensures that no value is present for UrlShortenerSettings, not even an explicit nil
func (o *UpdateMessagingProfileRequest) UnsetUrlShortenerSettings() {
	o.UrlShortenerSettings.Unset()
}

// GetAlphaSender returns the AlphaSender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessagingProfileRequest) GetAlphaSender() string {
	if o == nil || IsNil(o.AlphaSender.Get()) {
		var ret string
		return ret
	}
	return *o.AlphaSender.Get()
}

// GetAlphaSenderOk returns a tuple with the AlphaSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessagingProfileRequest) GetAlphaSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlphaSender.Get(), o.AlphaSender.IsSet()
}

// HasAlphaSender returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasAlphaSender() bool {
	if o != nil && o.AlphaSender.IsSet() {
		return true
	}

	return false
}

// SetAlphaSender gets a reference to the given NullableString and assigns it to the AlphaSender field.
func (o *UpdateMessagingProfileRequest) SetAlphaSender(v string) {
	o.AlphaSender.Set(&v)
}
// SetAlphaSenderNil sets the value for AlphaSender to be an explicit nil
func (o *UpdateMessagingProfileRequest) SetAlphaSenderNil() {
	o.AlphaSender.Set(nil)
}

// UnsetAlphaSender ensures that no value is present for AlphaSender, not even an explicit nil
func (o *UpdateMessagingProfileRequest) UnsetAlphaSender() {
	o.AlphaSender.Unset()
}

// GetDailySpendLimit returns the DailySpendLimit field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetDailySpendLimit() string {
	if o == nil || IsNil(o.DailySpendLimit) {
		var ret string
		return ret
	}
	return *o.DailySpendLimit
}

// GetDailySpendLimitOk returns a tuple with the DailySpendLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetDailySpendLimitOk() (*string, bool) {
	if o == nil || IsNil(o.DailySpendLimit) {
		return nil, false
	}
	return o.DailySpendLimit, true
}

// HasDailySpendLimit returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasDailySpendLimit() bool {
	if o != nil && !IsNil(o.DailySpendLimit) {
		return true
	}

	return false
}

// SetDailySpendLimit gets a reference to the given string and assigns it to the DailySpendLimit field.
func (o *UpdateMessagingProfileRequest) SetDailySpendLimit(v string) {
	o.DailySpendLimit = &v
}

// GetDailySpendLimitEnabled returns the DailySpendLimitEnabled field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetDailySpendLimitEnabled() bool {
	if o == nil || IsNil(o.DailySpendLimitEnabled) {
		var ret bool
		return ret
	}
	return *o.DailySpendLimitEnabled
}

// GetDailySpendLimitEnabledOk returns a tuple with the DailySpendLimitEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetDailySpendLimitEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DailySpendLimitEnabled) {
		return nil, false
	}
	return o.DailySpendLimitEnabled, true
}

// HasDailySpendLimitEnabled returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasDailySpendLimitEnabled() bool {
	if o != nil && !IsNil(o.DailySpendLimitEnabled) {
		return true
	}

	return false
}

// SetDailySpendLimitEnabled gets a reference to the given bool and assigns it to the DailySpendLimitEnabled field.
func (o *UpdateMessagingProfileRequest) SetDailySpendLimitEnabled(v bool) {
	o.DailySpendLimitEnabled = &v
}

// GetMmsFallBackToSms returns the MmsFallBackToSms field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetMmsFallBackToSms() bool {
	if o == nil || IsNil(o.MmsFallBackToSms) {
		var ret bool
		return ret
	}
	return *o.MmsFallBackToSms
}

// GetMmsFallBackToSmsOk returns a tuple with the MmsFallBackToSms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetMmsFallBackToSmsOk() (*bool, bool) {
	if o == nil || IsNil(o.MmsFallBackToSms) {
		return nil, false
	}
	return o.MmsFallBackToSms, true
}

// HasMmsFallBackToSms returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasMmsFallBackToSms() bool {
	if o != nil && !IsNil(o.MmsFallBackToSms) {
		return true
	}

	return false
}

// SetMmsFallBackToSms gets a reference to the given bool and assigns it to the MmsFallBackToSms field.
func (o *UpdateMessagingProfileRequest) SetMmsFallBackToSms(v bool) {
	o.MmsFallBackToSms = &v
}

// GetMmsTranscoding returns the MmsTranscoding field value if set, zero value otherwise.
func (o *UpdateMessagingProfileRequest) GetMmsTranscoding() bool {
	if o == nil || IsNil(o.MmsTranscoding) {
		var ret bool
		return ret
	}
	return *o.MmsTranscoding
}

// GetMmsTranscodingOk returns a tuple with the MmsTranscoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessagingProfileRequest) GetMmsTranscodingOk() (*bool, bool) {
	if o == nil || IsNil(o.MmsTranscoding) {
		return nil, false
	}
	return o.MmsTranscoding, true
}

// HasMmsTranscoding returns a boolean if a field has been set.
func (o *UpdateMessagingProfileRequest) HasMmsTranscoding() bool {
	if o != nil && !IsNil(o.MmsTranscoding) {
		return true
	}

	return false
}

// SetMmsTranscoding gets a reference to the given bool and assigns it to the MmsTranscoding field.
func (o *UpdateMessagingProfileRequest) SetMmsTranscoding(v bool) {
	o.MmsTranscoding = &v
}

func (o UpdateMessagingProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMessagingProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhook_url"] = o.WebhookUrl.Get()
	}
	if o.WebhookFailoverUrl.IsSet() {
		toSerialize["webhook_failover_url"] = o.WebhookFailoverUrl.Get()
	}
	if !IsNil(o.WebhookApiVersion) {
		toSerialize["webhook_api_version"] = o.WebhookApiVersion
	}
	if !IsNil(o.WhitelistedDestinations) {
		toSerialize["whitelisted_destinations"] = o.WhitelistedDestinations
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.V1Secret) {
		toSerialize["v1_secret"] = o.V1Secret
	}
	if o.NumberPoolSettings.IsSet() {
		toSerialize["number_pool_settings"] = o.NumberPoolSettings.Get()
	}
	if o.UrlShortenerSettings.IsSet() {
		toSerialize["url_shortener_settings"] = o.UrlShortenerSettings.Get()
	}
	if o.AlphaSender.IsSet() {
		toSerialize["alpha_sender"] = o.AlphaSender.Get()
	}
	if !IsNil(o.DailySpendLimit) {
		toSerialize["daily_spend_limit"] = o.DailySpendLimit
	}
	if !IsNil(o.DailySpendLimitEnabled) {
		toSerialize["daily_spend_limit_enabled"] = o.DailySpendLimitEnabled
	}
	if !IsNil(o.MmsFallBackToSms) {
		toSerialize["mms_fall_back_to_sms"] = o.MmsFallBackToSms
	}
	if !IsNil(o.MmsTranscoding) {
		toSerialize["mms_transcoding"] = o.MmsTranscoding
	}
	return toSerialize, nil
}

type NullableUpdateMessagingProfileRequest struct {
	value *UpdateMessagingProfileRequest
	isSet bool
}

func (v NullableUpdateMessagingProfileRequest) Get() *UpdateMessagingProfileRequest {
	return v.value
}

func (v *NullableUpdateMessagingProfileRequest) Set(val *UpdateMessagingProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMessagingProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMessagingProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMessagingProfileRequest(val *UpdateMessagingProfileRequest) *NullableUpdateMessagingProfileRequest {
	return &NullableUpdateMessagingProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateMessagingProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMessagingProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



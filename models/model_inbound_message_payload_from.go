/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the InboundMessagePayloadFrom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InboundMessagePayloadFrom{}

// InboundMessagePayloadFrom struct for InboundMessagePayloadFrom
type InboundMessagePayloadFrom struct {
	// Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code).
	PhoneNumber *string `json:"phone_number,omitempty"`
	Status *string `json:"status,omitempty"`
	// The carrier of the sender.
	Carrier *string `json:"carrier,omitempty"`
	// The line-type of the sender.
	LineType *string `json:"line_type,omitempty"`
}

// NewInboundMessagePayloadFrom instantiates a new InboundMessagePayloadFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInboundMessagePayloadFrom() *InboundMessagePayloadFrom {
	this := InboundMessagePayloadFrom{}
	return &this
}

// NewInboundMessagePayloadFromWithDefaults instantiates a new InboundMessagePayloadFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInboundMessagePayloadFromWithDefaults() *InboundMessagePayloadFrom {
	this := InboundMessagePayloadFrom{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *InboundMessagePayloadFrom) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayloadFrom) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *InboundMessagePayloadFrom) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *InboundMessagePayloadFrom) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InboundMessagePayloadFrom) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayloadFrom) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InboundMessagePayloadFrom) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InboundMessagePayloadFrom) SetStatus(v string) {
	o.Status = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *InboundMessagePayloadFrom) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayloadFrom) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *InboundMessagePayloadFrom) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *InboundMessagePayloadFrom) SetCarrier(v string) {
	o.Carrier = &v
}

// GetLineType returns the LineType field value if set, zero value otherwise.
func (o *InboundMessagePayloadFrom) GetLineType() string {
	if o == nil || IsNil(o.LineType) {
		var ret string
		return ret
	}
	return *o.LineType
}

// GetLineTypeOk returns a tuple with the LineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundMessagePayloadFrom) GetLineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LineType) {
		return nil, false
	}
	return o.LineType, true
}

// HasLineType returns a boolean if a field has been set.
func (o *InboundMessagePayloadFrom) HasLineType() bool {
	if o != nil && !IsNil(o.LineType) {
		return true
	}

	return false
}

// SetLineType gets a reference to the given string and assigns it to the LineType field.
func (o *InboundMessagePayloadFrom) SetLineType(v string) {
	o.LineType = &v
}

func (o InboundMessagePayloadFrom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InboundMessagePayloadFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	if !IsNil(o.LineType) {
		toSerialize["line_type"] = o.LineType
	}
	return toSerialize, nil
}

type NullableInboundMessagePayloadFrom struct {
	value *InboundMessagePayloadFrom
	isSet bool
}

func (v NullableInboundMessagePayloadFrom) Get() *InboundMessagePayloadFrom {
	return v.value
}

func (v *NullableInboundMessagePayloadFrom) Set(val *InboundMessagePayloadFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableInboundMessagePayloadFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableInboundMessagePayloadFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInboundMessagePayloadFrom(val *InboundMessagePayloadFrom) *NullableInboundMessagePayloadFrom {
	return &NullableInboundMessagePayloadFrom{value: val, isSet: true}
}

func (v NullableInboundMessagePayloadFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInboundMessagePayloadFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



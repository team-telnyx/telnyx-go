/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdateAuthenticationProviderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAuthenticationProviderRequest{}

// UpdateAuthenticationProviderRequest struct for UpdateAuthenticationProviderRequest
type UpdateAuthenticationProviderRequest struct {
	// The name associated with the authentication provider.
	Name *string `json:"name,omitempty"`
	// The short name associated with the authentication provider. This must be unique and URL-friendly, as it's going to be part of the login URL.
	ShortName *string `json:"short_name,omitempty"`
	// The active status of the authentication provider
	Active *bool `json:"active,omitempty"`
	Settings *Settings `json:"settings,omitempty"`
	// The URL for the identity provider metadata file to populate the settings automatically. If the settings attribute is provided, that will be used instead.
	SettingsUrl *string `json:"settings_url,omitempty"`
}

// NewUpdateAuthenticationProviderRequest instantiates a new UpdateAuthenticationProviderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAuthenticationProviderRequest() *UpdateAuthenticationProviderRequest {
	this := UpdateAuthenticationProviderRequest{}
	var active bool = true
	this.Active = &active
	return &this
}

// NewUpdateAuthenticationProviderRequestWithDefaults instantiates a new UpdateAuthenticationProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAuthenticationProviderRequestWithDefaults() *UpdateAuthenticationProviderRequest {
	this := UpdateAuthenticationProviderRequest{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAuthenticationProviderRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAuthenticationProviderRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAuthenticationProviderRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAuthenticationProviderRequest) SetName(v string) {
	o.Name = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *UpdateAuthenticationProviderRequest) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAuthenticationProviderRequest) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *UpdateAuthenticationProviderRequest) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *UpdateAuthenticationProviderRequest) SetShortName(v string) {
	o.ShortName = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *UpdateAuthenticationProviderRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAuthenticationProviderRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *UpdateAuthenticationProviderRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *UpdateAuthenticationProviderRequest) SetActive(v bool) {
	o.Active = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *UpdateAuthenticationProviderRequest) GetSettings() Settings {
	if o == nil || IsNil(o.Settings) {
		var ret Settings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAuthenticationProviderRequest) GetSettingsOk() (*Settings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *UpdateAuthenticationProviderRequest) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given Settings and assigns it to the Settings field.
func (o *UpdateAuthenticationProviderRequest) SetSettings(v Settings) {
	o.Settings = &v
}

// GetSettingsUrl returns the SettingsUrl field value if set, zero value otherwise.
func (o *UpdateAuthenticationProviderRequest) GetSettingsUrl() string {
	if o == nil || IsNil(o.SettingsUrl) {
		var ret string
		return ret
	}
	return *o.SettingsUrl
}

// GetSettingsUrlOk returns a tuple with the SettingsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAuthenticationProviderRequest) GetSettingsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsUrl) {
		return nil, false
	}
	return o.SettingsUrl, true
}

// HasSettingsUrl returns a boolean if a field has been set.
func (o *UpdateAuthenticationProviderRequest) HasSettingsUrl() bool {
	if o != nil && !IsNil(o.SettingsUrl) {
		return true
	}

	return false
}

// SetSettingsUrl gets a reference to the given string and assigns it to the SettingsUrl field.
func (o *UpdateAuthenticationProviderRequest) SetSettingsUrl(v string) {
	o.SettingsUrl = &v
}

func (o UpdateAuthenticationProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAuthenticationProviderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ShortName) {
		toSerialize["short_name"] = o.ShortName
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.SettingsUrl) {
		toSerialize["settings_url"] = o.SettingsUrl
	}
	return toSerialize, nil
}

type NullableUpdateAuthenticationProviderRequest struct {
	value *UpdateAuthenticationProviderRequest
	isSet bool
}

func (v NullableUpdateAuthenticationProviderRequest) Get() *UpdateAuthenticationProviderRequest {
	return v.value
}

func (v *NullableUpdateAuthenticationProviderRequest) Set(val *UpdateAuthenticationProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAuthenticationProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAuthenticationProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAuthenticationProviderRequest(val *UpdateAuthenticationProviderRequest) *NullableUpdateAuthenticationProviderRequest {
	return &NullableUpdateAuthenticationProviderRequest{value: val, isSet: true}
}

func (v NullableUpdateAuthenticationProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAuthenticationProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



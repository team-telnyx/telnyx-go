/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TnReleaseEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TnReleaseEntry{}

// TnReleaseEntry struct for TnReleaseEntry
type TnReleaseEntry struct {
	// Phone number in E164 format.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Phone number ID from the Telnyx API.
	NumberId *string `json:"number_id,omitempty"`
}

// NewTnReleaseEntry instantiates a new TnReleaseEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTnReleaseEntry() *TnReleaseEntry {
	this := TnReleaseEntry{}
	return &this
}

// NewTnReleaseEntryWithDefaults instantiates a new TnReleaseEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTnReleaseEntryWithDefaults() *TnReleaseEntry {
	this := TnReleaseEntry{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *TnReleaseEntry) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnReleaseEntry) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *TnReleaseEntry) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *TnReleaseEntry) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetNumberId returns the NumberId field value if set, zero value otherwise.
func (o *TnReleaseEntry) GetNumberId() string {
	if o == nil || IsNil(o.NumberId) {
		var ret string
		return ret
	}
	return *o.NumberId
}

// GetNumberIdOk returns a tuple with the NumberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnReleaseEntry) GetNumberIdOk() (*string, bool) {
	if o == nil || IsNil(o.NumberId) {
		return nil, false
	}
	return o.NumberId, true
}

// HasNumberId returns a boolean if a field has been set.
func (o *TnReleaseEntry) HasNumberId() bool {
	if o != nil && !IsNil(o.NumberId) {
		return true
	}

	return false
}

// SetNumberId gets a reference to the given string and assigns it to the NumberId field.
func (o *TnReleaseEntry) SetNumberId(v string) {
	o.NumberId = &v
}

func (o TnReleaseEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TnReleaseEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.NumberId) {
		toSerialize["number_id"] = o.NumberId
	}
	return toSerialize, nil
}

type NullableTnReleaseEntry struct {
	value *TnReleaseEntry
	isSet bool
}

func (v NullableTnReleaseEntry) Get() *TnReleaseEntry {
	return v.value
}

func (v *NullableTnReleaseEntry) Set(val *TnReleaseEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTnReleaseEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTnReleaseEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTnReleaseEntry(val *TnReleaseEntry) *NullableTnReleaseEntry {
	return &NullableTnReleaseEntry{value: val, isSet: true}
}

func (v NullableTnReleaseEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTnReleaseEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



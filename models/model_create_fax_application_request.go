/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFaxApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFaxApplicationRequest{}

// CreateFaxApplicationRequest struct for CreateFaxApplicationRequest
type CreateFaxApplicationRequest struct {
	// A user-assigned name to help manage the application.
	ApplicationName string `json:"application_name"`
	// Specifies whether the connection can be used.
	Active *bool `json:"active,omitempty"`
	AnchorsiteOverride *AnchorsiteOverride `json:"anchorsite_override,omitempty"`
	// The URL where webhooks related to this connection will be sent. Must include a scheme, such as 'https'.
	WebhookEventUrl string `json:"webhook_event_url"`
	// The failover URL where webhooks related to this connection will be sent if sending to the primary URL fails. Must include a scheme, such as 'https'.
	WebhookEventFailoverUrl NullableString `json:"webhook_event_failover_url,omitempty"`
	// Specifies how many seconds to wait before timing out a webhook.
	WebhookTimeoutSecs NullableInt32 `json:"webhook_timeout_secs,omitempty"`
	// Tags associated with the Fax Application.
	Tags []string `json:"tags,omitempty"`
	Inbound *CreateFaxApplicationRequestInbound `json:"inbound,omitempty"`
	Outbound *CreateExternalConnectionRequestOutbound `json:"outbound,omitempty"`
}

type _CreateFaxApplicationRequest CreateFaxApplicationRequest

// NewCreateFaxApplicationRequest instantiates a new CreateFaxApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFaxApplicationRequest(applicationName string, webhookEventUrl string) *CreateFaxApplicationRequest {
	this := CreateFaxApplicationRequest{}
	this.ApplicationName = applicationName
	var active bool = true
	this.Active = &active
	var anchorsiteOverride AnchorsiteOverride = LATENCY
	this.AnchorsiteOverride = &anchorsiteOverride
	this.WebhookEventUrl = webhookEventUrl
	var webhookEventFailoverUrl string = ""
	this.WebhookEventFailoverUrl = *NewNullableString(&webhookEventFailoverUrl)
	return &this
}

// NewCreateFaxApplicationRequestWithDefaults instantiates a new CreateFaxApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFaxApplicationRequestWithDefaults() *CreateFaxApplicationRequest {
	this := CreateFaxApplicationRequest{}
	var active bool = true
	this.Active = &active
	var anchorsiteOverride AnchorsiteOverride = LATENCY
	this.AnchorsiteOverride = &anchorsiteOverride
	var webhookEventFailoverUrl string = ""
	this.WebhookEventFailoverUrl = *NewNullableString(&webhookEventFailoverUrl)
	return &this
}

// GetApplicationName returns the ApplicationName field value
func (o *CreateFaxApplicationRequest) GetApplicationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetApplicationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationName, true
}

// SetApplicationName sets field value
func (o *CreateFaxApplicationRequest) SetApplicationName(v string) {
	o.ApplicationName = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CreateFaxApplicationRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CreateFaxApplicationRequest) SetActive(v bool) {
	o.Active = &v
}

// GetAnchorsiteOverride returns the AnchorsiteOverride field value if set, zero value otherwise.
func (o *CreateFaxApplicationRequest) GetAnchorsiteOverride() AnchorsiteOverride {
	if o == nil || IsNil(o.AnchorsiteOverride) {
		var ret AnchorsiteOverride
		return ret
	}
	return *o.AnchorsiteOverride
}

// GetAnchorsiteOverrideOk returns a tuple with the AnchorsiteOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetAnchorsiteOverrideOk() (*AnchorsiteOverride, bool) {
	if o == nil || IsNil(o.AnchorsiteOverride) {
		return nil, false
	}
	return o.AnchorsiteOverride, true
}

// HasAnchorsiteOverride returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasAnchorsiteOverride() bool {
	if o != nil && !IsNil(o.AnchorsiteOverride) {
		return true
	}

	return false
}

// SetAnchorsiteOverride gets a reference to the given AnchorsiteOverride and assigns it to the AnchorsiteOverride field.
func (o *CreateFaxApplicationRequest) SetAnchorsiteOverride(v AnchorsiteOverride) {
	o.AnchorsiteOverride = &v
}

// GetWebhookEventUrl returns the WebhookEventUrl field value
func (o *CreateFaxApplicationRequest) GetWebhookEventUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookEventUrl
}

// GetWebhookEventUrlOk returns a tuple with the WebhookEventUrl field value
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetWebhookEventUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookEventUrl, true
}

// SetWebhookEventUrl sets field value
func (o *CreateFaxApplicationRequest) SetWebhookEventUrl(v string) {
	o.WebhookEventUrl = v
}

// GetWebhookEventFailoverUrl returns the WebhookEventFailoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFaxApplicationRequest) GetWebhookEventFailoverUrl() string {
	if o == nil || IsNil(o.WebhookEventFailoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookEventFailoverUrl.Get()
}

// GetWebhookEventFailoverUrlOk returns a tuple with the WebhookEventFailoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFaxApplicationRequest) GetWebhookEventFailoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookEventFailoverUrl.Get(), o.WebhookEventFailoverUrl.IsSet()
}

// HasWebhookEventFailoverUrl returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasWebhookEventFailoverUrl() bool {
	if o != nil && o.WebhookEventFailoverUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookEventFailoverUrl gets a reference to the given NullableString and assigns it to the WebhookEventFailoverUrl field.
func (o *CreateFaxApplicationRequest) SetWebhookEventFailoverUrl(v string) {
	o.WebhookEventFailoverUrl.Set(&v)
}
// SetWebhookEventFailoverUrlNil sets the value for WebhookEventFailoverUrl to be an explicit nil
func (o *CreateFaxApplicationRequest) SetWebhookEventFailoverUrlNil() {
	o.WebhookEventFailoverUrl.Set(nil)
}

// UnsetWebhookEventFailoverUrl ensures that no value is present for WebhookEventFailoverUrl, not even an explicit nil
func (o *CreateFaxApplicationRequest) UnsetWebhookEventFailoverUrl() {
	o.WebhookEventFailoverUrl.Unset()
}

// GetWebhookTimeoutSecs returns the WebhookTimeoutSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFaxApplicationRequest) GetWebhookTimeoutSecs() int32 {
	if o == nil || IsNil(o.WebhookTimeoutSecs.Get()) {
		var ret int32
		return ret
	}
	return *o.WebhookTimeoutSecs.Get()
}

// GetWebhookTimeoutSecsOk returns a tuple with the WebhookTimeoutSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFaxApplicationRequest) GetWebhookTimeoutSecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookTimeoutSecs.Get(), o.WebhookTimeoutSecs.IsSet()
}

// HasWebhookTimeoutSecs returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasWebhookTimeoutSecs() bool {
	if o != nil && o.WebhookTimeoutSecs.IsSet() {
		return true
	}

	return false
}

// SetWebhookTimeoutSecs gets a reference to the given NullableInt32 and assigns it to the WebhookTimeoutSecs field.
func (o *CreateFaxApplicationRequest) SetWebhookTimeoutSecs(v int32) {
	o.WebhookTimeoutSecs.Set(&v)
}
// SetWebhookTimeoutSecsNil sets the value for WebhookTimeoutSecs to be an explicit nil
func (o *CreateFaxApplicationRequest) SetWebhookTimeoutSecsNil() {
	o.WebhookTimeoutSecs.Set(nil)
}

// UnsetWebhookTimeoutSecs ensures that no value is present for WebhookTimeoutSecs, not even an explicit nil
func (o *CreateFaxApplicationRequest) UnsetWebhookTimeoutSecs() {
	o.WebhookTimeoutSecs.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateFaxApplicationRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateFaxApplicationRequest) SetTags(v []string) {
	o.Tags = v
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *CreateFaxApplicationRequest) GetInbound() CreateFaxApplicationRequestInbound {
	if o == nil || IsNil(o.Inbound) {
		var ret CreateFaxApplicationRequestInbound
		return ret
	}
	return *o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetInboundOk() (*CreateFaxApplicationRequestInbound, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given CreateFaxApplicationRequestInbound and assigns it to the Inbound field.
func (o *CreateFaxApplicationRequest) SetInbound(v CreateFaxApplicationRequestInbound) {
	o.Inbound = &v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *CreateFaxApplicationRequest) GetOutbound() CreateExternalConnectionRequestOutbound {
	if o == nil || IsNil(o.Outbound) {
		var ret CreateExternalConnectionRequestOutbound
		return ret
	}
	return *o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFaxApplicationRequest) GetOutboundOk() (*CreateExternalConnectionRequestOutbound, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *CreateFaxApplicationRequest) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given CreateExternalConnectionRequestOutbound and assigns it to the Outbound field.
func (o *CreateFaxApplicationRequest) SetOutbound(v CreateExternalConnectionRequestOutbound) {
	o.Outbound = &v
}

func (o CreateFaxApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFaxApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["application_name"] = o.ApplicationName
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AnchorsiteOverride) {
		toSerialize["anchorsite_override"] = o.AnchorsiteOverride
	}
	toSerialize["webhook_event_url"] = o.WebhookEventUrl
	if o.WebhookEventFailoverUrl.IsSet() {
		toSerialize["webhook_event_failover_url"] = o.WebhookEventFailoverUrl.Get()
	}
	if o.WebhookTimeoutSecs.IsSet() {
		toSerialize["webhook_timeout_secs"] = o.WebhookTimeoutSecs.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}
	return toSerialize, nil
}

func (o *CreateFaxApplicationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"application_name",
		"webhook_event_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFaxApplicationRequest := _CreateFaxApplicationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFaxApplicationRequest)

	if err != nil {
		return err
	}

	*o = CreateFaxApplicationRequest(varCreateFaxApplicationRequest)

	return err
}

type NullableCreateFaxApplicationRequest struct {
	value *CreateFaxApplicationRequest
	isSet bool
}

func (v NullableCreateFaxApplicationRequest) Get() *CreateFaxApplicationRequest {
	return v.value
}

func (v *NullableCreateFaxApplicationRequest) Set(val *CreateFaxApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFaxApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFaxApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFaxApplicationRequest(val *CreateFaxApplicationRequest) *NullableCreateFaxApplicationRequest {
	return &NullableCreateFaxApplicationRequest{value: val, isSet: true}
}

func (v NullableCreateFaxApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFaxApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



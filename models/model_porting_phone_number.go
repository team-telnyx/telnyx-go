/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingPhoneNumber{}

// PortingPhoneNumber struct for PortingPhoneNumber
type PortingPhoneNumber struct {
	// The current status of the porting order
	PortingOrderStatus *string `json:"porting_order_status,omitempty"`
	// The type of the phone number
	PhoneNumberType *string `json:"phone_number_type,omitempty"`
	// E164 formatted phone number
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Identifies the associated port request
	PortingOrderId *string `json:"porting_order_id,omitempty"`
	// A key to reference this porting order when contacting Telnyx customer support
	SupportKey *string `json:"support_key,omitempty"`
	ActivationStatus *PortingOrderActivationStatus `json:"activation_status,omitempty"`
	PortabilityStatus *PortabilityStatus `json:"portability_status,omitempty"`
	// The current status of the requirements in a INTL porting order
	RequirementsStatus *string `json:"requirements_status,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
}

// NewPortingPhoneNumber instantiates a new PortingPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingPhoneNumber() *PortingPhoneNumber {
	this := PortingPhoneNumber{}
	return &this
}

// NewPortingPhoneNumberWithDefaults instantiates a new PortingPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingPhoneNumberWithDefaults() *PortingPhoneNumber {
	this := PortingPhoneNumber{}
	return &this
}

// GetPortingOrderStatus returns the PortingOrderStatus field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetPortingOrderStatus() string {
	if o == nil || IsNil(o.PortingOrderStatus) {
		var ret string
		return ret
	}
	return *o.PortingOrderStatus
}

// GetPortingOrderStatusOk returns a tuple with the PortingOrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetPortingOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PortingOrderStatus) {
		return nil, false
	}
	return o.PortingOrderStatus, true
}

// HasPortingOrderStatus returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasPortingOrderStatus() bool {
	if o != nil && !IsNil(o.PortingOrderStatus) {
		return true
	}

	return false
}

// SetPortingOrderStatus gets a reference to the given string and assigns it to the PortingOrderStatus field.
func (o *PortingPhoneNumber) SetPortingOrderStatus(v string) {
	o.PortingOrderStatus = &v
}

// GetPhoneNumberType returns the PhoneNumberType field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetPhoneNumberType() string {
	if o == nil || IsNil(o.PhoneNumberType) {
		var ret string
		return ret
	}
	return *o.PhoneNumberType
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberType) {
		return nil, false
	}
	return o.PhoneNumberType, true
}

// HasPhoneNumberType returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasPhoneNumberType() bool {
	if o != nil && !IsNil(o.PhoneNumberType) {
		return true
	}

	return false
}

// SetPhoneNumberType gets a reference to the given string and assigns it to the PhoneNumberType field.
func (o *PortingPhoneNumber) SetPhoneNumberType(v string) {
	o.PhoneNumberType = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *PortingPhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPortingOrderId returns the PortingOrderId field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetPortingOrderId() string {
	if o == nil || IsNil(o.PortingOrderId) {
		var ret string
		return ret
	}
	return *o.PortingOrderId
}

// GetPortingOrderIdOk returns a tuple with the PortingOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetPortingOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortingOrderId) {
		return nil, false
	}
	return o.PortingOrderId, true
}

// HasPortingOrderId returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasPortingOrderId() bool {
	if o != nil && !IsNil(o.PortingOrderId) {
		return true
	}

	return false
}

// SetPortingOrderId gets a reference to the given string and assigns it to the PortingOrderId field.
func (o *PortingPhoneNumber) SetPortingOrderId(v string) {
	o.PortingOrderId = &v
}

// GetSupportKey returns the SupportKey field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetSupportKey() string {
	if o == nil || IsNil(o.SupportKey) {
		var ret string
		return ret
	}
	return *o.SupportKey
}

// GetSupportKeyOk returns a tuple with the SupportKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetSupportKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SupportKey) {
		return nil, false
	}
	return o.SupportKey, true
}

// HasSupportKey returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasSupportKey() bool {
	if o != nil && !IsNil(o.SupportKey) {
		return true
	}

	return false
}

// SetSupportKey gets a reference to the given string and assigns it to the SupportKey field.
func (o *PortingPhoneNumber) SetSupportKey(v string) {
	o.SupportKey = &v
}

// GetActivationStatus returns the ActivationStatus field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetActivationStatus() PortingOrderActivationStatus {
	if o == nil || IsNil(o.ActivationStatus) {
		var ret PortingOrderActivationStatus
		return ret
	}
	return *o.ActivationStatus
}

// GetActivationStatusOk returns a tuple with the ActivationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetActivationStatusOk() (*PortingOrderActivationStatus, bool) {
	if o == nil || IsNil(o.ActivationStatus) {
		return nil, false
	}
	return o.ActivationStatus, true
}

// HasActivationStatus returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasActivationStatus() bool {
	if o != nil && !IsNil(o.ActivationStatus) {
		return true
	}

	return false
}

// SetActivationStatus gets a reference to the given PortingOrderActivationStatus and assigns it to the ActivationStatus field.
func (o *PortingPhoneNumber) SetActivationStatus(v PortingOrderActivationStatus) {
	o.ActivationStatus = &v
}

// GetPortabilityStatus returns the PortabilityStatus field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetPortabilityStatus() PortabilityStatus {
	if o == nil || IsNil(o.PortabilityStatus) {
		var ret PortabilityStatus
		return ret
	}
	return *o.PortabilityStatus
}

// GetPortabilityStatusOk returns a tuple with the PortabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetPortabilityStatusOk() (*PortabilityStatus, bool) {
	if o == nil || IsNil(o.PortabilityStatus) {
		return nil, false
	}
	return o.PortabilityStatus, true
}

// HasPortabilityStatus returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasPortabilityStatus() bool {
	if o != nil && !IsNil(o.PortabilityStatus) {
		return true
	}

	return false
}

// SetPortabilityStatus gets a reference to the given PortabilityStatus and assigns it to the PortabilityStatus field.
func (o *PortingPhoneNumber) SetPortabilityStatus(v PortabilityStatus) {
	o.PortabilityStatus = &v
}

// GetRequirementsStatus returns the RequirementsStatus field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetRequirementsStatus() string {
	if o == nil || IsNil(o.RequirementsStatus) {
		var ret string
		return ret
	}
	return *o.RequirementsStatus
}

// GetRequirementsStatusOk returns a tuple with the RequirementsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetRequirementsStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RequirementsStatus) {
		return nil, false
	}
	return o.RequirementsStatus, true
}

// HasRequirementsStatus returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasRequirementsStatus() bool {
	if o != nil && !IsNil(o.RequirementsStatus) {
		return true
	}

	return false
}

// SetRequirementsStatus gets a reference to the given string and assigns it to the RequirementsStatus field.
func (o *PortingPhoneNumber) SetRequirementsStatus(v string) {
	o.RequirementsStatus = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingPhoneNumber) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingPhoneNumber) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingPhoneNumber) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingPhoneNumber) SetRecordType(v string) {
	o.RecordType = &v
}

func (o PortingPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PortingOrderStatus) {
		toSerialize["porting_order_status"] = o.PortingOrderStatus
	}
	if !IsNil(o.PhoneNumberType) {
		toSerialize["phone_number_type"] = o.PhoneNumberType
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.PortingOrderId) {
		toSerialize["porting_order_id"] = o.PortingOrderId
	}
	if !IsNil(o.SupportKey) {
		toSerialize["support_key"] = o.SupportKey
	}
	if !IsNil(o.ActivationStatus) {
		toSerialize["activation_status"] = o.ActivationStatus
	}
	if !IsNil(o.PortabilityStatus) {
		toSerialize["portability_status"] = o.PortabilityStatus
	}
	if !IsNil(o.RequirementsStatus) {
		toSerialize["requirements_status"] = o.RequirementsStatus
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullablePortingPhoneNumber struct {
	value *PortingPhoneNumber
	isSet bool
}

func (v NullablePortingPhoneNumber) Get() *PortingPhoneNumber {
	return v.value
}

func (v *NullablePortingPhoneNumber) Set(val *PortingPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingPhoneNumber(val *PortingPhoneNumber) *NullablePortingPhoneNumber {
	return &NullablePortingPhoneNumber{value: val, isSet: true}
}

func (v NullablePortingPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



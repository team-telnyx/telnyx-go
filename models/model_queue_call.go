/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueueCall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueCall{}

// QueueCall struct for QueueCall
type QueueCall struct {
	RecordType string `json:"record_type"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call
	CallSessionId string `json:"call_session_id"`
	// ID that is unique to the call and can be used to correlate webhook events
	CallLegId string `json:"call_leg_id"`
	// Unique identifier and token for controlling the call.
	CallControlId string `json:"call_control_id"`
	// Call Control App ID (formerly Telnyx connection ID) used in the call.
	ConnectionId string `json:"connection_id"`
	// Number or SIP URI placing the call.
	From string `json:"from"`
	// Destination number or SIP URI of the call.
	To string `json:"to"`
	// ISO 8601 formatted date of when the call was put in the queue
	EnqueuedAt string `json:"enqueued_at"`
	// The time the call has been waiting in the queue, given in seconds
	WaitTimeSecs int32 `json:"wait_time_secs"`
	// Current position of the call in the queue
	QueuePosition int32 `json:"queue_position"`
	// Unique identifier of the queue the call is in.
	QueueId string `json:"queue_id"`
}

type _QueueCall QueueCall

// NewQueueCall instantiates a new QueueCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueCall(recordType string, callSessionId string, callLegId string, callControlId string, connectionId string, from string, to string, enqueuedAt string, waitTimeSecs int32, queuePosition int32, queueId string) *QueueCall {
	this := QueueCall{}
	this.RecordType = recordType
	this.CallSessionId = callSessionId
	this.CallLegId = callLegId
	this.CallControlId = callControlId
	this.ConnectionId = connectionId
	this.From = from
	this.To = to
	this.EnqueuedAt = enqueuedAt
	this.WaitTimeSecs = waitTimeSecs
	this.QueuePosition = queuePosition
	this.QueueId = queueId
	return &this
}

// NewQueueCallWithDefaults instantiates a new QueueCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueCallWithDefaults() *QueueCall {
	this := QueueCall{}
	return &this
}

// GetRecordType returns the RecordType field value
func (o *QueueCall) GetRecordType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetRecordTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordType, true
}

// SetRecordType sets field value
func (o *QueueCall) SetRecordType(v string) {
	o.RecordType = v
}

// GetCallSessionId returns the CallSessionId field value
func (o *QueueCall) GetCallSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetCallSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallSessionId, true
}

// SetCallSessionId sets field value
func (o *QueueCall) SetCallSessionId(v string) {
	o.CallSessionId = v
}

// GetCallLegId returns the CallLegId field value
func (o *QueueCall) GetCallLegId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetCallLegIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallLegId, true
}

// SetCallLegId sets field value
func (o *QueueCall) SetCallLegId(v string) {
	o.CallLegId = v
}

// GetCallControlId returns the CallControlId field value
func (o *QueueCall) GetCallControlId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetCallControlIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallControlId, true
}

// SetCallControlId sets field value
func (o *QueueCall) SetCallControlId(v string) {
	o.CallControlId = v
}

// GetConnectionId returns the ConnectionId field value
func (o *QueueCall) GetConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionId, true
}

// SetConnectionId sets field value
func (o *QueueCall) SetConnectionId(v string) {
	o.ConnectionId = v
}

// GetFrom returns the From field value
func (o *QueueCall) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *QueueCall) SetFrom(v string) {
	o.From = v
}

// GetTo returns the To field value
func (o *QueueCall) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *QueueCall) SetTo(v string) {
	o.To = v
}

// GetEnqueuedAt returns the EnqueuedAt field value
func (o *QueueCall) GetEnqueuedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnqueuedAt
}

// GetEnqueuedAtOk returns a tuple with the EnqueuedAt field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetEnqueuedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnqueuedAt, true
}

// SetEnqueuedAt sets field value
func (o *QueueCall) SetEnqueuedAt(v string) {
	o.EnqueuedAt = v
}

// GetWaitTimeSecs returns the WaitTimeSecs field value
func (o *QueueCall) GetWaitTimeSecs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WaitTimeSecs
}

// GetWaitTimeSecsOk returns a tuple with the WaitTimeSecs field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetWaitTimeSecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WaitTimeSecs, true
}

// SetWaitTimeSecs sets field value
func (o *QueueCall) SetWaitTimeSecs(v int32) {
	o.WaitTimeSecs = v
}

// GetQueuePosition returns the QueuePosition field value
func (o *QueueCall) GetQueuePosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QueuePosition
}

// GetQueuePositionOk returns a tuple with the QueuePosition field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetQueuePositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueuePosition, true
}

// SetQueuePosition sets field value
func (o *QueueCall) SetQueuePosition(v int32) {
	o.QueuePosition = v
}

// GetQueueId returns the QueueId field value
func (o *QueueCall) GetQueueId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueueId
}

// GetQueueIdOk returns a tuple with the QueueId field value
// and a boolean to check if the value has been set.
func (o *QueueCall) GetQueueIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueueId, true
}

// SetQueueId sets field value
func (o *QueueCall) SetQueueId(v string) {
	o.QueueId = v
}

func (o QueueCall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueCall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["record_type"] = o.RecordType
	toSerialize["call_session_id"] = o.CallSessionId
	toSerialize["call_leg_id"] = o.CallLegId
	toSerialize["call_control_id"] = o.CallControlId
	toSerialize["connection_id"] = o.ConnectionId
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	toSerialize["enqueued_at"] = o.EnqueuedAt
	toSerialize["wait_time_secs"] = o.WaitTimeSecs
	toSerialize["queue_position"] = o.QueuePosition
	toSerialize["queue_id"] = o.QueueId
	return toSerialize, nil
}

func (o *QueueCall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_type",
		"call_session_id",
		"call_leg_id",
		"call_control_id",
		"connection_id",
		"from",
		"to",
		"enqueued_at",
		"wait_time_secs",
		"queue_position",
		"queue_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueueCall := _QueueCall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueueCall)

	if err != nil {
		return err
	}

	*o = QueueCall(varQueueCall)

	return err
}

type NullableQueueCall struct {
	value *QueueCall
	isSet bool
}

func (v NullableQueueCall) Get() *QueueCall {
	return v.value
}

func (v *NullableQueueCall) Set(val *QueueCall) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueCall) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueCall(val *QueueCall) *NullableQueueCall {
	return &NullableQueueCall{value: val, isSet: true}
}

func (v NullableQueueCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



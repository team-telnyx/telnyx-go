/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the AIAssistantStartRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIAssistantStartRequest{}

// AIAssistantStartRequest struct for AIAssistantStartRequest
type AIAssistantStartRequest struct {
	Assistant *AIAssistantStartRequestAssistant `json:"assistant,omitempty"`
	// The voice to be used by the voice assistant. Currently we support ElevenLabs, Telnyx and AWS voices.   **Supported Providers:** - **AWS:** Use `AWS.Polly.<VoiceId>` (e.g., `AWS.Polly.Joanna`). For neural voices, which provide more realistic, human-like speech, append `-Neural` to the `VoiceId` (e.g., `AWS.Polly.Joanna-Neural`). For long-form engine, append `-LongForm` to the `VoiceId` (e.g., `AWS.Polly.Danielle-LongForm`). For generative engine, the latest provided by AWS Polly, append `-Generative` to the `VoiceId` (e.g., `AWS.Polly.Danielle-Generative`). Check the [available voices](https://docs.aws.amazon.com/polly/latest/dg/available-voices.html) for compatibility. - **Azure:** Use `Azure.<VoiceId>. (e.g. Azure.en-CA-ClaraNeural, Azure.en-CA-LiamNeural, Azure.en-US-BrianMultilingualNeural, Azure.en-US-Ava:DragonHDLatestNeural. For a complete list of voices, go to [Azure Voice Gallery](https://speech.microsoft.com/portal/voicegallery).) - **ElevenLabs:** Use `ElevenLabs.<ModelId>.<VoiceId>` (e.g., `ElevenLabs.BaseModel.John`). The `ModelId` part is optional. To use ElevenLabs, you must provide your ElevenLabs API key as an integration secret under `\"voice_settings\": {\"api_key_ref\": \"<secret_id>\"}`. See [integration secrets documentation](https://developers.telnyx.com/api/secrets-manager/integration-secrets/create-integration-secret) for details. Check [available voices](https://elevenlabs.io/docs/api-reference/get-voices).  - **Telnyx:** Use `Telnyx.<model_id>.<voice_id>`
	Voice *string `json:"voice,omitempty"`
	VoiceSettings *AIAssistantStartRequestVoiceSettings `json:"voice_settings,omitempty"`
	// Text that will be played when the assistant starts, if none then nothing will be played when the assistant starts. The greeting can be text for any voice or SSML for `AWS.Polly.<voice_id>` voices. There is a 3,000 character limit.
	Greeting *string `json:"greeting,omitempty"`
	InterruptionSettings *InterruptionSettings `json:"interruption_settings,omitempty"`
	Transcription *TranscriptionConfig `json:"transcription,omitempty"`
	// Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
	ClientState *string `json:"client_state,omitempty"`
	// Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.
	CommandId *string `json:"command_id,omitempty"`
}

// NewAIAssistantStartRequest instantiates a new AIAssistantStartRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIAssistantStartRequest() *AIAssistantStartRequest {
	this := AIAssistantStartRequest{}
	var voice string = "Telnyx.KokoroTTS.af"
	this.Voice = &voice
	return &this
}

// NewAIAssistantStartRequestWithDefaults instantiates a new AIAssistantStartRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIAssistantStartRequestWithDefaults() *AIAssistantStartRequest {
	this := AIAssistantStartRequest{}
	var voice string = "Telnyx.KokoroTTS.af"
	this.Voice = &voice
	return &this
}

// GetAssistant returns the Assistant field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetAssistant() AIAssistantStartRequestAssistant {
	if o == nil || IsNil(o.Assistant) {
		var ret AIAssistantStartRequestAssistant
		return ret
	}
	return *o.Assistant
}

// GetAssistantOk returns a tuple with the Assistant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetAssistantOk() (*AIAssistantStartRequestAssistant, bool) {
	if o == nil || IsNil(o.Assistant) {
		return nil, false
	}
	return o.Assistant, true
}

// HasAssistant returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasAssistant() bool {
	if o != nil && !IsNil(o.Assistant) {
		return true
	}

	return false
}

// SetAssistant gets a reference to the given AIAssistantStartRequestAssistant and assigns it to the Assistant field.
func (o *AIAssistantStartRequest) SetAssistant(v AIAssistantStartRequestAssistant) {
	o.Assistant = &v
}

// GetVoice returns the Voice field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetVoice() string {
	if o == nil || IsNil(o.Voice) {
		var ret string
		return ret
	}
	return *o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetVoiceOk() (*string, bool) {
	if o == nil || IsNil(o.Voice) {
		return nil, false
	}
	return o.Voice, true
}

// HasVoice returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasVoice() bool {
	if o != nil && !IsNil(o.Voice) {
		return true
	}

	return false
}

// SetVoice gets a reference to the given string and assigns it to the Voice field.
func (o *AIAssistantStartRequest) SetVoice(v string) {
	o.Voice = &v
}

// GetVoiceSettings returns the VoiceSettings field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetVoiceSettings() AIAssistantStartRequestVoiceSettings {
	if o == nil || IsNil(o.VoiceSettings) {
		var ret AIAssistantStartRequestVoiceSettings
		return ret
	}
	return *o.VoiceSettings
}

// GetVoiceSettingsOk returns a tuple with the VoiceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetVoiceSettingsOk() (*AIAssistantStartRequestVoiceSettings, bool) {
	if o == nil || IsNil(o.VoiceSettings) {
		return nil, false
	}
	return o.VoiceSettings, true
}

// HasVoiceSettings returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasVoiceSettings() bool {
	if o != nil && !IsNil(o.VoiceSettings) {
		return true
	}

	return false
}

// SetVoiceSettings gets a reference to the given AIAssistantStartRequestVoiceSettings and assigns it to the VoiceSettings field.
func (o *AIAssistantStartRequest) SetVoiceSettings(v AIAssistantStartRequestVoiceSettings) {
	o.VoiceSettings = &v
}

// GetGreeting returns the Greeting field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetGreeting() string {
	if o == nil || IsNil(o.Greeting) {
		var ret string
		return ret
	}
	return *o.Greeting
}

// GetGreetingOk returns a tuple with the Greeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetGreetingOk() (*string, bool) {
	if o == nil || IsNil(o.Greeting) {
		return nil, false
	}
	return o.Greeting, true
}

// HasGreeting returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasGreeting() bool {
	if o != nil && !IsNil(o.Greeting) {
		return true
	}

	return false
}

// SetGreeting gets a reference to the given string and assigns it to the Greeting field.
func (o *AIAssistantStartRequest) SetGreeting(v string) {
	o.Greeting = &v
}

// GetInterruptionSettings returns the InterruptionSettings field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetInterruptionSettings() InterruptionSettings {
	if o == nil || IsNil(o.InterruptionSettings) {
		var ret InterruptionSettings
		return ret
	}
	return *o.InterruptionSettings
}

// GetInterruptionSettingsOk returns a tuple with the InterruptionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetInterruptionSettingsOk() (*InterruptionSettings, bool) {
	if o == nil || IsNil(o.InterruptionSettings) {
		return nil, false
	}
	return o.InterruptionSettings, true
}

// HasInterruptionSettings returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasInterruptionSettings() bool {
	if o != nil && !IsNil(o.InterruptionSettings) {
		return true
	}

	return false
}

// SetInterruptionSettings gets a reference to the given InterruptionSettings and assigns it to the InterruptionSettings field.
func (o *AIAssistantStartRequest) SetInterruptionSettings(v InterruptionSettings) {
	o.InterruptionSettings = &v
}

// GetTranscription returns the Transcription field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetTranscription() TranscriptionConfig {
	if o == nil || IsNil(o.Transcription) {
		var ret TranscriptionConfig
		return ret
	}
	return *o.Transcription
}

// GetTranscriptionOk returns a tuple with the Transcription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetTranscriptionOk() (*TranscriptionConfig, bool) {
	if o == nil || IsNil(o.Transcription) {
		return nil, false
	}
	return o.Transcription, true
}

// HasTranscription returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasTranscription() bool {
	if o != nil && !IsNil(o.Transcription) {
		return true
	}

	return false
}

// SetTranscription gets a reference to the given TranscriptionConfig and assigns it to the Transcription field.
func (o *AIAssistantStartRequest) SetTranscription(v TranscriptionConfig) {
	o.Transcription = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *AIAssistantStartRequest) SetClientState(v string) {
	o.ClientState = &v
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *AIAssistantStartRequest) GetCommandId() string {
	if o == nil || IsNil(o.CommandId) {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequest) GetCommandIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommandId) {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *AIAssistantStartRequest) HasCommandId() bool {
	if o != nil && !IsNil(o.CommandId) {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *AIAssistantStartRequest) SetCommandId(v string) {
	o.CommandId = &v
}

func (o AIAssistantStartRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIAssistantStartRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assistant) {
		toSerialize["assistant"] = o.Assistant
	}
	if !IsNil(o.Voice) {
		toSerialize["voice"] = o.Voice
	}
	if !IsNil(o.VoiceSettings) {
		toSerialize["voice_settings"] = o.VoiceSettings
	}
	if !IsNil(o.Greeting) {
		toSerialize["greeting"] = o.Greeting
	}
	if !IsNil(o.InterruptionSettings) {
		toSerialize["interruption_settings"] = o.InterruptionSettings
	}
	if !IsNil(o.Transcription) {
		toSerialize["transcription"] = o.Transcription
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.CommandId) {
		toSerialize["command_id"] = o.CommandId
	}
	return toSerialize, nil
}

type NullableAIAssistantStartRequest struct {
	value *AIAssistantStartRequest
	isSet bool
}

func (v NullableAIAssistantStartRequest) Get() *AIAssistantStartRequest {
	return v.value
}

func (v *NullableAIAssistantStartRequest) Set(val *AIAssistantStartRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAIAssistantStartRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAIAssistantStartRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIAssistantStartRequest(val *AIAssistantStartRequest) *NullableAIAssistantStartRequest {
	return &NullableAIAssistantStartRequest{value: val, isSet: true}
}

func (v NullableAIAssistantStartRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIAssistantStartRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdatePortingOrderMessaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePortingOrderMessaging{}

// UpdatePortingOrderMessaging struct for UpdatePortingOrderMessaging
type UpdatePortingOrderMessaging struct {
	// Indicates whether Telnyx will port messaging capabilities from the losing carrier. If false, any messaging capabilities will stay with their current provider.
	EnableMessaging *bool `json:"enable_messaging,omitempty"`
}

// NewUpdatePortingOrderMessaging instantiates a new UpdatePortingOrderMessaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePortingOrderMessaging() *UpdatePortingOrderMessaging {
	this := UpdatePortingOrderMessaging{}
	return &this
}

// NewUpdatePortingOrderMessagingWithDefaults instantiates a new UpdatePortingOrderMessaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePortingOrderMessagingWithDefaults() *UpdatePortingOrderMessaging {
	this := UpdatePortingOrderMessaging{}
	return &this
}

// GetEnableMessaging returns the EnableMessaging field value if set, zero value otherwise.
func (o *UpdatePortingOrderMessaging) GetEnableMessaging() bool {
	if o == nil || IsNil(o.EnableMessaging) {
		var ret bool
		return ret
	}
	return *o.EnableMessaging
}

// GetEnableMessagingOk returns a tuple with the EnableMessaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrderMessaging) GetEnableMessagingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMessaging) {
		return nil, false
	}
	return o.EnableMessaging, true
}

// HasEnableMessaging returns a boolean if a field has been set.
func (o *UpdatePortingOrderMessaging) HasEnableMessaging() bool {
	if o != nil && !IsNil(o.EnableMessaging) {
		return true
	}

	return false
}

// SetEnableMessaging gets a reference to the given bool and assigns it to the EnableMessaging field.
func (o *UpdatePortingOrderMessaging) SetEnableMessaging(v bool) {
	o.EnableMessaging = &v
}

func (o UpdatePortingOrderMessaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePortingOrderMessaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableMessaging) {
		toSerialize["enable_messaging"] = o.EnableMessaging
	}
	return toSerialize, nil
}

type NullableUpdatePortingOrderMessaging struct {
	value *UpdatePortingOrderMessaging
	isSet bool
}

func (v NullableUpdatePortingOrderMessaging) Get() *UpdatePortingOrderMessaging {
	return v.value
}

func (v *NullableUpdatePortingOrderMessaging) Set(val *UpdatePortingOrderMessaging) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePortingOrderMessaging) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePortingOrderMessaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePortingOrderMessaging(val *UpdatePortingOrderMessaging) *NullableUpdatePortingOrderMessaging {
	return &NullableUpdatePortingOrderMessaging{value: val, isSet: true}
}

func (v NullableUpdatePortingOrderMessaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePortingOrderMessaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



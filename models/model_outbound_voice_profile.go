/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutboundVoiceProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutboundVoiceProfile{}

// OutboundVoiceProfile struct for OutboundVoiceProfile
type OutboundVoiceProfile struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// A user-supplied name to help with organization.
	Name string `json:"name"`
	// Amount of connections associated with this outbound voice profile.
	ConnectionsCount *int32 `json:"connections_count,omitempty"`
	TrafficType *TrafficType `json:"traffic_type,omitempty"`
	ServicePlan *ServicePlan `json:"service_plan,omitempty"`
	// Must be no more than your global concurrent call limit. Null means no limit.
	ConcurrentCallLimit NullableInt32 `json:"concurrent_call_limit,omitempty"`
	// Specifies whether the outbound voice profile can be used. Disabled profiles will result in outbound calls being blocked for the associated Connections.
	Enabled *bool `json:"enabled,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UsagePaymentMethod *UsagePaymentMethod `json:"usage_payment_method,omitempty"`
	// The list of destinations you want to be able to call using this outbound voice profile formatted in alpha2.
	WhitelistedDestinations []string `json:"whitelisted_destinations,omitempty"`
	// Maximum rate (price per minute) for a Destination to be allowed when making outbound calls.
	MaxDestinationRate *float32 `json:"max_destination_rate,omitempty"`
	// The maximum amount of usage charges, in USD, you want Telnyx to allow on this outbound voice profile in a day before disallowing new calls.
	DailySpendLimit *string `json:"daily_spend_limit,omitempty"`
	// Specifies whether to enforce the daily_spend_limit on this outbound voice profile.
	DailySpendLimitEnabled *bool `json:"daily_spend_limit_enabled,omitempty"`
	CallRecording *OutboundCallRecording `json:"call_recording,omitempty"`
	// The ID of the billing group associated with the outbound proflile. Defaults to null (for no group assigned).
	BillingGroupId NullableString `json:"billing_group_id,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type _OutboundVoiceProfile OutboundVoiceProfile

// NewOutboundVoiceProfile instantiates a new OutboundVoiceProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutboundVoiceProfile(name string) *OutboundVoiceProfile {
	this := OutboundVoiceProfile{}
	this.Name = name
	var trafficType TrafficType = CONVERSATIONAL
	this.TrafficType = &trafficType
	var servicePlan ServicePlan = GLOBAL
	this.ServicePlan = &servicePlan
	var enabled bool = true
	this.Enabled = &enabled
	var usagePaymentMethod UsagePaymentMethod = RATE_DECK
	this.UsagePaymentMethod = &usagePaymentMethod
	var dailySpendLimitEnabled bool = false
	this.DailySpendLimitEnabled = &dailySpendLimitEnabled
	return &this
}

// NewOutboundVoiceProfileWithDefaults instantiates a new OutboundVoiceProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutboundVoiceProfileWithDefaults() *OutboundVoiceProfile {
	this := OutboundVoiceProfile{}
	var trafficType TrafficType = CONVERSATIONAL
	this.TrafficType = &trafficType
	var servicePlan ServicePlan = GLOBAL
	this.ServicePlan = &servicePlan
	var enabled bool = true
	this.Enabled = &enabled
	var usagePaymentMethod UsagePaymentMethod = RATE_DECK
	this.UsagePaymentMethod = &usagePaymentMethod
	var dailySpendLimitEnabled bool = false
	this.DailySpendLimitEnabled = &dailySpendLimitEnabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OutboundVoiceProfile) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *OutboundVoiceProfile) SetRecordType(v string) {
	o.RecordType = &v
}

// GetName returns the Name field value
func (o *OutboundVoiceProfile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutboundVoiceProfile) SetName(v string) {
	o.Name = v
}

// GetConnectionsCount returns the ConnectionsCount field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetConnectionsCount() int32 {
	if o == nil || IsNil(o.ConnectionsCount) {
		var ret int32
		return ret
	}
	return *o.ConnectionsCount
}

// GetConnectionsCountOk returns a tuple with the ConnectionsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetConnectionsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectionsCount) {
		return nil, false
	}
	return o.ConnectionsCount, true
}

// HasConnectionsCount returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasConnectionsCount() bool {
	if o != nil && !IsNil(o.ConnectionsCount) {
		return true
	}

	return false
}

// SetConnectionsCount gets a reference to the given int32 and assigns it to the ConnectionsCount field.
func (o *OutboundVoiceProfile) SetConnectionsCount(v int32) {
	o.ConnectionsCount = &v
}

// GetTrafficType returns the TrafficType field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetTrafficType() TrafficType {
	if o == nil || IsNil(o.TrafficType) {
		var ret TrafficType
		return ret
	}
	return *o.TrafficType
}

// GetTrafficTypeOk returns a tuple with the TrafficType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetTrafficTypeOk() (*TrafficType, bool) {
	if o == nil || IsNil(o.TrafficType) {
		return nil, false
	}
	return o.TrafficType, true
}

// HasTrafficType returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasTrafficType() bool {
	if o != nil && !IsNil(o.TrafficType) {
		return true
	}

	return false
}

// SetTrafficType gets a reference to the given TrafficType and assigns it to the TrafficType field.
func (o *OutboundVoiceProfile) SetTrafficType(v TrafficType) {
	o.TrafficType = &v
}

// GetServicePlan returns the ServicePlan field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetServicePlan() ServicePlan {
	if o == nil || IsNil(o.ServicePlan) {
		var ret ServicePlan
		return ret
	}
	return *o.ServicePlan
}

// GetServicePlanOk returns a tuple with the ServicePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetServicePlanOk() (*ServicePlan, bool) {
	if o == nil || IsNil(o.ServicePlan) {
		return nil, false
	}
	return o.ServicePlan, true
}

// HasServicePlan returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasServicePlan() bool {
	if o != nil && !IsNil(o.ServicePlan) {
		return true
	}

	return false
}

// SetServicePlan gets a reference to the given ServicePlan and assigns it to the ServicePlan field.
func (o *OutboundVoiceProfile) SetServicePlan(v ServicePlan) {
	o.ServicePlan = &v
}

// GetConcurrentCallLimit returns the ConcurrentCallLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutboundVoiceProfile) GetConcurrentCallLimit() int32 {
	if o == nil || IsNil(o.ConcurrentCallLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.ConcurrentCallLimit.Get()
}

// GetConcurrentCallLimitOk returns a tuple with the ConcurrentCallLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutboundVoiceProfile) GetConcurrentCallLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConcurrentCallLimit.Get(), o.ConcurrentCallLimit.IsSet()
}

// HasConcurrentCallLimit returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasConcurrentCallLimit() bool {
	if o != nil && o.ConcurrentCallLimit.IsSet() {
		return true
	}

	return false
}

// SetConcurrentCallLimit gets a reference to the given NullableInt32 and assigns it to the ConcurrentCallLimit field.
func (o *OutboundVoiceProfile) SetConcurrentCallLimit(v int32) {
	o.ConcurrentCallLimit.Set(&v)
}
// SetConcurrentCallLimitNil sets the value for ConcurrentCallLimit to be an explicit nil
func (o *OutboundVoiceProfile) SetConcurrentCallLimitNil() {
	o.ConcurrentCallLimit.Set(nil)
}

// UnsetConcurrentCallLimit ensures that no value is present for ConcurrentCallLimit, not even an explicit nil
func (o *OutboundVoiceProfile) UnsetConcurrentCallLimit() {
	o.ConcurrentCallLimit.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OutboundVoiceProfile) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *OutboundVoiceProfile) SetTags(v []string) {
	o.Tags = v
}

// GetUsagePaymentMethod returns the UsagePaymentMethod field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetUsagePaymentMethod() UsagePaymentMethod {
	if o == nil || IsNil(o.UsagePaymentMethod) {
		var ret UsagePaymentMethod
		return ret
	}
	return *o.UsagePaymentMethod
}

// GetUsagePaymentMethodOk returns a tuple with the UsagePaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetUsagePaymentMethodOk() (*UsagePaymentMethod, bool) {
	if o == nil || IsNil(o.UsagePaymentMethod) {
		return nil, false
	}
	return o.UsagePaymentMethod, true
}

// HasUsagePaymentMethod returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasUsagePaymentMethod() bool {
	if o != nil && !IsNil(o.UsagePaymentMethod) {
		return true
	}

	return false
}

// SetUsagePaymentMethod gets a reference to the given UsagePaymentMethod and assigns it to the UsagePaymentMethod field.
func (o *OutboundVoiceProfile) SetUsagePaymentMethod(v UsagePaymentMethod) {
	o.UsagePaymentMethod = &v
}

// GetWhitelistedDestinations returns the WhitelistedDestinations field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetWhitelistedDestinations() []string {
	if o == nil || IsNil(o.WhitelistedDestinations) {
		var ret []string
		return ret
	}
	return o.WhitelistedDestinations
}

// GetWhitelistedDestinationsOk returns a tuple with the WhitelistedDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetWhitelistedDestinationsOk() ([]string, bool) {
	if o == nil || IsNil(o.WhitelistedDestinations) {
		return nil, false
	}
	return o.WhitelistedDestinations, true
}

// HasWhitelistedDestinations returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasWhitelistedDestinations() bool {
	if o != nil && !IsNil(o.WhitelistedDestinations) {
		return true
	}

	return false
}

// SetWhitelistedDestinations gets a reference to the given []string and assigns it to the WhitelistedDestinations field.
func (o *OutboundVoiceProfile) SetWhitelistedDestinations(v []string) {
	o.WhitelistedDestinations = v
}

// GetMaxDestinationRate returns the MaxDestinationRate field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetMaxDestinationRate() float32 {
	if o == nil || IsNil(o.MaxDestinationRate) {
		var ret float32
		return ret
	}
	return *o.MaxDestinationRate
}

// GetMaxDestinationRateOk returns a tuple with the MaxDestinationRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetMaxDestinationRateOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDestinationRate) {
		return nil, false
	}
	return o.MaxDestinationRate, true
}

// HasMaxDestinationRate returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasMaxDestinationRate() bool {
	if o != nil && !IsNil(o.MaxDestinationRate) {
		return true
	}

	return false
}

// SetMaxDestinationRate gets a reference to the given float32 and assigns it to the MaxDestinationRate field.
func (o *OutboundVoiceProfile) SetMaxDestinationRate(v float32) {
	o.MaxDestinationRate = &v
}

// GetDailySpendLimit returns the DailySpendLimit field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetDailySpendLimit() string {
	if o == nil || IsNil(o.DailySpendLimit) {
		var ret string
		return ret
	}
	return *o.DailySpendLimit
}

// GetDailySpendLimitOk returns a tuple with the DailySpendLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetDailySpendLimitOk() (*string, bool) {
	if o == nil || IsNil(o.DailySpendLimit) {
		return nil, false
	}
	return o.DailySpendLimit, true
}

// HasDailySpendLimit returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasDailySpendLimit() bool {
	if o != nil && !IsNil(o.DailySpendLimit) {
		return true
	}

	return false
}

// SetDailySpendLimit gets a reference to the given string and assigns it to the DailySpendLimit field.
func (o *OutboundVoiceProfile) SetDailySpendLimit(v string) {
	o.DailySpendLimit = &v
}

// GetDailySpendLimitEnabled returns the DailySpendLimitEnabled field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetDailySpendLimitEnabled() bool {
	if o == nil || IsNil(o.DailySpendLimitEnabled) {
		var ret bool
		return ret
	}
	return *o.DailySpendLimitEnabled
}

// GetDailySpendLimitEnabledOk returns a tuple with the DailySpendLimitEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetDailySpendLimitEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DailySpendLimitEnabled) {
		return nil, false
	}
	return o.DailySpendLimitEnabled, true
}

// HasDailySpendLimitEnabled returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasDailySpendLimitEnabled() bool {
	if o != nil && !IsNil(o.DailySpendLimitEnabled) {
		return true
	}

	return false
}

// SetDailySpendLimitEnabled gets a reference to the given bool and assigns it to the DailySpendLimitEnabled field.
func (o *OutboundVoiceProfile) SetDailySpendLimitEnabled(v bool) {
	o.DailySpendLimitEnabled = &v
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetCallRecording() OutboundCallRecording {
	if o == nil || IsNil(o.CallRecording) {
		var ret OutboundCallRecording
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetCallRecordingOk() (*OutboundCallRecording, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given OutboundCallRecording and assigns it to the CallRecording field.
func (o *OutboundVoiceProfile) SetCallRecording(v OutboundCallRecording) {
	o.CallRecording = &v
}

// GetBillingGroupId returns the BillingGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutboundVoiceProfile) GetBillingGroupId() string {
	if o == nil || IsNil(o.BillingGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.BillingGroupId.Get()
}

// GetBillingGroupIdOk returns a tuple with the BillingGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutboundVoiceProfile) GetBillingGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingGroupId.Get(), o.BillingGroupId.IsSet()
}

// HasBillingGroupId returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasBillingGroupId() bool {
	if o != nil && o.BillingGroupId.IsSet() {
		return true
	}

	return false
}

// SetBillingGroupId gets a reference to the given NullableString and assigns it to the BillingGroupId field.
func (o *OutboundVoiceProfile) SetBillingGroupId(v string) {
	o.BillingGroupId.Set(&v)
}
// SetBillingGroupIdNil sets the value for BillingGroupId to be an explicit nil
func (o *OutboundVoiceProfile) SetBillingGroupIdNil() {
	o.BillingGroupId.Set(nil)
}

// UnsetBillingGroupId ensures that no value is present for BillingGroupId, not even an explicit nil
func (o *OutboundVoiceProfile) UnsetBillingGroupId() {
	o.BillingGroupId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OutboundVoiceProfile) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OutboundVoiceProfile) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundVoiceProfile) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OutboundVoiceProfile) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OutboundVoiceProfile) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o OutboundVoiceProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutboundVoiceProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ConnectionsCount) {
		toSerialize["connections_count"] = o.ConnectionsCount
	}
	if !IsNil(o.TrafficType) {
		toSerialize["traffic_type"] = o.TrafficType
	}
	if !IsNil(o.ServicePlan) {
		toSerialize["service_plan"] = o.ServicePlan
	}
	if o.ConcurrentCallLimit.IsSet() {
		toSerialize["concurrent_call_limit"] = o.ConcurrentCallLimit.Get()
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UsagePaymentMethod) {
		toSerialize["usage_payment_method"] = o.UsagePaymentMethod
	}
	if !IsNil(o.WhitelistedDestinations) {
		toSerialize["whitelisted_destinations"] = o.WhitelistedDestinations
	}
	if !IsNil(o.MaxDestinationRate) {
		toSerialize["max_destination_rate"] = o.MaxDestinationRate
	}
	if !IsNil(o.DailySpendLimit) {
		toSerialize["daily_spend_limit"] = o.DailySpendLimit
	}
	if !IsNil(o.DailySpendLimitEnabled) {
		toSerialize["daily_spend_limit_enabled"] = o.DailySpendLimitEnabled
	}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if o.BillingGroupId.IsSet() {
		toSerialize["billing_group_id"] = o.BillingGroupId.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *OutboundVoiceProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutboundVoiceProfile := _OutboundVoiceProfile{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutboundVoiceProfile)

	if err != nil {
		return err
	}

	*o = OutboundVoiceProfile(varOutboundVoiceProfile)

	return err
}

type NullableOutboundVoiceProfile struct {
	value *OutboundVoiceProfile
	isSet bool
}

func (v NullableOutboundVoiceProfile) Get() *OutboundVoiceProfile {
	return v.value
}

func (v *NullableOutboundVoiceProfile) Set(val *OutboundVoiceProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableOutboundVoiceProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableOutboundVoiceProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutboundVoiceProfile(val *OutboundVoiceProfile) *NullableOutboundVoiceProfile {
	return &NullableOutboundVoiceProfile{value: val, isSet: true}
}

func (v NullableOutboundVoiceProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutboundVoiceProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the AIAssistantStartRequestAssistant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIAssistantStartRequestAssistant{}

// AIAssistantStartRequestAssistant AI Assistant configuration
type AIAssistantStartRequestAssistant struct {
	// The identifier of the AI assistant to use
	Id *string `json:"id,omitempty"`
	// Reference to the OpenAI API key. Required only when using OpenAI models
	OpenaiApiKeyRef *string `json:"openai_api_key_ref,omitempty"`
	// The system instructions that the voice assistant uses during the start assistant command. This will overwrite the instructions set in the assistant configuration.
	Instructions *string `json:"instructions,omitempty"`
}

// NewAIAssistantStartRequestAssistant instantiates a new AIAssistantStartRequestAssistant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIAssistantStartRequestAssistant() *AIAssistantStartRequestAssistant {
	this := AIAssistantStartRequestAssistant{}
	return &this
}

// NewAIAssistantStartRequestAssistantWithDefaults instantiates a new AIAssistantStartRequestAssistant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIAssistantStartRequestAssistantWithDefaults() *AIAssistantStartRequestAssistant {
	this := AIAssistantStartRequestAssistant{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AIAssistantStartRequestAssistant) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequestAssistant) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AIAssistantStartRequestAssistant) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AIAssistantStartRequestAssistant) SetId(v string) {
	o.Id = &v
}

// GetOpenaiApiKeyRef returns the OpenaiApiKeyRef field value if set, zero value otherwise.
func (o *AIAssistantStartRequestAssistant) GetOpenaiApiKeyRef() string {
	if o == nil || IsNil(o.OpenaiApiKeyRef) {
		var ret string
		return ret
	}
	return *o.OpenaiApiKeyRef
}

// GetOpenaiApiKeyRefOk returns a tuple with the OpenaiApiKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequestAssistant) GetOpenaiApiKeyRefOk() (*string, bool) {
	if o == nil || IsNil(o.OpenaiApiKeyRef) {
		return nil, false
	}
	return o.OpenaiApiKeyRef, true
}

// HasOpenaiApiKeyRef returns a boolean if a field has been set.
func (o *AIAssistantStartRequestAssistant) HasOpenaiApiKeyRef() bool {
	if o != nil && !IsNil(o.OpenaiApiKeyRef) {
		return true
	}

	return false
}

// SetOpenaiApiKeyRef gets a reference to the given string and assigns it to the OpenaiApiKeyRef field.
func (o *AIAssistantStartRequestAssistant) SetOpenaiApiKeyRef(v string) {
	o.OpenaiApiKeyRef = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *AIAssistantStartRequestAssistant) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIAssistantStartRequestAssistant) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *AIAssistantStartRequestAssistant) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *AIAssistantStartRequestAssistant) SetInstructions(v string) {
	o.Instructions = &v
}

func (o AIAssistantStartRequestAssistant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIAssistantStartRequestAssistant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OpenaiApiKeyRef) {
		toSerialize["openai_api_key_ref"] = o.OpenaiApiKeyRef
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	return toSerialize, nil
}

type NullableAIAssistantStartRequestAssistant struct {
	value *AIAssistantStartRequestAssistant
	isSet bool
}

func (v NullableAIAssistantStartRequestAssistant) Get() *AIAssistantStartRequestAssistant {
	return v.value
}

func (v *NullableAIAssistantStartRequestAssistant) Set(val *AIAssistantStartRequestAssistant) {
	v.value = val
	v.isSet = true
}

func (v NullableAIAssistantStartRequestAssistant) IsSet() bool {
	return v.isSet
}

func (v *NullableAIAssistantStartRequestAssistant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIAssistantStartRequestAssistant(val *AIAssistantStartRequestAssistant) *NullableAIAssistantStartRequestAssistant {
	return &NullableAIAssistantStartRequestAssistant{value: val, isSet: true}
}

func (v NullableAIAssistantStartRequestAssistant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIAssistantStartRequestAssistant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



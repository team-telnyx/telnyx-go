/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhoneNumberCampaignPaginated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneNumberCampaignPaginated{}

// PhoneNumberCampaignPaginated struct for PhoneNumberCampaignPaginated
type PhoneNumberCampaignPaginated struct {
	Records []PhoneNumberCampaign `json:"records"`
	Page int32 `json:"page"`
	TotalRecords int32 `json:"totalRecords"`
}

type _PhoneNumberCampaignPaginated PhoneNumberCampaignPaginated

// NewPhoneNumberCampaignPaginated instantiates a new PhoneNumberCampaignPaginated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumberCampaignPaginated(records []PhoneNumberCampaign, page int32, totalRecords int32) *PhoneNumberCampaignPaginated {
	this := PhoneNumberCampaignPaginated{}
	this.Records = records
	this.Page = page
	this.TotalRecords = totalRecords
	return &this
}

// NewPhoneNumberCampaignPaginatedWithDefaults instantiates a new PhoneNumberCampaignPaginated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumberCampaignPaginatedWithDefaults() *PhoneNumberCampaignPaginated {
	this := PhoneNumberCampaignPaginated{}
	return &this
}

// GetRecords returns the Records field value
func (o *PhoneNumberCampaignPaginated) GetRecords() []PhoneNumberCampaign {
	if o == nil {
		var ret []PhoneNumberCampaign
		return ret
	}

	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value
// and a boolean to check if the value has been set.
func (o *PhoneNumberCampaignPaginated) GetRecordsOk() ([]PhoneNumberCampaign, bool) {
	if o == nil {
		return nil, false
	}
	return o.Records, true
}

// SetRecords sets field value
func (o *PhoneNumberCampaignPaginated) SetRecords(v []PhoneNumberCampaign) {
	o.Records = v
}

// GetPage returns the Page field value
func (o *PhoneNumberCampaignPaginated) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *PhoneNumberCampaignPaginated) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *PhoneNumberCampaignPaginated) SetPage(v int32) {
	o.Page = v
}

// GetTotalRecords returns the TotalRecords field value
func (o *PhoneNumberCampaignPaginated) GetTotalRecords() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value
// and a boolean to check if the value has been set.
func (o *PhoneNumberCampaignPaginated) GetTotalRecordsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRecords, true
}

// SetTotalRecords sets field value
func (o *PhoneNumberCampaignPaginated) SetTotalRecords(v int32) {
	o.TotalRecords = v
}

func (o PhoneNumberCampaignPaginated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneNumberCampaignPaginated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["records"] = o.Records
	toSerialize["page"] = o.Page
	toSerialize["totalRecords"] = o.TotalRecords
	return toSerialize, nil
}

func (o *PhoneNumberCampaignPaginated) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"records",
		"page",
		"totalRecords",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhoneNumberCampaignPaginated := _PhoneNumberCampaignPaginated{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhoneNumberCampaignPaginated)

	if err != nil {
		return err
	}

	*o = PhoneNumberCampaignPaginated(varPhoneNumberCampaignPaginated)

	return err
}

type NullablePhoneNumberCampaignPaginated struct {
	value *PhoneNumberCampaignPaginated
	isSet bool
}

func (v NullablePhoneNumberCampaignPaginated) Get() *PhoneNumberCampaignPaginated {
	return v.value
}

func (v *NullablePhoneNumberCampaignPaginated) Set(val *PhoneNumberCampaignPaginated) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumberCampaignPaginated) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumberCampaignPaginated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumberCampaignPaginated(val *PhoneNumberCampaignPaginated) *NullablePhoneNumberCampaignPaginated {
	return &NullablePhoneNumberCampaignPaginated{value: val, isSet: true}
}

func (v NullablePhoneNumberCampaignPaginated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumberCampaignPaginated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GCSConfigurationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GCSConfigurationData{}

// GCSConfigurationData struct for GCSConfigurationData
type GCSConfigurationData struct {
	// Opaque credential token used to authenticate and authorize with storage provider.
	Credentials *string `json:"credentials,omitempty"`
	// Name of the bucket to be used to store recording files.
	Bucket *string `json:"bucket,omitempty"`
}

// NewGCSConfigurationData instantiates a new GCSConfigurationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGCSConfigurationData() *GCSConfigurationData {
	this := GCSConfigurationData{}
	return &this
}

// NewGCSConfigurationDataWithDefaults instantiates a new GCSConfigurationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGCSConfigurationDataWithDefaults() *GCSConfigurationData {
	this := GCSConfigurationData{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *GCSConfigurationData) GetCredentials() string {
	if o == nil || IsNil(o.Credentials) {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCSConfigurationData) GetCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *GCSConfigurationData) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *GCSConfigurationData) SetCredentials(v string) {
	o.Credentials = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *GCSConfigurationData) GetBucket() string {
	if o == nil || IsNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCSConfigurationData) GetBucketOk() (*string, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *GCSConfigurationData) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *GCSConfigurationData) SetBucket(v string) {
	o.Bucket = &v
}

func (o GCSConfigurationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GCSConfigurationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	return toSerialize, nil
}

type NullableGCSConfigurationData struct {
	value *GCSConfigurationData
	isSet bool
}

func (v NullableGCSConfigurationData) Get() *GCSConfigurationData {
	return v.value
}

func (v *NullableGCSConfigurationData) Set(val *GCSConfigurationData) {
	v.value = val
	v.isSet = true
}

func (v NullableGCSConfigurationData) IsSet() bool {
	return v.isSet
}

func (v *NullableGCSConfigurationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGCSConfigurationData(val *GCSConfigurationData) *NullableGCSConfigurationData {
	return &NullableGCSConfigurationData{value: val, isSet: true}
}

func (v NullableGCSConfigurationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGCSConfigurationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingLOAConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingLOAConfiguration{}

// PortingLOAConfiguration struct for PortingLOAConfiguration
type PortingLOAConfiguration struct {
	// Uniquely identifies the LOA configuration.
	Id *string `json:"id,omitempty"`
	// The name of the company
	CompanyName *string `json:"company_name,omitempty"`
	// The organization that owns the LOA configuration
	OrganizationId *string `json:"organization_id,omitempty"`
	// The name of the LOA configuration
	Name *string `json:"name,omitempty"`
	Logo *PortingLOAConfigurationLogo `json:"logo,omitempty"`
	Address *PortingLOAConfigurationAddress `json:"address,omitempty"`
	Contact *PortingLOAConfigurationContact `json:"contact,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ISO 8601 formatted date indicating when the resource was updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPortingLOAConfiguration instantiates a new PortingLOAConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingLOAConfiguration() *PortingLOAConfiguration {
	this := PortingLOAConfiguration{}
	return &this
}

// NewPortingLOAConfigurationWithDefaults instantiates a new PortingLOAConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingLOAConfigurationWithDefaults() *PortingLOAConfiguration {
	this := PortingLOAConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortingLOAConfiguration) SetId(v string) {
	o.Id = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *PortingLOAConfiguration) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *PortingLOAConfiguration) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PortingLOAConfiguration) SetName(v string) {
	o.Name = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetLogo() PortingLOAConfigurationLogo {
	if o == nil || IsNil(o.Logo) {
		var ret PortingLOAConfigurationLogo
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetLogoOk() (*PortingLOAConfigurationLogo, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given PortingLOAConfigurationLogo and assigns it to the Logo field.
func (o *PortingLOAConfiguration) SetLogo(v PortingLOAConfigurationLogo) {
	o.Logo = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetAddress() PortingLOAConfigurationAddress {
	if o == nil || IsNil(o.Address) {
		var ret PortingLOAConfigurationAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetAddressOk() (*PortingLOAConfigurationAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given PortingLOAConfigurationAddress and assigns it to the Address field.
func (o *PortingLOAConfiguration) SetAddress(v PortingLOAConfigurationAddress) {
	o.Address = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetContact() PortingLOAConfigurationContact {
	if o == nil || IsNil(o.Contact) {
		var ret PortingLOAConfigurationContact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetContactOk() (*PortingLOAConfigurationContact, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given PortingLOAConfigurationContact and assigns it to the Contact field.
func (o *PortingLOAConfiguration) SetContact(v PortingLOAConfigurationContact) {
	o.Contact = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingLOAConfiguration) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PortingLOAConfiguration) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PortingLOAConfiguration) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingLOAConfiguration) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PortingLOAConfiguration) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PortingLOAConfiguration) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PortingLOAConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingLOAConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePortingLOAConfiguration struct {
	value *PortingLOAConfiguration
	isSet bool
}

func (v NullablePortingLOAConfiguration) Get() *PortingLOAConfiguration {
	return v.value
}

func (v *NullablePortingLOAConfiguration) Set(val *PortingLOAConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingLOAConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingLOAConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingLOAConfiguration(val *PortingLOAConfiguration) *NullablePortingLOAConfiguration {
	return &NullablePortingLOAConfiguration{value: val, isSet: true}
}

func (v NullablePortingLOAConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingLOAConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)


// Location1Inner struct for Location1Inner
type Location1Inner struct {
	Int32 *int32
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *Location1Inner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into Int32
	err = json.Unmarshal(data, &dst.Int32);
	if err == nil {
		jsonInt32, _ := json.Marshal(dst.Int32)
		if string(jsonInt32) == "{}" { // empty struct
			dst.Int32 = nil
		} else {
			return nil // data stored in dst.Int32, return on the first match
		}
	} else {
		dst.Int32 = nil
	}

	// try to unmarshal JSON data into String
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(Location1Inner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src Location1Inner) MarshalJSON() ([]byte, error) {
	if src.Int32 != nil {
		return json.Marshal(&src.Int32)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableLocation1Inner struct {
	value *Location1Inner
	isSet bool
}

func (v NullableLocation1Inner) Get() *Location1Inner {
	return v.value
}

func (v *NullableLocation1Inner) Set(val *Location1Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableLocation1Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableLocation1Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocation1Inner(val *Location1Inner) *NullableLocation1Inner {
	return &NullableLocation1Inner{value: val, isSet: true}
}

func (v NullableLocation1Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocation1Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



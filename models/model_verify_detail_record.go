/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyDetailRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyDetailRecord{}

// VerifyDetailRecord struct for VerifyDetailRecord
type VerifyDetailRecord struct {
	// Unique ID of the verification
	Id *string `json:"id,omitempty"`
	VerifyProfileId *string `json:"verify_profile_id,omitempty"`
	DeliveryStatus *string `json:"delivery_status,omitempty"`
	VerificationStatus *string `json:"verification_status,omitempty"`
	// E.164 formatted phone number
	DestinationPhoneNumber *string `json:"destination_phone_number,omitempty"`
	// Depending on the type of verification, the `verify_channel_id` points to one of the following channel ids; --- verify_channel_type | verify_channel_id ------------------- | ----------------- sms, psd2           | messaging_id call, flashcall     | call_control_id --- 
	VerifyChannelType *string `json:"verify_channel_type,omitempty"`
	VerifyChannelId *string `json:"verify_channel_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Currency amount per billing unit used to calculate the Telnyx billing costs
	Rate *string `json:"rate,omitempty"`
	// Billing unit used to calculate the Telnyx billing costs
	RateMeasuredIn *string `json:"rate_measured_in,omitempty"`
	// Currency amount for Verify Usage Fee
	VerifyUsageFee *string `json:"verify_usage_fee,omitempty"`
	// Telnyx account currency used to describe monetary values, including billing costs
	Currency *string `json:"currency,omitempty"`
	RecordType string `json:"record_type"`
}

type _VerifyDetailRecord VerifyDetailRecord

// NewVerifyDetailRecord instantiates a new VerifyDetailRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyDetailRecord(recordType string) *VerifyDetailRecord {
	this := VerifyDetailRecord{}
	this.RecordType = recordType
	return &this
}

// NewVerifyDetailRecordWithDefaults instantiates a new VerifyDetailRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyDetailRecordWithDefaults() *VerifyDetailRecord {
	this := VerifyDetailRecord{}
	var recordType string = "verification_detail_record"
	this.RecordType = recordType
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VerifyDetailRecord) SetId(v string) {
	o.Id = &v
}

// GetVerifyProfileId returns the VerifyProfileId field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetVerifyProfileId() string {
	if o == nil || IsNil(o.VerifyProfileId) {
		var ret string
		return ret
	}
	return *o.VerifyProfileId
}

// GetVerifyProfileIdOk returns a tuple with the VerifyProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetVerifyProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyProfileId) {
		return nil, false
	}
	return o.VerifyProfileId, true
}

// HasVerifyProfileId returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasVerifyProfileId() bool {
	if o != nil && !IsNil(o.VerifyProfileId) {
		return true
	}

	return false
}

// SetVerifyProfileId gets a reference to the given string and assigns it to the VerifyProfileId field.
func (o *VerifyDetailRecord) SetVerifyProfileId(v string) {
	o.VerifyProfileId = &v
}

// GetDeliveryStatus returns the DeliveryStatus field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetDeliveryStatus() string {
	if o == nil || IsNil(o.DeliveryStatus) {
		var ret string
		return ret
	}
	return *o.DeliveryStatus
}

// GetDeliveryStatusOk returns a tuple with the DeliveryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetDeliveryStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryStatus) {
		return nil, false
	}
	return o.DeliveryStatus, true
}

// HasDeliveryStatus returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasDeliveryStatus() bool {
	if o != nil && !IsNil(o.DeliveryStatus) {
		return true
	}

	return false
}

// SetDeliveryStatus gets a reference to the given string and assigns it to the DeliveryStatus field.
func (o *VerifyDetailRecord) SetDeliveryStatus(v string) {
	o.DeliveryStatus = &v
}

// GetVerificationStatus returns the VerificationStatus field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetVerificationStatus() string {
	if o == nil || IsNil(o.VerificationStatus) {
		var ret string
		return ret
	}
	return *o.VerificationStatus
}

// GetVerificationStatusOk returns a tuple with the VerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetVerificationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationStatus) {
		return nil, false
	}
	return o.VerificationStatus, true
}

// HasVerificationStatus returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasVerificationStatus() bool {
	if o != nil && !IsNil(o.VerificationStatus) {
		return true
	}

	return false
}

// SetVerificationStatus gets a reference to the given string and assigns it to the VerificationStatus field.
func (o *VerifyDetailRecord) SetVerificationStatus(v string) {
	o.VerificationStatus = &v
}

// GetDestinationPhoneNumber returns the DestinationPhoneNumber field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetDestinationPhoneNumber() string {
	if o == nil || IsNil(o.DestinationPhoneNumber) {
		var ret string
		return ret
	}
	return *o.DestinationPhoneNumber
}

// GetDestinationPhoneNumberOk returns a tuple with the DestinationPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetDestinationPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationPhoneNumber) {
		return nil, false
	}
	return o.DestinationPhoneNumber, true
}

// HasDestinationPhoneNumber returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasDestinationPhoneNumber() bool {
	if o != nil && !IsNil(o.DestinationPhoneNumber) {
		return true
	}

	return false
}

// SetDestinationPhoneNumber gets a reference to the given string and assigns it to the DestinationPhoneNumber field.
func (o *VerifyDetailRecord) SetDestinationPhoneNumber(v string) {
	o.DestinationPhoneNumber = &v
}

// GetVerifyChannelType returns the VerifyChannelType field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetVerifyChannelType() string {
	if o == nil || IsNil(o.VerifyChannelType) {
		var ret string
		return ret
	}
	return *o.VerifyChannelType
}

// GetVerifyChannelTypeOk returns a tuple with the VerifyChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetVerifyChannelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyChannelType) {
		return nil, false
	}
	return o.VerifyChannelType, true
}

// HasVerifyChannelType returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasVerifyChannelType() bool {
	if o != nil && !IsNil(o.VerifyChannelType) {
		return true
	}

	return false
}

// SetVerifyChannelType gets a reference to the given string and assigns it to the VerifyChannelType field.
func (o *VerifyDetailRecord) SetVerifyChannelType(v string) {
	o.VerifyChannelType = &v
}

// GetVerifyChannelId returns the VerifyChannelId field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetVerifyChannelId() string {
	if o == nil || IsNil(o.VerifyChannelId) {
		var ret string
		return ret
	}
	return *o.VerifyChannelId
}

// GetVerifyChannelIdOk returns a tuple with the VerifyChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetVerifyChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyChannelId) {
		return nil, false
	}
	return o.VerifyChannelId, true
}

// HasVerifyChannelId returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasVerifyChannelId() bool {
	if o != nil && !IsNil(o.VerifyChannelId) {
		return true
	}

	return false
}

// SetVerifyChannelId gets a reference to the given string and assigns it to the VerifyChannelId field.
func (o *VerifyDetailRecord) SetVerifyChannelId(v string) {
	o.VerifyChannelId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VerifyDetailRecord) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *VerifyDetailRecord) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetRate() string {
	if o == nil || IsNil(o.Rate) {
		var ret string
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *VerifyDetailRecord) SetRate(v string) {
	o.Rate = &v
}

// GetRateMeasuredIn returns the RateMeasuredIn field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetRateMeasuredIn() string {
	if o == nil || IsNil(o.RateMeasuredIn) {
		var ret string
		return ret
	}
	return *o.RateMeasuredIn
}

// GetRateMeasuredInOk returns a tuple with the RateMeasuredIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetRateMeasuredInOk() (*string, bool) {
	if o == nil || IsNil(o.RateMeasuredIn) {
		return nil, false
	}
	return o.RateMeasuredIn, true
}

// HasRateMeasuredIn returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasRateMeasuredIn() bool {
	if o != nil && !IsNil(o.RateMeasuredIn) {
		return true
	}

	return false
}

// SetRateMeasuredIn gets a reference to the given string and assigns it to the RateMeasuredIn field.
func (o *VerifyDetailRecord) SetRateMeasuredIn(v string) {
	o.RateMeasuredIn = &v
}

// GetVerifyUsageFee returns the VerifyUsageFee field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetVerifyUsageFee() string {
	if o == nil || IsNil(o.VerifyUsageFee) {
		var ret string
		return ret
	}
	return *o.VerifyUsageFee
}

// GetVerifyUsageFeeOk returns a tuple with the VerifyUsageFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetVerifyUsageFeeOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyUsageFee) {
		return nil, false
	}
	return o.VerifyUsageFee, true
}

// HasVerifyUsageFee returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasVerifyUsageFee() bool {
	if o != nil && !IsNil(o.VerifyUsageFee) {
		return true
	}

	return false
}

// SetVerifyUsageFee gets a reference to the given string and assigns it to the VerifyUsageFee field.
func (o *VerifyDetailRecord) SetVerifyUsageFee(v string) {
	o.VerifyUsageFee = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *VerifyDetailRecord) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *VerifyDetailRecord) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *VerifyDetailRecord) SetCurrency(v string) {
	o.Currency = &v
}

// GetRecordType returns the RecordType field value
func (o *VerifyDetailRecord) GetRecordType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value
// and a boolean to check if the value has been set.
func (o *VerifyDetailRecord) GetRecordTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordType, true
}

// SetRecordType sets field value
func (o *VerifyDetailRecord) SetRecordType(v string) {
	o.RecordType = v
}

func (o VerifyDetailRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyDetailRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.VerifyProfileId) {
		toSerialize["verify_profile_id"] = o.VerifyProfileId
	}
	if !IsNil(o.DeliveryStatus) {
		toSerialize["delivery_status"] = o.DeliveryStatus
	}
	if !IsNil(o.VerificationStatus) {
		toSerialize["verification_status"] = o.VerificationStatus
	}
	if !IsNil(o.DestinationPhoneNumber) {
		toSerialize["destination_phone_number"] = o.DestinationPhoneNumber
	}
	if !IsNil(o.VerifyChannelType) {
		toSerialize["verify_channel_type"] = o.VerifyChannelType
	}
	if !IsNil(o.VerifyChannelId) {
		toSerialize["verify_channel_id"] = o.VerifyChannelId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.RateMeasuredIn) {
		toSerialize["rate_measured_in"] = o.RateMeasuredIn
	}
	if !IsNil(o.VerifyUsageFee) {
		toSerialize["verify_usage_fee"] = o.VerifyUsageFee
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	toSerialize["record_type"] = o.RecordType
	return toSerialize, nil
}

func (o *VerifyDetailRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyDetailRecord := _VerifyDetailRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyDetailRecord)

	if err != nil {
		return err
	}

	*o = VerifyDetailRecord(varVerifyDetailRecord)

	return err
}

type NullableVerifyDetailRecord struct {
	value *VerifyDetailRecord
	isSet bool
}

func (v NullableVerifyDetailRecord) Get() *VerifyDetailRecord {
	return v.value
}

func (v *NullableVerifyDetailRecord) Set(val *VerifyDetailRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyDetailRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyDetailRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyDetailRecord(val *VerifyDetailRecord) *NullableVerifyDetailRecord {
	return &NullableVerifyDetailRecord{value: val, isSet: true}
}

func (v NullableVerifyDetailRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyDetailRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



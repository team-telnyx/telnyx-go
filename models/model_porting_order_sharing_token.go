/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingOrderSharingToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderSharingToken{}

// PortingOrderSharingToken struct for PortingOrderSharingToken
type PortingOrderSharingToken struct {
	// Uniquely identifies this sharing token
	Id *string `json:"id,omitempty"`
	// Identifies the porting order resource being shared
	PortingOrderId *string `json:"porting_order_id,omitempty"`
	// The number of seconds until the sharing token expires
	ExpiresInSeconds *int32 `json:"expires_in_seconds,omitempty"`
	// The permissions granted to the sharing token
	Permissions []string `json:"permissions,omitempty"`
	// A signed JWT token that can be used to access the shared resource
	Token *string `json:"token,omitempty"`
	// ISO 8601 formatted date indicating when the sharing token expires.
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewPortingOrderSharingToken instantiates a new PortingOrderSharingToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderSharingToken() *PortingOrderSharingToken {
	this := PortingOrderSharingToken{}
	return &this
}

// NewPortingOrderSharingTokenWithDefaults instantiates a new PortingOrderSharingToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderSharingTokenWithDefaults() *PortingOrderSharingToken {
	this := PortingOrderSharingToken{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortingOrderSharingToken) SetId(v string) {
	o.Id = &v
}

// GetPortingOrderId returns the PortingOrderId field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetPortingOrderId() string {
	if o == nil || IsNil(o.PortingOrderId) {
		var ret string
		return ret
	}
	return *o.PortingOrderId
}

// GetPortingOrderIdOk returns a tuple with the PortingOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetPortingOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortingOrderId) {
		return nil, false
	}
	return o.PortingOrderId, true
}

// HasPortingOrderId returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasPortingOrderId() bool {
	if o != nil && !IsNil(o.PortingOrderId) {
		return true
	}

	return false
}

// SetPortingOrderId gets a reference to the given string and assigns it to the PortingOrderId field.
func (o *PortingOrderSharingToken) SetPortingOrderId(v string) {
	o.PortingOrderId = &v
}

// GetExpiresInSeconds returns the ExpiresInSeconds field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetExpiresInSeconds() int32 {
	if o == nil || IsNil(o.ExpiresInSeconds) {
		var ret int32
		return ret
	}
	return *o.ExpiresInSeconds
}

// GetExpiresInSecondsOk returns a tuple with the ExpiresInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetExpiresInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresInSeconds) {
		return nil, false
	}
	return o.ExpiresInSeconds, true
}

// HasExpiresInSeconds returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasExpiresInSeconds() bool {
	if o != nil && !IsNil(o.ExpiresInSeconds) {
		return true
	}

	return false
}

// SetExpiresInSeconds gets a reference to the given int32 and assigns it to the ExpiresInSeconds field.
func (o *PortingOrderSharingToken) SetExpiresInSeconds(v int32) {
	o.ExpiresInSeconds = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *PortingOrderSharingToken) SetPermissions(v []string) {
	o.Permissions = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PortingOrderSharingToken) SetToken(v string) {
	o.Token = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *PortingOrderSharingToken) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingOrderSharingToken) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortingOrderSharingToken) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderSharingToken) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortingOrderSharingToken) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PortingOrderSharingToken) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o PortingOrderSharingToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderSharingToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PortingOrderId) {
		toSerialize["porting_order_id"] = o.PortingOrderId
	}
	if !IsNil(o.ExpiresInSeconds) {
		toSerialize["expires_in_seconds"] = o.ExpiresInSeconds
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullablePortingOrderSharingToken struct {
	value *PortingOrderSharingToken
	isSet bool
}

func (v NullablePortingOrderSharingToken) Get() *PortingOrderSharingToken {
	return v.value
}

func (v *NullablePortingOrderSharingToken) Set(val *PortingOrderSharingToken) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderSharingToken) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderSharingToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderSharingToken(val *PortingOrderSharingToken) *NullablePortingOrderSharingToken {
	return &NullablePortingOrderSharingToken{value: val, isSet: true}
}

func (v NullablePortingOrderSharingToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderSharingToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



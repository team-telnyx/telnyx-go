/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the UpdatePortingOrderActivationSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePortingOrderActivationSettings{}

// UpdatePortingOrderActivationSettings struct for UpdatePortingOrderActivationSettings
type UpdatePortingOrderActivationSettings struct {
	// ISO 8601 formatted Date/Time requested for the FOC date
	FocDatetimeRequested *time.Time `json:"foc_datetime_requested,omitempty"`
}

// NewUpdatePortingOrderActivationSettings instantiates a new UpdatePortingOrderActivationSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePortingOrderActivationSettings() *UpdatePortingOrderActivationSettings {
	this := UpdatePortingOrderActivationSettings{}
	return &this
}

// NewUpdatePortingOrderActivationSettingsWithDefaults instantiates a new UpdatePortingOrderActivationSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePortingOrderActivationSettingsWithDefaults() *UpdatePortingOrderActivationSettings {
	this := UpdatePortingOrderActivationSettings{}
	return &this
}

// GetFocDatetimeRequested returns the FocDatetimeRequested field value if set, zero value otherwise.
func (o *UpdatePortingOrderActivationSettings) GetFocDatetimeRequested() time.Time {
	if o == nil || IsNil(o.FocDatetimeRequested) {
		var ret time.Time
		return ret
	}
	return *o.FocDatetimeRequested
}

// GetFocDatetimeRequestedOk returns a tuple with the FocDatetimeRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePortingOrderActivationSettings) GetFocDatetimeRequestedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FocDatetimeRequested) {
		return nil, false
	}
	return o.FocDatetimeRequested, true
}

// HasFocDatetimeRequested returns a boolean if a field has been set.
func (o *UpdatePortingOrderActivationSettings) HasFocDatetimeRequested() bool {
	if o != nil && !IsNil(o.FocDatetimeRequested) {
		return true
	}

	return false
}

// SetFocDatetimeRequested gets a reference to the given time.Time and assigns it to the FocDatetimeRequested field.
func (o *UpdatePortingOrderActivationSettings) SetFocDatetimeRequested(v time.Time) {
	o.FocDatetimeRequested = &v
}

func (o UpdatePortingOrderActivationSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePortingOrderActivationSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FocDatetimeRequested) {
		toSerialize["foc_datetime_requested"] = o.FocDatetimeRequested
	}
	return toSerialize, nil
}

type NullableUpdatePortingOrderActivationSettings struct {
	value *UpdatePortingOrderActivationSettings
	isSet bool
}

func (v NullableUpdatePortingOrderActivationSettings) Get() *UpdatePortingOrderActivationSettings {
	return v.value
}

func (v *NullableUpdatePortingOrderActivationSettings) Set(val *UpdatePortingOrderActivationSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePortingOrderActivationSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePortingOrderActivationSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePortingOrderActivationSettings(val *UpdatePortingOrderActivationSettings) *NullableUpdatePortingOrderActivationSettings {
	return &NullableUpdatePortingOrderActivationSettings{value: val, isSet: true}
}

func (v NullableUpdatePortingOrderActivationSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePortingOrderActivationSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



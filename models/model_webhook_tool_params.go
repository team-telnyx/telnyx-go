/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookToolParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookToolParams{}

// WebhookToolParams struct for WebhookToolParams
type WebhookToolParams struct {
	// The name of the tool.
	Name string `json:"name"`
	// The description of the tool.
	Description string `json:"description"`
	// The URL of the external tool to be called. This URL is going to be used by the assistant. The URL can be templated like: `https://example.com/api/v1/{id}`, where `{id}` is a placeholder for a value that will be provided by the assistant if `path_parameters` are provided with the `id` attribute.
	Url string `json:"url"`
	// The HTTP method to be used when calling the external tool.
	Method *string `json:"method,omitempty"`
	// The headers to be sent to the external tool.
	Headers []WebhookToolParamsHeadersInner `json:"headers,omitempty"`
	BodyParameters *WebhookToolParamsBodyParameters `json:"body_parameters,omitempty"`
	PathParameters *WebhookToolParamsPathParameters `json:"path_parameters,omitempty"`
	QueryParameters *WebhookToolParamsQueryParameters `json:"query_parameters,omitempty"`
}

type _WebhookToolParams WebhookToolParams

// NewWebhookToolParams instantiates a new WebhookToolParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookToolParams(name string, description string, url string) *WebhookToolParams {
	this := WebhookToolParams{}
	this.Name = name
	this.Description = description
	this.Url = url
	var method string = "POST"
	this.Method = &method
	return &this
}

// NewWebhookToolParamsWithDefaults instantiates a new WebhookToolParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookToolParamsWithDefaults() *WebhookToolParams {
	this := WebhookToolParams{}
	var method string = "POST"
	this.Method = &method
	return &this
}

// GetName returns the Name field value
func (o *WebhookToolParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebhookToolParams) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *WebhookToolParams) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *WebhookToolParams) SetDescription(v string) {
	o.Description = v
}

// GetUrl returns the Url field value
func (o *WebhookToolParams) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookToolParams) SetUrl(v string) {
	o.Url = v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *WebhookToolParams) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *WebhookToolParams) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *WebhookToolParams) SetMethod(v string) {
	o.Method = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *WebhookToolParams) GetHeaders() []WebhookToolParamsHeadersInner {
	if o == nil || IsNil(o.Headers) {
		var ret []WebhookToolParamsHeadersInner
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetHeadersOk() ([]WebhookToolParamsHeadersInner, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebhookToolParams) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []WebhookToolParamsHeadersInner and assigns it to the Headers field.
func (o *WebhookToolParams) SetHeaders(v []WebhookToolParamsHeadersInner) {
	o.Headers = v
}

// GetBodyParameters returns the BodyParameters field value if set, zero value otherwise.
func (o *WebhookToolParams) GetBodyParameters() WebhookToolParamsBodyParameters {
	if o == nil || IsNil(o.BodyParameters) {
		var ret WebhookToolParamsBodyParameters
		return ret
	}
	return *o.BodyParameters
}

// GetBodyParametersOk returns a tuple with the BodyParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetBodyParametersOk() (*WebhookToolParamsBodyParameters, bool) {
	if o == nil || IsNil(o.BodyParameters) {
		return nil, false
	}
	return o.BodyParameters, true
}

// HasBodyParameters returns a boolean if a field has been set.
func (o *WebhookToolParams) HasBodyParameters() bool {
	if o != nil && !IsNil(o.BodyParameters) {
		return true
	}

	return false
}

// SetBodyParameters gets a reference to the given WebhookToolParamsBodyParameters and assigns it to the BodyParameters field.
func (o *WebhookToolParams) SetBodyParameters(v WebhookToolParamsBodyParameters) {
	o.BodyParameters = &v
}

// GetPathParameters returns the PathParameters field value if set, zero value otherwise.
func (o *WebhookToolParams) GetPathParameters() WebhookToolParamsPathParameters {
	if o == nil || IsNil(o.PathParameters) {
		var ret WebhookToolParamsPathParameters
		return ret
	}
	return *o.PathParameters
}

// GetPathParametersOk returns a tuple with the PathParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetPathParametersOk() (*WebhookToolParamsPathParameters, bool) {
	if o == nil || IsNil(o.PathParameters) {
		return nil, false
	}
	return o.PathParameters, true
}

// HasPathParameters returns a boolean if a field has been set.
func (o *WebhookToolParams) HasPathParameters() bool {
	if o != nil && !IsNil(o.PathParameters) {
		return true
	}

	return false
}

// SetPathParameters gets a reference to the given WebhookToolParamsPathParameters and assigns it to the PathParameters field.
func (o *WebhookToolParams) SetPathParameters(v WebhookToolParamsPathParameters) {
	o.PathParameters = &v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *WebhookToolParams) GetQueryParameters() WebhookToolParamsQueryParameters {
	if o == nil || IsNil(o.QueryParameters) {
		var ret WebhookToolParamsQueryParameters
		return ret
	}
	return *o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookToolParams) GetQueryParametersOk() (*WebhookToolParamsQueryParameters, bool) {
	if o == nil || IsNil(o.QueryParameters) {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *WebhookToolParams) HasQueryParameters() bool {
	if o != nil && !IsNil(o.QueryParameters) {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given WebhookToolParamsQueryParameters and assigns it to the QueryParameters field.
func (o *WebhookToolParams) SetQueryParameters(v WebhookToolParamsQueryParameters) {
	o.QueryParameters = &v
}

func (o WebhookToolParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookToolParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["url"] = o.Url
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.BodyParameters) {
		toSerialize["body_parameters"] = o.BodyParameters
	}
	if !IsNil(o.PathParameters) {
		toSerialize["path_parameters"] = o.PathParameters
	}
	if !IsNil(o.QueryParameters) {
		toSerialize["query_parameters"] = o.QueryParameters
	}
	return toSerialize, nil
}

func (o *WebhookToolParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookToolParams := _WebhookToolParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookToolParams)

	if err != nil {
		return err
	}

	*o = WebhookToolParams(varWebhookToolParams)

	return err
}

type NullableWebhookToolParams struct {
	value *WebhookToolParams
	isSet bool
}

func (v NullableWebhookToolParams) Get() *WebhookToolParams {
	return v.value
}

func (v *NullableWebhookToolParams) Set(val *WebhookToolParams) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookToolParams) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookToolParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookToolParams(val *WebhookToolParams) *NullableWebhookToolParams {
	return &NullableWebhookToolParams{value: val, isSet: true}
}

func (v NullableWebhookToolParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookToolParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallbackWebhookMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallbackWebhookMeta{}

// CallbackWebhookMeta struct for CallbackWebhookMeta
type CallbackWebhookMeta struct {
	// The number of times the callback webhook has been attempted.
	Attempt *int32 `json:"attempt,omitempty"`
	// The URL that the callback webhook was delivered to.
	DeliveredTo *string `json:"delivered_to,omitempty"`
}

// NewCallbackWebhookMeta instantiates a new CallbackWebhookMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallbackWebhookMeta() *CallbackWebhookMeta {
	this := CallbackWebhookMeta{}
	return &this
}

// NewCallbackWebhookMetaWithDefaults instantiates a new CallbackWebhookMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallbackWebhookMetaWithDefaults() *CallbackWebhookMeta {
	this := CallbackWebhookMeta{}
	return &this
}

// GetAttempt returns the Attempt field value if set, zero value otherwise.
func (o *CallbackWebhookMeta) GetAttempt() int32 {
	if o == nil || IsNil(o.Attempt) {
		var ret int32
		return ret
	}
	return *o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackWebhookMeta) GetAttemptOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempt) {
		return nil, false
	}
	return o.Attempt, true
}

// HasAttempt returns a boolean if a field has been set.
func (o *CallbackWebhookMeta) HasAttempt() bool {
	if o != nil && !IsNil(o.Attempt) {
		return true
	}

	return false
}

// SetAttempt gets a reference to the given int32 and assigns it to the Attempt field.
func (o *CallbackWebhookMeta) SetAttempt(v int32) {
	o.Attempt = &v
}

// GetDeliveredTo returns the DeliveredTo field value if set, zero value otherwise.
func (o *CallbackWebhookMeta) GetDeliveredTo() string {
	if o == nil || IsNil(o.DeliveredTo) {
		var ret string
		return ret
	}
	return *o.DeliveredTo
}

// GetDeliveredToOk returns a tuple with the DeliveredTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackWebhookMeta) GetDeliveredToOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredTo) {
		return nil, false
	}
	return o.DeliveredTo, true
}

// HasDeliveredTo returns a boolean if a field has been set.
func (o *CallbackWebhookMeta) HasDeliveredTo() bool {
	if o != nil && !IsNil(o.DeliveredTo) {
		return true
	}

	return false
}

// SetDeliveredTo gets a reference to the given string and assigns it to the DeliveredTo field.
func (o *CallbackWebhookMeta) SetDeliveredTo(v string) {
	o.DeliveredTo = &v
}

func (o CallbackWebhookMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallbackWebhookMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attempt) {
		toSerialize["attempt"] = o.Attempt
	}
	if !IsNil(o.DeliveredTo) {
		toSerialize["delivered_to"] = o.DeliveredTo
	}
	return toSerialize, nil
}

type NullableCallbackWebhookMeta struct {
	value *CallbackWebhookMeta
	isSet bool
}

func (v NullableCallbackWebhookMeta) Get() *CallbackWebhookMeta {
	return v.value
}

func (v *NullableCallbackWebhookMeta) Set(val *CallbackWebhookMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableCallbackWebhookMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableCallbackWebhookMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallbackWebhookMeta(val *CallbackWebhookMeta) *NullableCallbackWebhookMeta {
	return &NullableCallbackWebhookMeta{value: val, isSet: true}
}

func (v NullableCallbackWebhookMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallbackWebhookMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



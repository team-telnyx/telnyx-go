/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the AvailablePhoneNumberBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailablePhoneNumberBlock{}

// AvailablePhoneNumberBlock struct for AvailablePhoneNumberBlock
type AvailablePhoneNumberBlock struct {
	RecordType *string `json:"record_type,omitempty"`
	StartingNumber *string `json:"starting_number,omitempty"`
	Range *int32 `json:"range,omitempty"`
	RegionInformation []RegionInformation `json:"region_information,omitempty"`
	CostInformation *CostInformation `json:"cost_information,omitempty"`
	Features []Feature `json:"features,omitempty"`
}

// NewAvailablePhoneNumberBlock instantiates a new AvailablePhoneNumberBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailablePhoneNumberBlock() *AvailablePhoneNumberBlock {
	this := AvailablePhoneNumberBlock{}
	return &this
}

// NewAvailablePhoneNumberBlockWithDefaults instantiates a new AvailablePhoneNumberBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailablePhoneNumberBlockWithDefaults() *AvailablePhoneNumberBlock {
	this := AvailablePhoneNumberBlock{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *AvailablePhoneNumberBlock) SetRecordType(v string) {
	o.RecordType = &v
}

// GetStartingNumber returns the StartingNumber field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetStartingNumber() string {
	if o == nil || IsNil(o.StartingNumber) {
		var ret string
		return ret
	}
	return *o.StartingNumber
}

// GetStartingNumberOk returns a tuple with the StartingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetStartingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.StartingNumber) {
		return nil, false
	}
	return o.StartingNumber, true
}

// HasStartingNumber returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasStartingNumber() bool {
	if o != nil && !IsNil(o.StartingNumber) {
		return true
	}

	return false
}

// SetStartingNumber gets a reference to the given string and assigns it to the StartingNumber field.
func (o *AvailablePhoneNumberBlock) SetStartingNumber(v string) {
	o.StartingNumber = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetRange() int32 {
	if o == nil || IsNil(o.Range) {
		var ret int32
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given int32 and assigns it to the Range field.
func (o *AvailablePhoneNumberBlock) SetRange(v int32) {
	o.Range = &v
}

// GetRegionInformation returns the RegionInformation field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetRegionInformation() []RegionInformation {
	if o == nil || IsNil(o.RegionInformation) {
		var ret []RegionInformation
		return ret
	}
	return o.RegionInformation
}

// GetRegionInformationOk returns a tuple with the RegionInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetRegionInformationOk() ([]RegionInformation, bool) {
	if o == nil || IsNil(o.RegionInformation) {
		return nil, false
	}
	return o.RegionInformation, true
}

// HasRegionInformation returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasRegionInformation() bool {
	if o != nil && !IsNil(o.RegionInformation) {
		return true
	}

	return false
}

// SetRegionInformation gets a reference to the given []RegionInformation and assigns it to the RegionInformation field.
func (o *AvailablePhoneNumberBlock) SetRegionInformation(v []RegionInformation) {
	o.RegionInformation = v
}

// GetCostInformation returns the CostInformation field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetCostInformation() CostInformation {
	if o == nil || IsNil(o.CostInformation) {
		var ret CostInformation
		return ret
	}
	return *o.CostInformation
}

// GetCostInformationOk returns a tuple with the CostInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetCostInformationOk() (*CostInformation, bool) {
	if o == nil || IsNil(o.CostInformation) {
		return nil, false
	}
	return o.CostInformation, true
}

// HasCostInformation returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasCostInformation() bool {
	if o != nil && !IsNil(o.CostInformation) {
		return true
	}

	return false
}

// SetCostInformation gets a reference to the given CostInformation and assigns it to the CostInformation field.
func (o *AvailablePhoneNumberBlock) SetCostInformation(v CostInformation) {
	o.CostInformation = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *AvailablePhoneNumberBlock) GetFeatures() []Feature {
	if o == nil || IsNil(o.Features) {
		var ret []Feature
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumberBlock) GetFeaturesOk() ([]Feature, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *AvailablePhoneNumberBlock) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []Feature and assigns it to the Features field.
func (o *AvailablePhoneNumberBlock) SetFeatures(v []Feature) {
	o.Features = v
}

func (o AvailablePhoneNumberBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailablePhoneNumberBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.StartingNumber) {
		toSerialize["starting_number"] = o.StartingNumber
	}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	if !IsNil(o.RegionInformation) {
		toSerialize["region_information"] = o.RegionInformation
	}
	if !IsNil(o.CostInformation) {
		toSerialize["cost_information"] = o.CostInformation
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	return toSerialize, nil
}

type NullableAvailablePhoneNumberBlock struct {
	value *AvailablePhoneNumberBlock
	isSet bool
}

func (v NullableAvailablePhoneNumberBlock) Get() *AvailablePhoneNumberBlock {
	return v.value
}

func (v *NullableAvailablePhoneNumberBlock) Set(val *AvailablePhoneNumberBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailablePhoneNumberBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailablePhoneNumberBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailablePhoneNumberBlock(val *AvailablePhoneNumberBlock) *NullableAvailablePhoneNumberBlock {
	return &NullableAvailablePhoneNumberBlock{value: val, isSet: true}
}

func (v NullableAvailablePhoneNumberBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailablePhoneNumberBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortoutDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortoutDetails{}

// PortoutDetails struct for PortoutDetails
type PortoutDetails struct {
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Phone numbers associated with this portout
	PhoneNumbers []string `json:"phone_numbers,omitempty"`
	// Name of person authorizing the porting order
	AuthorizedName *string `json:"authorized_name,omitempty"`
	// Carrier the number will be ported out to
	CarrierName *string `json:"carrier_name,omitempty"`
	// The current carrier
	CurrentCarrier *string `json:"current_carrier,omitempty"`
	// Person name or company name requesting the port
	EndUserName *string `json:"end_user_name,omitempty"`
	// City or municipality of billing address
	City *string `json:"city,omitempty"`
	// State, province, or similar of billing address
	State *string `json:"state,omitempty"`
	// Postal Code of billing address
	Zip *string `json:"zip,omitempty"`
	// The Local Service Request
	Lsr []string `json:"lsr,omitempty"`
	// Port order number assigned by the carrier the number will be ported out to
	Pon *string `json:"pon,omitempty"`
	// The reason why the order is being rejected by the user. If the order is authorized, this field can be left null
	Reason *string `json:"reason,omitempty"`
	// The rejection code for one of the valid rejections to reject a port out order
	RejectionCode *int32 `json:"rejection_code,omitempty"`
	// First line of billing address (street address)
	ServiceAddress *string `json:"service_address,omitempty"`
	// ISO 8601 formatted Date/Time of the FOC date
	FocDate *string `json:"foc_date,omitempty"`
	// ISO 8601 formatted Date/Time of the user requested FOC date
	RequestedFocDate *string `json:"requested_foc_date,omitempty"`
	// New service provider spid
	Spid *string `json:"spid,omitempty"`
	// A key to reference this port out request when contacting Telnyx customer support
	SupportKey *string `json:"support_key,omitempty"`
	// Status of portout request
	Status *string `json:"status,omitempty"`
	// Is true when the number is already ported
	AlreadyPorted *bool `json:"already_ported,omitempty"`
	// Identifies the user (or organization) who requested the port out
	UserId *string `json:"user_id,omitempty"`
	// Telnyx partner providing network coverage
	Vendor *string `json:"vendor,omitempty"`
	// ISO 8601 formatted date of when the portout was created
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date of when the portout was created
	InsertedAt *string `json:"inserted_at,omitempty"`
	// ISO 8601 formatted date of when the portout was last updated
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewPortoutDetails instantiates a new PortoutDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortoutDetails() *PortoutDetails {
	this := PortoutDetails{}
	return &this
}

// NewPortoutDetailsWithDefaults instantiates a new PortoutDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortoutDetailsWithDefaults() *PortoutDetails {
	this := PortoutDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortoutDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortoutDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortoutDetails) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortoutDetails) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortoutDetails) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortoutDetails) SetRecordType(v string) {
	o.RecordType = &v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *PortoutDetails) GetPhoneNumbers() []string {
	if o == nil || IsNil(o.PhoneNumbers) {
		var ret []string
		return ret
	}
	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetPhoneNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.PhoneNumbers) {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *PortoutDetails) HasPhoneNumbers() bool {
	if o != nil && !IsNil(o.PhoneNumbers) {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []string and assigns it to the PhoneNumbers field.
func (o *PortoutDetails) SetPhoneNumbers(v []string) {
	o.PhoneNumbers = v
}

// GetAuthorizedName returns the AuthorizedName field value if set, zero value otherwise.
func (o *PortoutDetails) GetAuthorizedName() string {
	if o == nil || IsNil(o.AuthorizedName) {
		var ret string
		return ret
	}
	return *o.AuthorizedName
}

// GetAuthorizedNameOk returns a tuple with the AuthorizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetAuthorizedNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizedName) {
		return nil, false
	}
	return o.AuthorizedName, true
}

// HasAuthorizedName returns a boolean if a field has been set.
func (o *PortoutDetails) HasAuthorizedName() bool {
	if o != nil && !IsNil(o.AuthorizedName) {
		return true
	}

	return false
}

// SetAuthorizedName gets a reference to the given string and assigns it to the AuthorizedName field.
func (o *PortoutDetails) SetAuthorizedName(v string) {
	o.AuthorizedName = &v
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *PortoutDetails) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetCarrierNameOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierName) {
		return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *PortoutDetails) HasCarrierName() bool {
	if o != nil && !IsNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *PortoutDetails) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetCurrentCarrier returns the CurrentCarrier field value if set, zero value otherwise.
func (o *PortoutDetails) GetCurrentCarrier() string {
	if o == nil || IsNil(o.CurrentCarrier) {
		var ret string
		return ret
	}
	return *o.CurrentCarrier
}

// GetCurrentCarrierOk returns a tuple with the CurrentCarrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetCurrentCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentCarrier) {
		return nil, false
	}
	return o.CurrentCarrier, true
}

// HasCurrentCarrier returns a boolean if a field has been set.
func (o *PortoutDetails) HasCurrentCarrier() bool {
	if o != nil && !IsNil(o.CurrentCarrier) {
		return true
	}

	return false
}

// SetCurrentCarrier gets a reference to the given string and assigns it to the CurrentCarrier field.
func (o *PortoutDetails) SetCurrentCarrier(v string) {
	o.CurrentCarrier = &v
}

// GetEndUserName returns the EndUserName field value if set, zero value otherwise.
func (o *PortoutDetails) GetEndUserName() string {
	if o == nil || IsNil(o.EndUserName) {
		var ret string
		return ret
	}
	return *o.EndUserName
}

// GetEndUserNameOk returns a tuple with the EndUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetEndUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndUserName) {
		return nil, false
	}
	return o.EndUserName, true
}

// HasEndUserName returns a boolean if a field has been set.
func (o *PortoutDetails) HasEndUserName() bool {
	if o != nil && !IsNil(o.EndUserName) {
		return true
	}

	return false
}

// SetEndUserName gets a reference to the given string and assigns it to the EndUserName field.
func (o *PortoutDetails) SetEndUserName(v string) {
	o.EndUserName = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PortoutDetails) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PortoutDetails) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PortoutDetails) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PortoutDetails) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PortoutDetails) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PortoutDetails) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *PortoutDetails) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *PortoutDetails) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *PortoutDetails) SetZip(v string) {
	o.Zip = &v
}

// GetLsr returns the Lsr field value if set, zero value otherwise.
func (o *PortoutDetails) GetLsr() []string {
	if o == nil || IsNil(o.Lsr) {
		var ret []string
		return ret
	}
	return o.Lsr
}

// GetLsrOk returns a tuple with the Lsr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetLsrOk() ([]string, bool) {
	if o == nil || IsNil(o.Lsr) {
		return nil, false
	}
	return o.Lsr, true
}

// HasLsr returns a boolean if a field has been set.
func (o *PortoutDetails) HasLsr() bool {
	if o != nil && !IsNil(o.Lsr) {
		return true
	}

	return false
}

// SetLsr gets a reference to the given []string and assigns it to the Lsr field.
func (o *PortoutDetails) SetLsr(v []string) {
	o.Lsr = v
}

// GetPon returns the Pon field value if set, zero value otherwise.
func (o *PortoutDetails) GetPon() string {
	if o == nil || IsNil(o.Pon) {
		var ret string
		return ret
	}
	return *o.Pon
}

// GetPonOk returns a tuple with the Pon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetPonOk() (*string, bool) {
	if o == nil || IsNil(o.Pon) {
		return nil, false
	}
	return o.Pon, true
}

// HasPon returns a boolean if a field has been set.
func (o *PortoutDetails) HasPon() bool {
	if o != nil && !IsNil(o.Pon) {
		return true
	}

	return false
}

// SetPon gets a reference to the given string and assigns it to the Pon field.
func (o *PortoutDetails) SetPon(v string) {
	o.Pon = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *PortoutDetails) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *PortoutDetails) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *PortoutDetails) SetReason(v string) {
	o.Reason = &v
}

// GetRejectionCode returns the RejectionCode field value if set, zero value otherwise.
func (o *PortoutDetails) GetRejectionCode() int32 {
	if o == nil || IsNil(o.RejectionCode) {
		var ret int32
		return ret
	}
	return *o.RejectionCode
}

// GetRejectionCodeOk returns a tuple with the RejectionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetRejectionCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.RejectionCode) {
		return nil, false
	}
	return o.RejectionCode, true
}

// HasRejectionCode returns a boolean if a field has been set.
func (o *PortoutDetails) HasRejectionCode() bool {
	if o != nil && !IsNil(o.RejectionCode) {
		return true
	}

	return false
}

// SetRejectionCode gets a reference to the given int32 and assigns it to the RejectionCode field.
func (o *PortoutDetails) SetRejectionCode(v int32) {
	o.RejectionCode = &v
}

// GetServiceAddress returns the ServiceAddress field value if set, zero value otherwise.
func (o *PortoutDetails) GetServiceAddress() string {
	if o == nil || IsNil(o.ServiceAddress) {
		var ret string
		return ret
	}
	return *o.ServiceAddress
}

// GetServiceAddressOk returns a tuple with the ServiceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetServiceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAddress) {
		return nil, false
	}
	return o.ServiceAddress, true
}

// HasServiceAddress returns a boolean if a field has been set.
func (o *PortoutDetails) HasServiceAddress() bool {
	if o != nil && !IsNil(o.ServiceAddress) {
		return true
	}

	return false
}

// SetServiceAddress gets a reference to the given string and assigns it to the ServiceAddress field.
func (o *PortoutDetails) SetServiceAddress(v string) {
	o.ServiceAddress = &v
}

// GetFocDate returns the FocDate field value if set, zero value otherwise.
func (o *PortoutDetails) GetFocDate() string {
	if o == nil || IsNil(o.FocDate) {
		var ret string
		return ret
	}
	return *o.FocDate
}

// GetFocDateOk returns a tuple with the FocDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetFocDateOk() (*string, bool) {
	if o == nil || IsNil(o.FocDate) {
		return nil, false
	}
	return o.FocDate, true
}

// HasFocDate returns a boolean if a field has been set.
func (o *PortoutDetails) HasFocDate() bool {
	if o != nil && !IsNil(o.FocDate) {
		return true
	}

	return false
}

// SetFocDate gets a reference to the given string and assigns it to the FocDate field.
func (o *PortoutDetails) SetFocDate(v string) {
	o.FocDate = &v
}

// GetRequestedFocDate returns the RequestedFocDate field value if set, zero value otherwise.
func (o *PortoutDetails) GetRequestedFocDate() string {
	if o == nil || IsNil(o.RequestedFocDate) {
		var ret string
		return ret
	}
	return *o.RequestedFocDate
}

// GetRequestedFocDateOk returns a tuple with the RequestedFocDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetRequestedFocDateOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedFocDate) {
		return nil, false
	}
	return o.RequestedFocDate, true
}

// HasRequestedFocDate returns a boolean if a field has been set.
func (o *PortoutDetails) HasRequestedFocDate() bool {
	if o != nil && !IsNil(o.RequestedFocDate) {
		return true
	}

	return false
}

// SetRequestedFocDate gets a reference to the given string and assigns it to the RequestedFocDate field.
func (o *PortoutDetails) SetRequestedFocDate(v string) {
	o.RequestedFocDate = &v
}

// GetSpid returns the Spid field value if set, zero value otherwise.
func (o *PortoutDetails) GetSpid() string {
	if o == nil || IsNil(o.Spid) {
		var ret string
		return ret
	}
	return *o.Spid
}

// GetSpidOk returns a tuple with the Spid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetSpidOk() (*string, bool) {
	if o == nil || IsNil(o.Spid) {
		return nil, false
	}
	return o.Spid, true
}

// HasSpid returns a boolean if a field has been set.
func (o *PortoutDetails) HasSpid() bool {
	if o != nil && !IsNil(o.Spid) {
		return true
	}

	return false
}

// SetSpid gets a reference to the given string and assigns it to the Spid field.
func (o *PortoutDetails) SetSpid(v string) {
	o.Spid = &v
}

// GetSupportKey returns the SupportKey field value if set, zero value otherwise.
func (o *PortoutDetails) GetSupportKey() string {
	if o == nil || IsNil(o.SupportKey) {
		var ret string
		return ret
	}
	return *o.SupportKey
}

// GetSupportKeyOk returns a tuple with the SupportKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetSupportKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SupportKey) {
		return nil, false
	}
	return o.SupportKey, true
}

// HasSupportKey returns a boolean if a field has been set.
func (o *PortoutDetails) HasSupportKey() bool {
	if o != nil && !IsNil(o.SupportKey) {
		return true
	}

	return false
}

// SetSupportKey gets a reference to the given string and assigns it to the SupportKey field.
func (o *PortoutDetails) SetSupportKey(v string) {
	o.SupportKey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PortoutDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PortoutDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PortoutDetails) SetStatus(v string) {
	o.Status = &v
}

// GetAlreadyPorted returns the AlreadyPorted field value if set, zero value otherwise.
func (o *PortoutDetails) GetAlreadyPorted() bool {
	if o == nil || IsNil(o.AlreadyPorted) {
		var ret bool
		return ret
	}
	return *o.AlreadyPorted
}

// GetAlreadyPortedOk returns a tuple with the AlreadyPorted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetAlreadyPortedOk() (*bool, bool) {
	if o == nil || IsNil(o.AlreadyPorted) {
		return nil, false
	}
	return o.AlreadyPorted, true
}

// HasAlreadyPorted returns a boolean if a field has been set.
func (o *PortoutDetails) HasAlreadyPorted() bool {
	if o != nil && !IsNil(o.AlreadyPorted) {
		return true
	}

	return false
}

// SetAlreadyPorted gets a reference to the given bool and assigns it to the AlreadyPorted field.
func (o *PortoutDetails) SetAlreadyPorted(v bool) {
	o.AlreadyPorted = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PortoutDetails) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PortoutDetails) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PortoutDetails) SetUserId(v string) {
	o.UserId = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *PortoutDetails) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *PortoutDetails) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *PortoutDetails) SetVendor(v string) {
	o.Vendor = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortoutDetails) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortoutDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PortoutDetails) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetInsertedAt returns the InsertedAt field value if set, zero value otherwise.
func (o *PortoutDetails) GetInsertedAt() string {
	if o == nil || IsNil(o.InsertedAt) {
		var ret string
		return ret
	}
	return *o.InsertedAt
}

// GetInsertedAtOk returns a tuple with the InsertedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetInsertedAtOk() (*string, bool) {
	if o == nil || IsNil(o.InsertedAt) {
		return nil, false
	}
	return o.InsertedAt, true
}

// HasInsertedAt returns a boolean if a field has been set.
func (o *PortoutDetails) HasInsertedAt() bool {
	if o != nil && !IsNil(o.InsertedAt) {
		return true
	}

	return false
}

// SetInsertedAt gets a reference to the given string and assigns it to the InsertedAt field.
func (o *PortoutDetails) SetInsertedAt(v string) {
	o.InsertedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PortoutDetails) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortoutDetails) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PortoutDetails) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *PortoutDetails) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o PortoutDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortoutDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.PhoneNumbers) {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if !IsNil(o.AuthorizedName) {
		toSerialize["authorized_name"] = o.AuthorizedName
	}
	if !IsNil(o.CarrierName) {
		toSerialize["carrier_name"] = o.CarrierName
	}
	if !IsNil(o.CurrentCarrier) {
		toSerialize["current_carrier"] = o.CurrentCarrier
	}
	if !IsNil(o.EndUserName) {
		toSerialize["end_user_name"] = o.EndUserName
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Lsr) {
		toSerialize["lsr"] = o.Lsr
	}
	if !IsNil(o.Pon) {
		toSerialize["pon"] = o.Pon
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.RejectionCode) {
		toSerialize["rejection_code"] = o.RejectionCode
	}
	if !IsNil(o.ServiceAddress) {
		toSerialize["service_address"] = o.ServiceAddress
	}
	if !IsNil(o.FocDate) {
		toSerialize["foc_date"] = o.FocDate
	}
	if !IsNil(o.RequestedFocDate) {
		toSerialize["requested_foc_date"] = o.RequestedFocDate
	}
	if !IsNil(o.Spid) {
		toSerialize["spid"] = o.Spid
	}
	if !IsNil(o.SupportKey) {
		toSerialize["support_key"] = o.SupportKey
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.AlreadyPorted) {
		toSerialize["already_ported"] = o.AlreadyPorted
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.InsertedAt) {
		toSerialize["inserted_at"] = o.InsertedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePortoutDetails struct {
	value *PortoutDetails
	isSet bool
}

func (v NullablePortoutDetails) Get() *PortoutDetails {
	return v.value
}

func (v *NullablePortoutDetails) Set(val *PortoutDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePortoutDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePortoutDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortoutDetails(val *PortoutDetails) *NullablePortoutDetails {
	return &NullablePortoutDetails{value: val, isSet: true}
}

func (v NullablePortoutDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortoutDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



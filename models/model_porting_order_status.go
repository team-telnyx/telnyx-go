/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PortingOrderStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrderStatus{}

// PortingOrderStatus Porting order status
type PortingOrderStatus struct {
	// A list of 0 or more details about this porting order's status
	Details []PortingOrdersExceptionType `json:"details,omitempty"`
	// The current status of the porting order
	Value *string `json:"value,omitempty"`
}

// NewPortingOrderStatus instantiates a new PortingOrderStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrderStatus() *PortingOrderStatus {
	this := PortingOrderStatus{}
	return &this
}

// NewPortingOrderStatusWithDefaults instantiates a new PortingOrderStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrderStatusWithDefaults() *PortingOrderStatus {
	this := PortingOrderStatus{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *PortingOrderStatus) GetDetails() []PortingOrdersExceptionType {
	if o == nil || IsNil(o.Details) {
		var ret []PortingOrdersExceptionType
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderStatus) GetDetailsOk() ([]PortingOrdersExceptionType, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *PortingOrderStatus) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []PortingOrdersExceptionType and assigns it to the Details field.
func (o *PortingOrderStatus) SetDetails(v []PortingOrdersExceptionType) {
	o.Details = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PortingOrderStatus) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrderStatus) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PortingOrderStatus) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PortingOrderStatus) SetValue(v string) {
	o.Value = &v
}

func (o PortingOrderStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrderStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullablePortingOrderStatus struct {
	value *PortingOrderStatus
	isSet bool
}

func (v NullablePortingOrderStatus) Get() *PortingOrderStatus {
	return v.value
}

func (v *NullablePortingOrderStatus) Set(val *PortingOrderStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrderStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrderStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrderStatus(val *PortingOrderStatus) *NullablePortingOrderStatus {
	return &NullablePortingOrderStatus{value: val, isSet: true}
}

func (v NullablePortingOrderStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrderStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



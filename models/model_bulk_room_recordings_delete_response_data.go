/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the BulkRoomRecordingsDeleteResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkRoomRecordingsDeleteResponseData{}

// BulkRoomRecordingsDeleteResponseData struct for BulkRoomRecordingsDeleteResponseData
type BulkRoomRecordingsDeleteResponseData struct {
	// Amount of room recordings affected
	RoomRecordings *int32 `json:"room_recordings,omitempty"`
}

// NewBulkRoomRecordingsDeleteResponseData instantiates a new BulkRoomRecordingsDeleteResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkRoomRecordingsDeleteResponseData() *BulkRoomRecordingsDeleteResponseData {
	this := BulkRoomRecordingsDeleteResponseData{}
	return &this
}

// NewBulkRoomRecordingsDeleteResponseDataWithDefaults instantiates a new BulkRoomRecordingsDeleteResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkRoomRecordingsDeleteResponseDataWithDefaults() *BulkRoomRecordingsDeleteResponseData {
	this := BulkRoomRecordingsDeleteResponseData{}
	return &this
}

// GetRoomRecordings returns the RoomRecordings field value if set, zero value otherwise.
func (o *BulkRoomRecordingsDeleteResponseData) GetRoomRecordings() int32 {
	if o == nil || IsNil(o.RoomRecordings) {
		var ret int32
		return ret
	}
	return *o.RoomRecordings
}

// GetRoomRecordingsOk returns a tuple with the RoomRecordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRoomRecordingsDeleteResponseData) GetRoomRecordingsOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomRecordings) {
		return nil, false
	}
	return o.RoomRecordings, true
}

// HasRoomRecordings returns a boolean if a field has been set.
func (o *BulkRoomRecordingsDeleteResponseData) HasRoomRecordings() bool {
	if o != nil && !IsNil(o.RoomRecordings) {
		return true
	}

	return false
}

// SetRoomRecordings gets a reference to the given int32 and assigns it to the RoomRecordings field.
func (o *BulkRoomRecordingsDeleteResponseData) SetRoomRecordings(v int32) {
	o.RoomRecordings = &v
}

func (o BulkRoomRecordingsDeleteResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkRoomRecordingsDeleteResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomRecordings) {
		toSerialize["room_recordings"] = o.RoomRecordings
	}
	return toSerialize, nil
}

type NullableBulkRoomRecordingsDeleteResponseData struct {
	value *BulkRoomRecordingsDeleteResponseData
	isSet bool
}

func (v NullableBulkRoomRecordingsDeleteResponseData) Get() *BulkRoomRecordingsDeleteResponseData {
	return v.value
}

func (v *NullableBulkRoomRecordingsDeleteResponseData) Set(val *BulkRoomRecordingsDeleteResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkRoomRecordingsDeleteResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkRoomRecordingsDeleteResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkRoomRecordingsDeleteResponseData(val *BulkRoomRecordingsDeleteResponseData) *NullableBulkRoomRecordingsDeleteResponseData {
	return &NullableBulkRoomRecordingsDeleteResponseData{value: val, isSet: true}
}

func (v NullableBulkRoomRecordingsDeleteResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkRoomRecordingsDeleteResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



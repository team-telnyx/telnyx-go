/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the PortingOrdersAllowedFocWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortingOrdersAllowedFocWindow{}

// PortingOrdersAllowedFocWindow struct for PortingOrdersAllowedFocWindow
type PortingOrdersAllowedFocWindow struct {
	// ISO 8601 formatted date indicating the start of the range of foc window.
	StartedAt *time.Time `json:"started_at,omitempty"`
	// ISO 8601 formatted date indicating the end of the range of foc window
	EndedAt *time.Time `json:"ended_at,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
}

// NewPortingOrdersAllowedFocWindow instantiates a new PortingOrdersAllowedFocWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortingOrdersAllowedFocWindow() *PortingOrdersAllowedFocWindow {
	this := PortingOrdersAllowedFocWindow{}
	return &this
}

// NewPortingOrdersAllowedFocWindowWithDefaults instantiates a new PortingOrdersAllowedFocWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortingOrdersAllowedFocWindowWithDefaults() *PortingOrdersAllowedFocWindow {
	this := PortingOrdersAllowedFocWindow{}
	return &this
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *PortingOrdersAllowedFocWindow) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersAllowedFocWindow) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *PortingOrdersAllowedFocWindow) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *PortingOrdersAllowedFocWindow) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *PortingOrdersAllowedFocWindow) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersAllowedFocWindow) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *PortingOrdersAllowedFocWindow) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *PortingOrdersAllowedFocWindow) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PortingOrdersAllowedFocWindow) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortingOrdersAllowedFocWindow) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PortingOrdersAllowedFocWindow) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PortingOrdersAllowedFocWindow) SetRecordType(v string) {
	o.RecordType = &v
}

func (o PortingOrdersAllowedFocWindow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortingOrdersAllowedFocWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullablePortingOrdersAllowedFocWindow struct {
	value *PortingOrdersAllowedFocWindow
	isSet bool
}

func (v NullablePortingOrdersAllowedFocWindow) Get() *PortingOrdersAllowedFocWindow {
	return v.value
}

func (v *NullablePortingOrdersAllowedFocWindow) Set(val *PortingOrdersAllowedFocWindow) {
	v.value = val
	v.isSet = true
}

func (v NullablePortingOrdersAllowedFocWindow) IsSet() bool {
	return v.isSet
}

func (v *NullablePortingOrdersAllowedFocWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortingOrdersAllowedFocWindow(val *PortingOrdersAllowedFocWindow) *NullablePortingOrdersAllowedFocWindow {
	return &NullablePortingOrdersAllowedFocWindow{value: val, isSet: true}
}

func (v NullablePortingOrdersAllowedFocWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortingOrdersAllowedFocWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



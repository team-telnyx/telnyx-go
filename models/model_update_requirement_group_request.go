/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UpdateRequirementGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRequirementGroupRequest{}

// UpdateRequirementGroupRequest struct for UpdateRequirementGroupRequest
type UpdateRequirementGroupRequest struct {
	// Reference for the customer
	CustomerReference *string `json:"customer_reference,omitempty"`
	RegulatoryRequirements []UpdateRequirementGroupRequestRegulatoryRequirementsInner `json:"regulatory_requirements,omitempty"`
}

// NewUpdateRequirementGroupRequest instantiates a new UpdateRequirementGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRequirementGroupRequest() *UpdateRequirementGroupRequest {
	this := UpdateRequirementGroupRequest{}
	return &this
}

// NewUpdateRequirementGroupRequestWithDefaults instantiates a new UpdateRequirementGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRequirementGroupRequestWithDefaults() *UpdateRequirementGroupRequest {
	this := UpdateRequirementGroupRequest{}
	return &this
}

// GetCustomerReference returns the CustomerReference field value if set, zero value otherwise.
func (o *UpdateRequirementGroupRequest) GetCustomerReference() string {
	if o == nil || IsNil(o.CustomerReference) {
		var ret string
		return ret
	}
	return *o.CustomerReference
}

// GetCustomerReferenceOk returns a tuple with the CustomerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRequirementGroupRequest) GetCustomerReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReference) {
		return nil, false
	}
	return o.CustomerReference, true
}

// HasCustomerReference returns a boolean if a field has been set.
func (o *UpdateRequirementGroupRequest) HasCustomerReference() bool {
	if o != nil && !IsNil(o.CustomerReference) {
		return true
	}

	return false
}

// SetCustomerReference gets a reference to the given string and assigns it to the CustomerReference field.
func (o *UpdateRequirementGroupRequest) SetCustomerReference(v string) {
	o.CustomerReference = &v
}

// GetRegulatoryRequirements returns the RegulatoryRequirements field value if set, zero value otherwise.
func (o *UpdateRequirementGroupRequest) GetRegulatoryRequirements() []UpdateRequirementGroupRequestRegulatoryRequirementsInner {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		var ret []UpdateRequirementGroupRequestRegulatoryRequirementsInner
		return ret
	}
	return o.RegulatoryRequirements
}

// GetRegulatoryRequirementsOk returns a tuple with the RegulatoryRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRequirementGroupRequest) GetRegulatoryRequirementsOk() ([]UpdateRequirementGroupRequestRegulatoryRequirementsInner, bool) {
	if o == nil || IsNil(o.RegulatoryRequirements) {
		return nil, false
	}
	return o.RegulatoryRequirements, true
}

// HasRegulatoryRequirements returns a boolean if a field has been set.
func (o *UpdateRequirementGroupRequest) HasRegulatoryRequirements() bool {
	if o != nil && !IsNil(o.RegulatoryRequirements) {
		return true
	}

	return false
}

// SetRegulatoryRequirements gets a reference to the given []UpdateRequirementGroupRequestRegulatoryRequirementsInner and assigns it to the RegulatoryRequirements field.
func (o *UpdateRequirementGroupRequest) SetRegulatoryRequirements(v []UpdateRequirementGroupRequestRegulatoryRequirementsInner) {
	o.RegulatoryRequirements = v
}

func (o UpdateRequirementGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRequirementGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerReference) {
		toSerialize["customer_reference"] = o.CustomerReference
	}
	if !IsNil(o.RegulatoryRequirements) {
		toSerialize["regulatory_requirements"] = o.RegulatoryRequirements
	}
	return toSerialize, nil
}

type NullableUpdateRequirementGroupRequest struct {
	value *UpdateRequirementGroupRequest
	isSet bool
}

func (v NullableUpdateRequirementGroupRequest) Get() *UpdateRequirementGroupRequest {
	return v.value
}

func (v *NullableUpdateRequirementGroupRequest) Set(val *UpdateRequirementGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRequirementGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRequirementGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRequirementGroupRequest(val *UpdateRequirementGroupRequest) *NullableUpdateRequirementGroupRequest {
	return &NullableUpdateRequirementGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateRequirementGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRequirementGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MdrPostUsageReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MdrPostUsageReportRequest{}

// MdrPostUsageReportRequest struct for MdrPostUsageReportRequest
type MdrPostUsageReportRequest struct {
	StartDate time.Time `json:"start_date"`
	EndDate time.Time `json:"end_date"`
	AggregationType string `json:"aggregation_type"`
	Profiles *string `json:"profiles,omitempty"`
}

type _MdrPostUsageReportRequest MdrPostUsageReportRequest

// NewMdrPostUsageReportRequest instantiates a new MdrPostUsageReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMdrPostUsageReportRequest(startDate time.Time, endDate time.Time, aggregationType string) *MdrPostUsageReportRequest {
	this := MdrPostUsageReportRequest{}
	this.StartDate = startDate
	this.EndDate = endDate
	this.AggregationType = aggregationType
	return &this
}

// NewMdrPostUsageReportRequestWithDefaults instantiates a new MdrPostUsageReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMdrPostUsageReportRequestWithDefaults() *MdrPostUsageReportRequest {
	this := MdrPostUsageReportRequest{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *MdrPostUsageReportRequest) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *MdrPostUsageReportRequest) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *MdrPostUsageReportRequest) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *MdrPostUsageReportRequest) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *MdrPostUsageReportRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *MdrPostUsageReportRequest) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetAggregationType returns the AggregationType field value
func (o *MdrPostUsageReportRequest) GetAggregationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *MdrPostUsageReportRequest) GetAggregationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *MdrPostUsageReportRequest) SetAggregationType(v string) {
	o.AggregationType = v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *MdrPostUsageReportRequest) GetProfiles() string {
	if o == nil || IsNil(o.Profiles) {
		var ret string
		return ret
	}
	return *o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrPostUsageReportRequest) GetProfilesOk() (*string, bool) {
	if o == nil || IsNil(o.Profiles) {
		return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *MdrPostUsageReportRequest) HasProfiles() bool {
	if o != nil && !IsNil(o.Profiles) {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given string and assigns it to the Profiles field.
func (o *MdrPostUsageReportRequest) SetProfiles(v string) {
	o.Profiles = &v
}

func (o MdrPostUsageReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MdrPostUsageReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start_date"] = o.StartDate
	toSerialize["end_date"] = o.EndDate
	toSerialize["aggregation_type"] = o.AggregationType
	if !IsNil(o.Profiles) {
		toSerialize["profiles"] = o.Profiles
	}
	return toSerialize, nil
}

func (o *MdrPostUsageReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"start_date",
		"end_date",
		"aggregation_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMdrPostUsageReportRequest := _MdrPostUsageReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMdrPostUsageReportRequest)

	if err != nil {
		return err
	}

	*o = MdrPostUsageReportRequest(varMdrPostUsageReportRequest)

	return err
}

type NullableMdrPostUsageReportRequest struct {
	value *MdrPostUsageReportRequest
	isSet bool
}

func (v NullableMdrPostUsageReportRequest) Get() *MdrPostUsageReportRequest {
	return v.value
}

func (v *NullableMdrPostUsageReportRequest) Set(val *MdrPostUsageReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMdrPostUsageReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMdrPostUsageReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMdrPostUsageReportRequest(val *MdrPostUsageReportRequest) *NullableMdrPostUsageReportRequest {
	return &NullableMdrPostUsageReportRequest{value: val, isSet: true}
}

func (v NullableMdrPostUsageReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMdrPostUsageReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AIAssistantStartRequestVoiceSettings - The settings associated with the voice selected
type AIAssistantStartRequestVoiceSettings struct {
	ElevenLabsVoiceSettings *ElevenLabsVoiceSettings
	TelnyxVoiceSettings *TelnyxVoiceSettings
	MapmapOfStringAny *map[string]interface{}
}

// ElevenLabsVoiceSettingsAsAIAssistantStartRequestVoiceSettings is a convenience function that returns ElevenLabsVoiceSettings wrapped in AIAssistantStartRequestVoiceSettings
func ElevenLabsVoiceSettingsAsAIAssistantStartRequestVoiceSettings(v *ElevenLabsVoiceSettings) AIAssistantStartRequestVoiceSettings {
	return AIAssistantStartRequestVoiceSettings{
		ElevenLabsVoiceSettings: v,
	}
}

// TelnyxVoiceSettingsAsAIAssistantStartRequestVoiceSettings is a convenience function that returns TelnyxVoiceSettings wrapped in AIAssistantStartRequestVoiceSettings
func TelnyxVoiceSettingsAsAIAssistantStartRequestVoiceSettings(v *TelnyxVoiceSettings) AIAssistantStartRequestVoiceSettings {
	return AIAssistantStartRequestVoiceSettings{
		TelnyxVoiceSettings: v,
	}
}

// map[string]interface{}AsAIAssistantStartRequestVoiceSettings is a convenience function that returns map[string]interface{} wrapped in AIAssistantStartRequestVoiceSettings
func MapmapOfStringAnyAsAIAssistantStartRequestVoiceSettings(v *map[string]interface{}) AIAssistantStartRequestVoiceSettings {
	return AIAssistantStartRequestVoiceSettings{
		MapmapOfStringAny: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AIAssistantStartRequestVoiceSettings) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ElevenLabsVoiceSettings
	err = newStrictDecoder(data).Decode(&dst.ElevenLabsVoiceSettings)
	if err == nil {
		jsonElevenLabsVoiceSettings, _ := json.Marshal(dst.ElevenLabsVoiceSettings)
		if string(jsonElevenLabsVoiceSettings) == "{}" { // empty struct
			dst.ElevenLabsVoiceSettings = nil
		} else {
			if err = validator.Validate(dst.ElevenLabsVoiceSettings); err != nil {
				dst.ElevenLabsVoiceSettings = nil
			} else {
				match++
			}
		}
	} else {
		dst.ElevenLabsVoiceSettings = nil
	}

	// try to unmarshal data into TelnyxVoiceSettings
	err = newStrictDecoder(data).Decode(&dst.TelnyxVoiceSettings)
	if err == nil {
		jsonTelnyxVoiceSettings, _ := json.Marshal(dst.TelnyxVoiceSettings)
		if string(jsonTelnyxVoiceSettings) == "{}" { // empty struct
			dst.TelnyxVoiceSettings = nil
		} else {
			if err = validator.Validate(dst.TelnyxVoiceSettings); err != nil {
				dst.TelnyxVoiceSettings = nil
			} else {
				match++
			}
		}
	} else {
		dst.TelnyxVoiceSettings = nil
	}

	// try to unmarshal data into MapmapOfStringAny
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringAny)
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringAny); err != nil {
				dst.MapmapOfStringAny = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ElevenLabsVoiceSettings = nil
		dst.TelnyxVoiceSettings = nil
		dst.MapmapOfStringAny = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AIAssistantStartRequestVoiceSettings)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AIAssistantStartRequestVoiceSettings)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AIAssistantStartRequestVoiceSettings) MarshalJSON() ([]byte, error) {
	if src.ElevenLabsVoiceSettings != nil {
		return json.Marshal(&src.ElevenLabsVoiceSettings)
	}

	if src.TelnyxVoiceSettings != nil {
		return json.Marshal(&src.TelnyxVoiceSettings)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AIAssistantStartRequestVoiceSettings) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ElevenLabsVoiceSettings != nil {
		return obj.ElevenLabsVoiceSettings
	}

	if obj.TelnyxVoiceSettings != nil {
		return obj.TelnyxVoiceSettings
	}

	if obj.MapmapOfStringAny != nil {
		return obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AIAssistantStartRequestVoiceSettings) GetActualInstanceValue() (interface{}) {
	if obj.ElevenLabsVoiceSettings != nil {
		return *obj.ElevenLabsVoiceSettings
	}

	if obj.TelnyxVoiceSettings != nil {
		return *obj.TelnyxVoiceSettings
	}

	if obj.MapmapOfStringAny != nil {
		return *obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

type NullableAIAssistantStartRequestVoiceSettings struct {
	value *AIAssistantStartRequestVoiceSettings
	isSet bool
}

func (v NullableAIAssistantStartRequestVoiceSettings) Get() *AIAssistantStartRequestVoiceSettings {
	return v.value
}

func (v *NullableAIAssistantStartRequestVoiceSettings) Set(val *AIAssistantStartRequestVoiceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAIAssistantStartRequestVoiceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAIAssistantStartRequestVoiceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIAssistantStartRequestVoiceSettings(val *AIAssistantStartRequestVoiceSettings) *NullableAIAssistantStartRequestVoiceSettings {
	return &NullableAIAssistantStartRequestVoiceSettings{value: val, isSet: true}
}

func (v NullableAIAssistantStartRequestVoiceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIAssistantStartRequestVoiceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



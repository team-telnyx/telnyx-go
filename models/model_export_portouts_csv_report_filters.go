/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the ExportPortoutsCSVReportFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportPortoutsCSVReportFilters{}

// ExportPortoutsCSVReportFilters The filters to apply to the export port-out CSV report.
type ExportPortoutsCSVReportFilters struct {
	// The status of the port-outs to include in the report.
	StatusIn []string `json:"status__in,omitempty"`
	// The customer reference of the port-outs to include in the report.
	CustomerReferenceIn []string `json:"customer_reference__in,omitempty"`
	// The end user name of the port-outs to include in the report.
	EndUserName *string `json:"end_user_name,omitempty"`
	// A list of phone numbers that the port-outs phone numbers must overlap with.
	PhoneNumbersOverlaps []string `json:"phone_numbers__overlaps,omitempty"`
	// The date and time the port-out was created before.
	CreatedAtLt *time.Time `json:"created_at__lt,omitempty"`
	// The date and time the port-out was created after.
	CreatedAtGt *time.Time `json:"created_at__gt,omitempty"`
}

// NewExportPortoutsCSVReportFilters instantiates a new ExportPortoutsCSVReportFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportPortoutsCSVReportFilters() *ExportPortoutsCSVReportFilters {
	this := ExportPortoutsCSVReportFilters{}
	return &this
}

// NewExportPortoutsCSVReportFiltersWithDefaults instantiates a new ExportPortoutsCSVReportFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportPortoutsCSVReportFiltersWithDefaults() *ExportPortoutsCSVReportFilters {
	this := ExportPortoutsCSVReportFilters{}
	return &this
}

// GetStatusIn returns the StatusIn field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetStatusIn() []string {
	if o == nil || IsNil(o.StatusIn) {
		var ret []string
		return ret
	}
	return o.StatusIn
}

// GetStatusInOk returns a tuple with the StatusIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetStatusInOk() ([]string, bool) {
	if o == nil || IsNil(o.StatusIn) {
		return nil, false
	}
	return o.StatusIn, true
}

// HasStatusIn returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasStatusIn() bool {
	if o != nil && !IsNil(o.StatusIn) {
		return true
	}

	return false
}

// SetStatusIn gets a reference to the given []string and assigns it to the StatusIn field.
func (o *ExportPortoutsCSVReportFilters) SetStatusIn(v []string) {
	o.StatusIn = v
}

// GetCustomerReferenceIn returns the CustomerReferenceIn field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetCustomerReferenceIn() []string {
	if o == nil || IsNil(o.CustomerReferenceIn) {
		var ret []string
		return ret
	}
	return o.CustomerReferenceIn
}

// GetCustomerReferenceInOk returns a tuple with the CustomerReferenceIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetCustomerReferenceInOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomerReferenceIn) {
		return nil, false
	}
	return o.CustomerReferenceIn, true
}

// HasCustomerReferenceIn returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasCustomerReferenceIn() bool {
	if o != nil && !IsNil(o.CustomerReferenceIn) {
		return true
	}

	return false
}

// SetCustomerReferenceIn gets a reference to the given []string and assigns it to the CustomerReferenceIn field.
func (o *ExportPortoutsCSVReportFilters) SetCustomerReferenceIn(v []string) {
	o.CustomerReferenceIn = v
}

// GetEndUserName returns the EndUserName field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetEndUserName() string {
	if o == nil || IsNil(o.EndUserName) {
		var ret string
		return ret
	}
	return *o.EndUserName
}

// GetEndUserNameOk returns a tuple with the EndUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetEndUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndUserName) {
		return nil, false
	}
	return o.EndUserName, true
}

// HasEndUserName returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasEndUserName() bool {
	if o != nil && !IsNil(o.EndUserName) {
		return true
	}

	return false
}

// SetEndUserName gets a reference to the given string and assigns it to the EndUserName field.
func (o *ExportPortoutsCSVReportFilters) SetEndUserName(v string) {
	o.EndUserName = &v
}

// GetPhoneNumbersOverlaps returns the PhoneNumbersOverlaps field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetPhoneNumbersOverlaps() []string {
	if o == nil || IsNil(o.PhoneNumbersOverlaps) {
		var ret []string
		return ret
	}
	return o.PhoneNumbersOverlaps
}

// GetPhoneNumbersOverlapsOk returns a tuple with the PhoneNumbersOverlaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetPhoneNumbersOverlapsOk() ([]string, bool) {
	if o == nil || IsNil(o.PhoneNumbersOverlaps) {
		return nil, false
	}
	return o.PhoneNumbersOverlaps, true
}

// HasPhoneNumbersOverlaps returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasPhoneNumbersOverlaps() bool {
	if o != nil && !IsNil(o.PhoneNumbersOverlaps) {
		return true
	}

	return false
}

// SetPhoneNumbersOverlaps gets a reference to the given []string and assigns it to the PhoneNumbersOverlaps field.
func (o *ExportPortoutsCSVReportFilters) SetPhoneNumbersOverlaps(v []string) {
	o.PhoneNumbersOverlaps = v
}

// GetCreatedAtLt returns the CreatedAtLt field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetCreatedAtLt() time.Time {
	if o == nil || IsNil(o.CreatedAtLt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtLt
}

// GetCreatedAtLtOk returns a tuple with the CreatedAtLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetCreatedAtLtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtLt) {
		return nil, false
	}
	return o.CreatedAtLt, true
}

// HasCreatedAtLt returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasCreatedAtLt() bool {
	if o != nil && !IsNil(o.CreatedAtLt) {
		return true
	}

	return false
}

// SetCreatedAtLt gets a reference to the given time.Time and assigns it to the CreatedAtLt field.
func (o *ExportPortoutsCSVReportFilters) SetCreatedAtLt(v time.Time) {
	o.CreatedAtLt = &v
}

// GetCreatedAtGt returns the CreatedAtGt field value if set, zero value otherwise.
func (o *ExportPortoutsCSVReportFilters) GetCreatedAtGt() time.Time {
	if o == nil || IsNil(o.CreatedAtGt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtGt
}

// GetCreatedAtGtOk returns a tuple with the CreatedAtGt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportPortoutsCSVReportFilters) GetCreatedAtGtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtGt) {
		return nil, false
	}
	return o.CreatedAtGt, true
}

// HasCreatedAtGt returns a boolean if a field has been set.
func (o *ExportPortoutsCSVReportFilters) HasCreatedAtGt() bool {
	if o != nil && !IsNil(o.CreatedAtGt) {
		return true
	}

	return false
}

// SetCreatedAtGt gets a reference to the given time.Time and assigns it to the CreatedAtGt field.
func (o *ExportPortoutsCSVReportFilters) SetCreatedAtGt(v time.Time) {
	o.CreatedAtGt = &v
}

func (o ExportPortoutsCSVReportFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportPortoutsCSVReportFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusIn) {
		toSerialize["status__in"] = o.StatusIn
	}
	if !IsNil(o.CustomerReferenceIn) {
		toSerialize["customer_reference__in"] = o.CustomerReferenceIn
	}
	if !IsNil(o.EndUserName) {
		toSerialize["end_user_name"] = o.EndUserName
	}
	if !IsNil(o.PhoneNumbersOverlaps) {
		toSerialize["phone_numbers__overlaps"] = o.PhoneNumbersOverlaps
	}
	if !IsNil(o.CreatedAtLt) {
		toSerialize["created_at__lt"] = o.CreatedAtLt
	}
	if !IsNil(o.CreatedAtGt) {
		toSerialize["created_at__gt"] = o.CreatedAtGt
	}
	return toSerialize, nil
}

type NullableExportPortoutsCSVReportFilters struct {
	value *ExportPortoutsCSVReportFilters
	isSet bool
}

func (v NullableExportPortoutsCSVReportFilters) Get() *ExportPortoutsCSVReportFilters {
	return v.value
}

func (v *NullableExportPortoutsCSVReportFilters) Set(val *ExportPortoutsCSVReportFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableExportPortoutsCSVReportFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableExportPortoutsCSVReportFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportPortoutsCSVReportFilters(val *ExportPortoutsCSVReportFilters) *NullableExportPortoutsCSVReportFilters {
	return &NullableExportPortoutsCSVReportFilters{value: val, isSet: true}
}

func (v NullableExportPortoutsCSVReportFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportPortoutsCSVReportFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



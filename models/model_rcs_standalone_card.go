/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RCSStandaloneCard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RCSStandaloneCard{}

// RCSStandaloneCard Standalone card
type RCSStandaloneCard struct {
	// Orientation of the card.
	CardOrientation string `json:"card_orientation"`
	// Image preview alignment for standalone cards with horizontal layout.
	ThumbnailImageAlignment string `json:"thumbnail_image_alignment"`
	CardContent RCSCardContent `json:"card_content"`
}

type _RCSStandaloneCard RCSStandaloneCard

// NewRCSStandaloneCard instantiates a new RCSStandaloneCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRCSStandaloneCard(cardOrientation string, thumbnailImageAlignment string, cardContent RCSCardContent) *RCSStandaloneCard {
	this := RCSStandaloneCard{}
	this.CardOrientation = cardOrientation
	this.ThumbnailImageAlignment = thumbnailImageAlignment
	this.CardContent = cardContent
	return &this
}

// NewRCSStandaloneCardWithDefaults instantiates a new RCSStandaloneCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRCSStandaloneCardWithDefaults() *RCSStandaloneCard {
	this := RCSStandaloneCard{}
	return &this
}

// GetCardOrientation returns the CardOrientation field value
func (o *RCSStandaloneCard) GetCardOrientation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardOrientation
}

// GetCardOrientationOk returns a tuple with the CardOrientation field value
// and a boolean to check if the value has been set.
func (o *RCSStandaloneCard) GetCardOrientationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardOrientation, true
}

// SetCardOrientation sets field value
func (o *RCSStandaloneCard) SetCardOrientation(v string) {
	o.CardOrientation = v
}

// GetThumbnailImageAlignment returns the ThumbnailImageAlignment field value
func (o *RCSStandaloneCard) GetThumbnailImageAlignment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThumbnailImageAlignment
}

// GetThumbnailImageAlignmentOk returns a tuple with the ThumbnailImageAlignment field value
// and a boolean to check if the value has been set.
func (o *RCSStandaloneCard) GetThumbnailImageAlignmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThumbnailImageAlignment, true
}

// SetThumbnailImageAlignment sets field value
func (o *RCSStandaloneCard) SetThumbnailImageAlignment(v string) {
	o.ThumbnailImageAlignment = v
}

// GetCardContent returns the CardContent field value
func (o *RCSStandaloneCard) GetCardContent() RCSCardContent {
	if o == nil {
		var ret RCSCardContent
		return ret
	}

	return o.CardContent
}

// GetCardContentOk returns a tuple with the CardContent field value
// and a boolean to check if the value has been set.
func (o *RCSStandaloneCard) GetCardContentOk() (*RCSCardContent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardContent, true
}

// SetCardContent sets field value
func (o *RCSStandaloneCard) SetCardContent(v RCSCardContent) {
	o.CardContent = v
}

func (o RCSStandaloneCard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RCSStandaloneCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_orientation"] = o.CardOrientation
	toSerialize["thumbnail_image_alignment"] = o.ThumbnailImageAlignment
	toSerialize["card_content"] = o.CardContent
	return toSerialize, nil
}

func (o *RCSStandaloneCard) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"card_orientation",
		"thumbnail_image_alignment",
		"card_content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRCSStandaloneCard := _RCSStandaloneCard{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRCSStandaloneCard)

	if err != nil {
		return err
	}

	*o = RCSStandaloneCard(varRCSStandaloneCard)

	return err
}

type NullableRCSStandaloneCard struct {
	value *RCSStandaloneCard
	isSet bool
}

func (v NullableRCSStandaloneCard) Get() *RCSStandaloneCard {
	return v.value
}

func (v *NullableRCSStandaloneCard) Set(val *RCSStandaloneCard) {
	v.value = val
	v.isSet = true
}

func (v NullableRCSStandaloneCard) IsSet() bool {
	return v.isSet
}

func (v *NullableRCSStandaloneCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRCSStandaloneCard(val *RCSStandaloneCard) *NullableRCSStandaloneCard {
	return &NullableRCSStandaloneCard{value: val, isSet: true}
}

func (v NullableRCSStandaloneCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRCSStandaloneCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the DocReqsRequirement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocReqsRequirement{}

// DocReqsRequirement struct for DocReqsRequirement
type DocReqsRequirement struct {
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// The 2-character (ISO 3166-1 alpha-2) country code where this requirement applies
	CountryCode *string `json:"country_code,omitempty"`
	// The locality where this requirement applies
	Locality *string `json:"locality,omitempty"`
	// Indicates the phone_number_type this requirement applies to. Leave blank if this requirement applies to all number_types.
	PhoneNumberType *string `json:"phone_number_type,omitempty"`
	// Indicates whether this requirement applies to ordering, porting, or both
	Action *string `json:"action,omitempty"`
	// Lists the requirement types necessary to fulfill this requirement
	RequirementsTypes []DocReqsRequirementType `json:"requirements_types,omitempty"`
	// Identifies the associated document
	Id *string `json:"id,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewDocReqsRequirement instantiates a new DocReqsRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocReqsRequirement() *DocReqsRequirement {
	this := DocReqsRequirement{}
	return &this
}

// NewDocReqsRequirementWithDefaults instantiates a new DocReqsRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocReqsRequirementWithDefaults() *DocReqsRequirement {
	this := DocReqsRequirement{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *DocReqsRequirement) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *DocReqsRequirement) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *DocReqsRequirement) SetLocality(v string) {
	o.Locality = &v
}

// GetPhoneNumberType returns the PhoneNumberType field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetPhoneNumberType() string {
	if o == nil || IsNil(o.PhoneNumberType) {
		var ret string
		return ret
	}
	return *o.PhoneNumberType
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberType) {
		return nil, false
	}
	return o.PhoneNumberType, true
}

// HasPhoneNumberType returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasPhoneNumberType() bool {
	if o != nil && !IsNil(o.PhoneNumberType) {
		return true
	}

	return false
}

// SetPhoneNumberType gets a reference to the given string and assigns it to the PhoneNumberType field.
func (o *DocReqsRequirement) SetPhoneNumberType(v string) {
	o.PhoneNumberType = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *DocReqsRequirement) SetAction(v string) {
	o.Action = &v
}

// GetRequirementsTypes returns the RequirementsTypes field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetRequirementsTypes() []DocReqsRequirementType {
	if o == nil || IsNil(o.RequirementsTypes) {
		var ret []DocReqsRequirementType
		return ret
	}
	return o.RequirementsTypes
}

// GetRequirementsTypesOk returns a tuple with the RequirementsTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetRequirementsTypesOk() ([]DocReqsRequirementType, bool) {
	if o == nil || IsNil(o.RequirementsTypes) {
		return nil, false
	}
	return o.RequirementsTypes, true
}

// HasRequirementsTypes returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasRequirementsTypes() bool {
	if o != nil && !IsNil(o.RequirementsTypes) {
		return true
	}

	return false
}

// SetRequirementsTypes gets a reference to the given []DocReqsRequirementType and assigns it to the RequirementsTypes field.
func (o *DocReqsRequirement) SetRequirementsTypes(v []DocReqsRequirementType) {
	o.RequirementsTypes = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DocReqsRequirement) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DocReqsRequirement) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DocReqsRequirement) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocReqsRequirement) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DocReqsRequirement) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DocReqsRequirement) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o DocReqsRequirement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocReqsRequirement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.PhoneNumberType) {
		toSerialize["phone_number_type"] = o.PhoneNumberType
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.RequirementsTypes) {
		toSerialize["requirements_types"] = o.RequirementsTypes
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableDocReqsRequirement struct {
	value *DocReqsRequirement
	isSet bool
}

func (v NullableDocReqsRequirement) Get() *DocReqsRequirement {
	return v.value
}

func (v *NullableDocReqsRequirement) Set(val *DocReqsRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableDocReqsRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableDocReqsRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocReqsRequirement(val *DocReqsRequirement) *NullableDocReqsRequirement {
	return &NullableDocReqsRequirement{value: val, isSet: true}
}

func (v NullableDocReqsRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocReqsRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



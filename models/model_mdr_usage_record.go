/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MdrUsageRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MdrUsageRecord{}

// MdrUsageRecord struct for MdrUsageRecord
type MdrUsageRecord struct {
	Cost *string `json:"cost,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Product *string `json:"product,omitempty"`
	Connection *string `json:"connection,omitempty"`
	Received *string `json:"received,omitempty"`
	Delivered *string `json:"delivered,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Parts *string `json:"parts,omitempty"`
	Sent *string `json:"sent,omitempty"`
	ProfileId *string `json:"profile_id,omitempty"`
	Tags *string `json:"tags,omitempty"`
	MessageType *string `json:"message_type,omitempty"`
	TnType *string `json:"tn_type,omitempty"`
	CarrierPassthroughFee *string `json:"carrier_passthrough_fee,omitempty"`
}

// NewMdrUsageRecord instantiates a new MdrUsageRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMdrUsageRecord() *MdrUsageRecord {
	this := MdrUsageRecord{}
	return &this
}

// NewMdrUsageRecordWithDefaults instantiates a new MdrUsageRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMdrUsageRecordWithDefaults() *MdrUsageRecord {
	this := MdrUsageRecord{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetCost() string {
	if o == nil || IsNil(o.Cost) {
		var ret string
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetCostOk() (*string, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given string and assigns it to the Cost field.
func (o *MdrUsageRecord) SetCost(v string) {
	o.Cost = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *MdrUsageRecord) SetDirection(v string) {
	o.Direction = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *MdrUsageRecord) SetProduct(v string) {
	o.Product = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetConnection() string {
	if o == nil || IsNil(o.Connection) {
		var ret string
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given string and assigns it to the Connection field.
func (o *MdrUsageRecord) SetConnection(v string) {
	o.Connection = &v
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetReceived() string {
	if o == nil || IsNil(o.Received) {
		var ret string
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given string and assigns it to the Received field.
func (o *MdrUsageRecord) SetReceived(v string) {
	o.Received = &v
}

// GetDelivered returns the Delivered field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetDelivered() string {
	if o == nil || IsNil(o.Delivered) {
		var ret string
		return ret
	}
	return *o.Delivered
}

// GetDeliveredOk returns a tuple with the Delivered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetDeliveredOk() (*string, bool) {
	if o == nil || IsNil(o.Delivered) {
		return nil, false
	}
	return o.Delivered, true
}

// HasDelivered returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasDelivered() bool {
	if o != nil && !IsNil(o.Delivered) {
		return true
	}

	return false
}

// SetDelivered gets a reference to the given string and assigns it to the Delivered field.
func (o *MdrUsageRecord) SetDelivered(v string) {
	o.Delivered = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *MdrUsageRecord) SetCurrency(v string) {
	o.Currency = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetParts() string {
	if o == nil || IsNil(o.Parts) {
		var ret string
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetPartsOk() (*string, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given string and assigns it to the Parts field.
func (o *MdrUsageRecord) SetParts(v string) {
	o.Parts = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetSent() string {
	if o == nil || IsNil(o.Sent) {
		var ret string
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetSentOk() (*string, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given string and assigns it to the Sent field.
func (o *MdrUsageRecord) SetSent(v string) {
	o.Sent = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *MdrUsageRecord) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *MdrUsageRecord) SetTags(v string) {
	o.Tags = &v
}

// GetMessageType returns the MessageType field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetMessageType() string {
	if o == nil || IsNil(o.MessageType) {
		var ret string
		return ret
	}
	return *o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetMessageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MessageType) {
		return nil, false
	}
	return o.MessageType, true
}

// HasMessageType returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasMessageType() bool {
	if o != nil && !IsNil(o.MessageType) {
		return true
	}

	return false
}

// SetMessageType gets a reference to the given string and assigns it to the MessageType field.
func (o *MdrUsageRecord) SetMessageType(v string) {
	o.MessageType = &v
}

// GetTnType returns the TnType field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetTnType() string {
	if o == nil || IsNil(o.TnType) {
		var ret string
		return ret
	}
	return *o.TnType
}

// GetTnTypeOk returns a tuple with the TnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetTnTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TnType) {
		return nil, false
	}
	return o.TnType, true
}

// HasTnType returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasTnType() bool {
	if o != nil && !IsNil(o.TnType) {
		return true
	}

	return false
}

// SetTnType gets a reference to the given string and assigns it to the TnType field.
func (o *MdrUsageRecord) SetTnType(v string) {
	o.TnType = &v
}

// GetCarrierPassthroughFee returns the CarrierPassthroughFee field value if set, zero value otherwise.
func (o *MdrUsageRecord) GetCarrierPassthroughFee() string {
	if o == nil || IsNil(o.CarrierPassthroughFee) {
		var ret string
		return ret
	}
	return *o.CarrierPassthroughFee
}

// GetCarrierPassthroughFeeOk returns a tuple with the CarrierPassthroughFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdrUsageRecord) GetCarrierPassthroughFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierPassthroughFee) {
		return nil, false
	}
	return o.CarrierPassthroughFee, true
}

// HasCarrierPassthroughFee returns a boolean if a field has been set.
func (o *MdrUsageRecord) HasCarrierPassthroughFee() bool {
	if o != nil && !IsNil(o.CarrierPassthroughFee) {
		return true
	}

	return false
}

// SetCarrierPassthroughFee gets a reference to the given string and assigns it to the CarrierPassthroughFee field.
func (o *MdrUsageRecord) SetCarrierPassthroughFee(v string) {
	o.CarrierPassthroughFee = &v
}

func (o MdrUsageRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MdrUsageRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	if !IsNil(o.Delivered) {
		toSerialize["delivered"] = o.Delivered
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profile_id"] = o.ProfileId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.MessageType) {
		toSerialize["message_type"] = o.MessageType
	}
	if !IsNil(o.TnType) {
		toSerialize["tn_type"] = o.TnType
	}
	if !IsNil(o.CarrierPassthroughFee) {
		toSerialize["carrier_passthrough_fee"] = o.CarrierPassthroughFee
	}
	return toSerialize, nil
}

type NullableMdrUsageRecord struct {
	value *MdrUsageRecord
	isSet bool
}

func (v NullableMdrUsageRecord) Get() *MdrUsageRecord {
	return v.value
}

func (v *NullableMdrUsageRecord) Set(val *MdrUsageRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableMdrUsageRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableMdrUsageRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMdrUsageRecord(val *MdrUsageRecord) *NullableMdrUsageRecord {
	return &NullableMdrUsageRecord{value: val, isSet: true}
}

func (v NullableMdrUsageRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMdrUsageRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the EmergencySettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmergencySettings{}

// EmergencySettings The emergency services settings for a phone number.
type EmergencySettings struct {
	// Allows you to enable or disable emergency services on the phone number. In order to enable emergency services, you must also set an emergency_address_id.
	EmergencyEnabled *bool `json:"emergency_enabled,omitempty"`
	// Identifies the address to be used with emergency services.
	EmergencyAddressId *string `json:"emergency_address_id,omitempty"`
	// Represents the state of the number regarding emergency activation.
	EmergencyStatus *string `json:"emergency_status,omitempty"`
}

// NewEmergencySettings instantiates a new EmergencySettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmergencySettings() *EmergencySettings {
	this := EmergencySettings{}
	var emergencyEnabled bool = false
	this.EmergencyEnabled = &emergencyEnabled
	var emergencyStatus string = "disabled"
	this.EmergencyStatus = &emergencyStatus
	return &this
}

// NewEmergencySettingsWithDefaults instantiates a new EmergencySettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmergencySettingsWithDefaults() *EmergencySettings {
	this := EmergencySettings{}
	var emergencyEnabled bool = false
	this.EmergencyEnabled = &emergencyEnabled
	var emergencyStatus string = "disabled"
	this.EmergencyStatus = &emergencyStatus
	return &this
}

// GetEmergencyEnabled returns the EmergencyEnabled field value if set, zero value otherwise.
func (o *EmergencySettings) GetEmergencyEnabled() bool {
	if o == nil || IsNil(o.EmergencyEnabled) {
		var ret bool
		return ret
	}
	return *o.EmergencyEnabled
}

// GetEmergencyEnabledOk returns a tuple with the EmergencyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmergencySettings) GetEmergencyEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EmergencyEnabled) {
		return nil, false
	}
	return o.EmergencyEnabled, true
}

// HasEmergencyEnabled returns a boolean if a field has been set.
func (o *EmergencySettings) HasEmergencyEnabled() bool {
	if o != nil && !IsNil(o.EmergencyEnabled) {
		return true
	}

	return false
}

// SetEmergencyEnabled gets a reference to the given bool and assigns it to the EmergencyEnabled field.
func (o *EmergencySettings) SetEmergencyEnabled(v bool) {
	o.EmergencyEnabled = &v
}

// GetEmergencyAddressId returns the EmergencyAddressId field value if set, zero value otherwise.
func (o *EmergencySettings) GetEmergencyAddressId() string {
	if o == nil || IsNil(o.EmergencyAddressId) {
		var ret string
		return ret
	}
	return *o.EmergencyAddressId
}

// GetEmergencyAddressIdOk returns a tuple with the EmergencyAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmergencySettings) GetEmergencyAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmergencyAddressId) {
		return nil, false
	}
	return o.EmergencyAddressId, true
}

// HasEmergencyAddressId returns a boolean if a field has been set.
func (o *EmergencySettings) HasEmergencyAddressId() bool {
	if o != nil && !IsNil(o.EmergencyAddressId) {
		return true
	}

	return false
}

// SetEmergencyAddressId gets a reference to the given string and assigns it to the EmergencyAddressId field.
func (o *EmergencySettings) SetEmergencyAddressId(v string) {
	o.EmergencyAddressId = &v
}

// GetEmergencyStatus returns the EmergencyStatus field value if set, zero value otherwise.
func (o *EmergencySettings) GetEmergencyStatus() string {
	if o == nil || IsNil(o.EmergencyStatus) {
		var ret string
		return ret
	}
	return *o.EmergencyStatus
}

// GetEmergencyStatusOk returns a tuple with the EmergencyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmergencySettings) GetEmergencyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EmergencyStatus) {
		return nil, false
	}
	return o.EmergencyStatus, true
}

// HasEmergencyStatus returns a boolean if a field has been set.
func (o *EmergencySettings) HasEmergencyStatus() bool {
	if o != nil && !IsNil(o.EmergencyStatus) {
		return true
	}

	return false
}

// SetEmergencyStatus gets a reference to the given string and assigns it to the EmergencyStatus field.
func (o *EmergencySettings) SetEmergencyStatus(v string) {
	o.EmergencyStatus = &v
}

func (o EmergencySettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmergencySettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmergencyEnabled) {
		toSerialize["emergency_enabled"] = o.EmergencyEnabled
	}
	if !IsNil(o.EmergencyAddressId) {
		toSerialize["emergency_address_id"] = o.EmergencyAddressId
	}
	if !IsNil(o.EmergencyStatus) {
		toSerialize["emergency_status"] = o.EmergencyStatus
	}
	return toSerialize, nil
}

type NullableEmergencySettings struct {
	value *EmergencySettings
	isSet bool
}

func (v NullableEmergencySettings) Get() *EmergencySettings {
	return v.value
}

func (v *NullableEmergencySettings) Set(val *EmergencySettings) {
	v.value = val
	v.isSet = true
}

func (v NullableEmergencySettings) IsSet() bool {
	return v.isSet
}

func (v *NullableEmergencySettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmergencySettings(val *EmergencySettings) *NullableEmergencySettings {
	return &NullableEmergencySettings{value: val, isSet: true}
}

func (v NullableEmergencySettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmergencySettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



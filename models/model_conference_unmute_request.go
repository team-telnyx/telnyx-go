/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the ConferenceUnmuteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConferenceUnmuteRequest{}

// ConferenceUnmuteRequest struct for ConferenceUnmuteRequest
type ConferenceUnmuteRequest struct {
	// List of unique identifiers and tokens for controlling the call. Enter each call control ID to be unmuted. When empty all participants will be unmuted.
	CallControlIds []string `json:"call_control_ids,omitempty"`
}

// NewConferenceUnmuteRequest instantiates a new ConferenceUnmuteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConferenceUnmuteRequest() *ConferenceUnmuteRequest {
	this := ConferenceUnmuteRequest{}
	return &this
}

// NewConferenceUnmuteRequestWithDefaults instantiates a new ConferenceUnmuteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConferenceUnmuteRequestWithDefaults() *ConferenceUnmuteRequest {
	this := ConferenceUnmuteRequest{}
	return &this
}

// GetCallControlIds returns the CallControlIds field value if set, zero value otherwise.
func (o *ConferenceUnmuteRequest) GetCallControlIds() []string {
	if o == nil || IsNil(o.CallControlIds) {
		var ret []string
		return ret
	}
	return o.CallControlIds
}

// GetCallControlIdsOk returns a tuple with the CallControlIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceUnmuteRequest) GetCallControlIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CallControlIds) {
		return nil, false
	}
	return o.CallControlIds, true
}

// HasCallControlIds returns a boolean if a field has been set.
func (o *ConferenceUnmuteRequest) HasCallControlIds() bool {
	if o != nil && !IsNil(o.CallControlIds) {
		return true
	}

	return false
}

// SetCallControlIds gets a reference to the given []string and assigns it to the CallControlIds field.
func (o *ConferenceUnmuteRequest) SetCallControlIds(v []string) {
	o.CallControlIds = v
}

func (o ConferenceUnmuteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConferenceUnmuteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallControlIds) {
		toSerialize["call_control_ids"] = o.CallControlIds
	}
	return toSerialize, nil
}

type NullableConferenceUnmuteRequest struct {
	value *ConferenceUnmuteRequest
	isSet bool
}

func (v NullableConferenceUnmuteRequest) Get() *ConferenceUnmuteRequest {
	return v.value
}

func (v *NullableConferenceUnmuteRequest) Set(val *ConferenceUnmuteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConferenceUnmuteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConferenceUnmuteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConferenceUnmuteRequest(val *ConferenceUnmuteRequest) *NullableConferenceUnmuteRequest {
	return &NullableConferenceUnmuteRequest{value: val, isSet: true}
}

func (v NullableConferenceUnmuteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConferenceUnmuteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the WebhookPortoutStatusChangedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookPortoutStatusChangedPayload{}

// WebhookPortoutStatusChangedPayload The webhook payload for the portout.status_changed event
type WebhookPortoutStatusChangedPayload struct {
	// Identifies the port out that was moved.
	Id *string `json:"id,omitempty"`
	// The new status of the port out.
	Status *string `json:"status,omitempty"`
	// Phone numbers associated with this port-out order
	PhoneNumbers []string `json:"phone_numbers,omitempty"`
	// Carrier the number will be ported out to
	CarrierName *string `json:"carrier_name,omitempty"`
	// The new carrier SPID.
	Spid *string `json:"spid,omitempty"`
	// Identifies the user that the port-out order belongs to.
	UserId *string `json:"user_id,omitempty"`
	// The name of the port-out's end user.
	SubscriberName *string `json:"subscriber_name,omitempty"`
	// The reason why the order is being rejected by the user. If the order is authorized, this field can be left null
	RejectionReason *string `json:"rejection_reason,omitempty"`
	// The PIN that was attempted to be used to authorize the port out.
	AttemptedPin *string `json:"attempted_pin,omitempty"`
}

// NewWebhookPortoutStatusChangedPayload instantiates a new WebhookPortoutStatusChangedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookPortoutStatusChangedPayload() *WebhookPortoutStatusChangedPayload {
	this := WebhookPortoutStatusChangedPayload{}
	return &this
}

// NewWebhookPortoutStatusChangedPayloadWithDefaults instantiates a new WebhookPortoutStatusChangedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookPortoutStatusChangedPayloadWithDefaults() *WebhookPortoutStatusChangedPayload {
	this := WebhookPortoutStatusChangedPayload{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookPortoutStatusChangedPayload) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WebhookPortoutStatusChangedPayload) SetStatus(v string) {
	o.Status = &v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetPhoneNumbers() []string {
	if o == nil || IsNil(o.PhoneNumbers) {
		var ret []string
		return ret
	}
	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetPhoneNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.PhoneNumbers) {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasPhoneNumbers() bool {
	if o != nil && !IsNil(o.PhoneNumbers) {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []string and assigns it to the PhoneNumbers field.
func (o *WebhookPortoutStatusChangedPayload) SetPhoneNumbers(v []string) {
	o.PhoneNumbers = v
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetCarrierNameOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierName) {
		return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasCarrierName() bool {
	if o != nil && !IsNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *WebhookPortoutStatusChangedPayload) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetSpid returns the Spid field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetSpid() string {
	if o == nil || IsNil(o.Spid) {
		var ret string
		return ret
	}
	return *o.Spid
}

// GetSpidOk returns a tuple with the Spid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetSpidOk() (*string, bool) {
	if o == nil || IsNil(o.Spid) {
		return nil, false
	}
	return o.Spid, true
}

// HasSpid returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasSpid() bool {
	if o != nil && !IsNil(o.Spid) {
		return true
	}

	return false
}

// SetSpid gets a reference to the given string and assigns it to the Spid field.
func (o *WebhookPortoutStatusChangedPayload) SetSpid(v string) {
	o.Spid = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *WebhookPortoutStatusChangedPayload) SetUserId(v string) {
	o.UserId = &v
}

// GetSubscriberName returns the SubscriberName field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetSubscriberName() string {
	if o == nil || IsNil(o.SubscriberName) {
		var ret string
		return ret
	}
	return *o.SubscriberName
}

// GetSubscriberNameOk returns a tuple with the SubscriberName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetSubscriberNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriberName) {
		return nil, false
	}
	return o.SubscriberName, true
}

// HasSubscriberName returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasSubscriberName() bool {
	if o != nil && !IsNil(o.SubscriberName) {
		return true
	}

	return false
}

// SetSubscriberName gets a reference to the given string and assigns it to the SubscriberName field.
func (o *WebhookPortoutStatusChangedPayload) SetSubscriberName(v string) {
	o.SubscriberName = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetRejectionReason() string {
	if o == nil || IsNil(o.RejectionReason) {
		var ret string
		return ret
	}
	return *o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetRejectionReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionReason) {
		return nil, false
	}
	return o.RejectionReason, true
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasRejectionReason() bool {
	if o != nil && !IsNil(o.RejectionReason) {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given string and assigns it to the RejectionReason field.
func (o *WebhookPortoutStatusChangedPayload) SetRejectionReason(v string) {
	o.RejectionReason = &v
}

// GetAttemptedPin returns the AttemptedPin field value if set, zero value otherwise.
func (o *WebhookPortoutStatusChangedPayload) GetAttemptedPin() string {
	if o == nil || IsNil(o.AttemptedPin) {
		var ret string
		return ret
	}
	return *o.AttemptedPin
}

// GetAttemptedPinOk returns a tuple with the AttemptedPin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortoutStatusChangedPayload) GetAttemptedPinOk() (*string, bool) {
	if o == nil || IsNil(o.AttemptedPin) {
		return nil, false
	}
	return o.AttemptedPin, true
}

// HasAttemptedPin returns a boolean if a field has been set.
func (o *WebhookPortoutStatusChangedPayload) HasAttemptedPin() bool {
	if o != nil && !IsNil(o.AttemptedPin) {
		return true
	}

	return false
}

// SetAttemptedPin gets a reference to the given string and assigns it to the AttemptedPin field.
func (o *WebhookPortoutStatusChangedPayload) SetAttemptedPin(v string) {
	o.AttemptedPin = &v
}

func (o WebhookPortoutStatusChangedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookPortoutStatusChangedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PhoneNumbers) {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if !IsNil(o.CarrierName) {
		toSerialize["carrier_name"] = o.CarrierName
	}
	if !IsNil(o.Spid) {
		toSerialize["spid"] = o.Spid
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.SubscriberName) {
		toSerialize["subscriber_name"] = o.SubscriberName
	}
	if !IsNil(o.RejectionReason) {
		toSerialize["rejection_reason"] = o.RejectionReason
	}
	if !IsNil(o.AttemptedPin) {
		toSerialize["attempted_pin"] = o.AttemptedPin
	}
	return toSerialize, nil
}

type NullableWebhookPortoutStatusChangedPayload struct {
	value *WebhookPortoutStatusChangedPayload
	isSet bool
}

func (v NullableWebhookPortoutStatusChangedPayload) Get() *WebhookPortoutStatusChangedPayload {
	return v.value
}

func (v *NullableWebhookPortoutStatusChangedPayload) Set(val *WebhookPortoutStatusChangedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookPortoutStatusChangedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookPortoutStatusChangedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookPortoutStatusChangedPayload(val *WebhookPortoutStatusChangedPayload) *NullableWebhookPortoutStatusChangedPayload {
	return &NullableWebhookPortoutStatusChangedPayload{value: val, isSet: true}
}

func (v NullableWebhookPortoutStatusChangedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookPortoutStatusChangedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TranscriptionSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranscriptionSettings{}

// TranscriptionSettings struct for TranscriptionSettings
type TranscriptionSettings struct {
	// The speech to text model to be used by the voice assistant.  - `distil-whisper/distil-large-v2` is lower latency but English-only. - `openai/whisper-large-v3-turbo` is multi-lingual with automatic language detection but slightly higher latency.
	Model *string `json:"model,omitempty"`
}

// NewTranscriptionSettings instantiates a new TranscriptionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptionSettings() *TranscriptionSettings {
	this := TranscriptionSettings{}
	return &this
}

// NewTranscriptionSettingsWithDefaults instantiates a new TranscriptionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptionSettingsWithDefaults() *TranscriptionSettings {
	this := TranscriptionSettings{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *TranscriptionSettings) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionSettings) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *TranscriptionSettings) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *TranscriptionSettings) SetModel(v string) {
	o.Model = &v
}

func (o TranscriptionSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranscriptionSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

type NullableTranscriptionSettings struct {
	value *TranscriptionSettings
	isSet bool
}

func (v NullableTranscriptionSettings) Get() *TranscriptionSettings {
	return v.value
}

func (v *NullableTranscriptionSettings) Set(val *TranscriptionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionSettings(val *TranscriptionSettings) *NullableTranscriptionSettings {
	return &NullableTranscriptionSettings{value: val, isSet: true}
}

func (v NullableTranscriptionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



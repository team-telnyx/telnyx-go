/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicInternetGatewayCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicInternetGatewayCreate{}

// PublicInternetGatewayCreate struct for PublicInternetGatewayCreate
type PublicInternetGatewayCreate struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// The id of the network associated with the interface.
	NetworkId string `json:"network_id"`
	// A user specified name for the interface.
	Name *string `json:"name,omitempty"`
	Status *InterfaceStatus `json:"status,omitempty"`
	// The publically accessible ip for this interface.
	PublicIp *string `json:"public_ip,omitempty"`
	// The region the interface should be deployed to.
	RegionCode *string `json:"region_code,omitempty"`
}

type _PublicInternetGatewayCreate PublicInternetGatewayCreate

// NewPublicInternetGatewayCreate instantiates a new PublicInternetGatewayCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicInternetGatewayCreate(networkId string) *PublicInternetGatewayCreate {
	this := PublicInternetGatewayCreate{}
	this.NetworkId = networkId
	return &this
}

// NewPublicInternetGatewayCreateWithDefaults instantiates a new PublicInternetGatewayCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicInternetGatewayCreateWithDefaults() *PublicInternetGatewayCreate {
	this := PublicInternetGatewayCreate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PublicInternetGatewayCreate) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PublicInternetGatewayCreate) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PublicInternetGatewayCreate) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *PublicInternetGatewayCreate) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetNetworkId returns the NetworkId field value
func (o *PublicInternetGatewayCreate) GetNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *PublicInternetGatewayCreate) SetNetworkId(v string) {
	o.NetworkId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PublicInternetGatewayCreate) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetStatus() InterfaceStatus {
	if o == nil || IsNil(o.Status) {
		var ret InterfaceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetStatusOk() (*InterfaceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given InterfaceStatus and assigns it to the Status field.
func (o *PublicInternetGatewayCreate) SetStatus(v InterfaceStatus) {
	o.Status = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *PublicInternetGatewayCreate) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *PublicInternetGatewayCreate) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicInternetGatewayCreate) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *PublicInternetGatewayCreate) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *PublicInternetGatewayCreate) SetRegionCode(v string) {
	o.RegionCode = &v
}

func (o PublicInternetGatewayCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicInternetGatewayCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["network_id"] = o.NetworkId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.RegionCode) {
		toSerialize["region_code"] = o.RegionCode
	}
	return toSerialize, nil
}

func (o *PublicInternetGatewayCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicInternetGatewayCreate := _PublicInternetGatewayCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicInternetGatewayCreate)

	if err != nil {
		return err
	}

	*o = PublicInternetGatewayCreate(varPublicInternetGatewayCreate)

	return err
}

type NullablePublicInternetGatewayCreate struct {
	value *PublicInternetGatewayCreate
	isSet bool
}

func (v NullablePublicInternetGatewayCreate) Get() *PublicInternetGatewayCreate {
	return v.value
}

func (v *NullablePublicInternetGatewayCreate) Set(val *PublicInternetGatewayCreate) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicInternetGatewayCreate) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicInternetGatewayCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicInternetGatewayCreate(val *PublicInternetGatewayCreate) *NullablePublicInternetGatewayCreate {
	return &NullablePublicInternetGatewayCreate{value: val, isSet: true}
}

func (v NullablePublicInternetGatewayCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicInternetGatewayCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



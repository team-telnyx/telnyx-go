/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhoneNumbersJobUpdateEmergencySettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneNumbersJobUpdateEmergencySettingsRequest{}

// PhoneNumbersJobUpdateEmergencySettingsRequest struct for PhoneNumbersJobUpdateEmergencySettingsRequest
type PhoneNumbersJobUpdateEmergencySettingsRequest struct {
	PhoneNumbers []string `json:"phone_numbers"`
	// Indicates whether to enable or disable emergency services on the numbers.
	EmergencyEnabled bool `json:"emergency_enabled"`
	// Identifies the address to be used with emergency services. Required if emergency_enabled is true, must be null or omitted if emergency_enabled is false.
	EmergencyAddressId NullableString `json:"emergency_address_id,omitempty"`
}

type _PhoneNumbersJobUpdateEmergencySettingsRequest PhoneNumbersJobUpdateEmergencySettingsRequest

// NewPhoneNumbersJobUpdateEmergencySettingsRequest instantiates a new PhoneNumbersJobUpdateEmergencySettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumbersJobUpdateEmergencySettingsRequest(phoneNumbers []string, emergencyEnabled bool) *PhoneNumbersJobUpdateEmergencySettingsRequest {
	this := PhoneNumbersJobUpdateEmergencySettingsRequest{}
	this.PhoneNumbers = phoneNumbers
	this.EmergencyEnabled = emergencyEnabled
	return &this
}

// NewPhoneNumbersJobUpdateEmergencySettingsRequestWithDefaults instantiates a new PhoneNumbersJobUpdateEmergencySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumbersJobUpdateEmergencySettingsRequestWithDefaults() *PhoneNumbersJobUpdateEmergencySettingsRequest {
	this := PhoneNumbersJobUpdateEmergencySettingsRequest{}
	return &this
}

// GetPhoneNumbers returns the PhoneNumbers field value
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetPhoneNumbers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value
// and a boolean to check if the value has been set.
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetPhoneNumbersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// SetPhoneNumbers sets field value
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) SetPhoneNumbers(v []string) {
	o.PhoneNumbers = v
}

// GetEmergencyEnabled returns the EmergencyEnabled field value
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetEmergencyEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmergencyEnabled
}

// GetEmergencyEnabledOk returns a tuple with the EmergencyEnabled field value
// and a boolean to check if the value has been set.
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetEmergencyEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmergencyEnabled, true
}

// SetEmergencyEnabled sets field value
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) SetEmergencyEnabled(v bool) {
	o.EmergencyEnabled = v
}

// GetEmergencyAddressId returns the EmergencyAddressId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetEmergencyAddressId() string {
	if o == nil || IsNil(o.EmergencyAddressId.Get()) {
		var ret string
		return ret
	}
	return *o.EmergencyAddressId.Get()
}

// GetEmergencyAddressIdOk returns a tuple with the EmergencyAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) GetEmergencyAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmergencyAddressId.Get(), o.EmergencyAddressId.IsSet()
}

// HasEmergencyAddressId returns a boolean if a field has been set.
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) HasEmergencyAddressId() bool {
	if o != nil && o.EmergencyAddressId.IsSet() {
		return true
	}

	return false
}

// SetEmergencyAddressId gets a reference to the given NullableString and assigns it to the EmergencyAddressId field.
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) SetEmergencyAddressId(v string) {
	o.EmergencyAddressId.Set(&v)
}
// SetEmergencyAddressIdNil sets the value for EmergencyAddressId to be an explicit nil
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) SetEmergencyAddressIdNil() {
	o.EmergencyAddressId.Set(nil)
}

// UnsetEmergencyAddressId ensures that no value is present for EmergencyAddressId, not even an explicit nil
func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) UnsetEmergencyAddressId() {
	o.EmergencyAddressId.Unset()
}

func (o PhoneNumbersJobUpdateEmergencySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneNumbersJobUpdateEmergencySettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone_numbers"] = o.PhoneNumbers
	toSerialize["emergency_enabled"] = o.EmergencyEnabled
	if o.EmergencyAddressId.IsSet() {
		toSerialize["emergency_address_id"] = o.EmergencyAddressId.Get()
	}
	return toSerialize, nil
}

func (o *PhoneNumbersJobUpdateEmergencySettingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone_numbers",
		"emergency_enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhoneNumbersJobUpdateEmergencySettingsRequest := _PhoneNumbersJobUpdateEmergencySettingsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhoneNumbersJobUpdateEmergencySettingsRequest)

	if err != nil {
		return err
	}

	*o = PhoneNumbersJobUpdateEmergencySettingsRequest(varPhoneNumbersJobUpdateEmergencySettingsRequest)

	return err
}

type NullablePhoneNumbersJobUpdateEmergencySettingsRequest struct {
	value *PhoneNumbersJobUpdateEmergencySettingsRequest
	isSet bool
}

func (v NullablePhoneNumbersJobUpdateEmergencySettingsRequest) Get() *PhoneNumbersJobUpdateEmergencySettingsRequest {
	return v.value
}

func (v *NullablePhoneNumbersJobUpdateEmergencySettingsRequest) Set(val *PhoneNumbersJobUpdateEmergencySettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumbersJobUpdateEmergencySettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumbersJobUpdateEmergencySettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumbersJobUpdateEmergencySettingsRequest(val *PhoneNumbersJobUpdateEmergencySettingsRequest) *NullablePhoneNumbersJobUpdateEmergencySettingsRequest {
	return &NullablePhoneNumbersJobUpdateEmergencySettingsRequest{value: val, isSet: true}
}

func (v NullablePhoneNumbersJobUpdateEmergencySettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumbersJobUpdateEmergencySettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



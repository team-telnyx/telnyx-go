/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TexmlRecordingTranscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TexmlRecordingTranscription{}

// TexmlRecordingTranscription struct for TexmlRecordingTranscription
type TexmlRecordingTranscription struct {
	AccountSid *string `json:"account_sid,omitempty"`
	CallSid *string `json:"call_sid,omitempty"`
	// The version of the API that was used to make the request.
	ApiVersion *string `json:"api_version,omitempty"`
	DateCreated *string `json:"date_created,omitempty"`
	DateUpdated *string `json:"date_updated,omitempty"`
	// The duration of this recording, given in seconds.
	Duration NullableString `json:"duration,omitempty"`
	// Identifier of a resource.
	Sid *string `json:"sid,omitempty"`
	// Identifier of a resource.
	RecordingSid *string `json:"recording_sid,omitempty"`
	// The status of the recording transcriptions. The transcription text will be available only when the status is completed.
	Status *string `json:"status,omitempty"`
	// The recording's transcribed text
	TranscriptionText *string `json:"transcription_text,omitempty"`
	// The relative URI for the recording transcription resource.
	Uri *string `json:"uri,omitempty"`
}

// NewTexmlRecordingTranscription instantiates a new TexmlRecordingTranscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTexmlRecordingTranscription() *TexmlRecordingTranscription {
	this := TexmlRecordingTranscription{}
	return &this
}

// NewTexmlRecordingTranscriptionWithDefaults instantiates a new TexmlRecordingTranscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTexmlRecordingTranscriptionWithDefaults() *TexmlRecordingTranscription {
	this := TexmlRecordingTranscription{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetAccountSid() string {
	if o == nil || IsNil(o.AccountSid) {
		var ret string
		return ret
	}
	return *o.AccountSid
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetAccountSidOk() (*string, bool) {
	if o == nil || IsNil(o.AccountSid) {
		return nil, false
	}
	return o.AccountSid, true
}

// HasAccountSid returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasAccountSid() bool {
	if o != nil && !IsNil(o.AccountSid) {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given string and assigns it to the AccountSid field.
func (o *TexmlRecordingTranscription) SetAccountSid(v string) {
	o.AccountSid = &v
}

// GetCallSid returns the CallSid field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetCallSid() string {
	if o == nil || IsNil(o.CallSid) {
		var ret string
		return ret
	}
	return *o.CallSid
}

// GetCallSidOk returns a tuple with the CallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetCallSidOk() (*string, bool) {
	if o == nil || IsNil(o.CallSid) {
		return nil, false
	}
	return o.CallSid, true
}

// HasCallSid returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasCallSid() bool {
	if o != nil && !IsNil(o.CallSid) {
		return true
	}

	return false
}

// SetCallSid gets a reference to the given string and assigns it to the CallSid field.
func (o *TexmlRecordingTranscription) SetCallSid(v string) {
	o.CallSid = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *TexmlRecordingTranscription) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *TexmlRecordingTranscription) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetDateUpdated() string {
	if o == nil || IsNil(o.DateUpdated) {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetDateUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateUpdated) {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasDateUpdated() bool {
	if o != nil && !IsNil(o.DateUpdated) {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *TexmlRecordingTranscription) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TexmlRecordingTranscription) GetDuration() string {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TexmlRecordingTranscription) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *TexmlRecordingTranscription) SetDuration(v string) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *TexmlRecordingTranscription) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *TexmlRecordingTranscription) UnsetDuration() {
	o.Duration.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *TexmlRecordingTranscription) SetSid(v string) {
	o.Sid = &v
}

// GetRecordingSid returns the RecordingSid field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetRecordingSid() string {
	if o == nil || IsNil(o.RecordingSid) {
		var ret string
		return ret
	}
	return *o.RecordingSid
}

// GetRecordingSidOk returns a tuple with the RecordingSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetRecordingSidOk() (*string, bool) {
	if o == nil || IsNil(o.RecordingSid) {
		return nil, false
	}
	return o.RecordingSid, true
}

// HasRecordingSid returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasRecordingSid() bool {
	if o != nil && !IsNil(o.RecordingSid) {
		return true
	}

	return false
}

// SetRecordingSid gets a reference to the given string and assigns it to the RecordingSid field.
func (o *TexmlRecordingTranscription) SetRecordingSid(v string) {
	o.RecordingSid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TexmlRecordingTranscription) SetStatus(v string) {
	o.Status = &v
}

// GetTranscriptionText returns the TranscriptionText field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetTranscriptionText() string {
	if o == nil || IsNil(o.TranscriptionText) {
		var ret string
		return ret
	}
	return *o.TranscriptionText
}

// GetTranscriptionTextOk returns a tuple with the TranscriptionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetTranscriptionTextOk() (*string, bool) {
	if o == nil || IsNil(o.TranscriptionText) {
		return nil, false
	}
	return o.TranscriptionText, true
}

// HasTranscriptionText returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasTranscriptionText() bool {
	if o != nil && !IsNil(o.TranscriptionText) {
		return true
	}

	return false
}

// SetTranscriptionText gets a reference to the given string and assigns it to the TranscriptionText field.
func (o *TexmlRecordingTranscription) SetTranscriptionText(v string) {
	o.TranscriptionText = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *TexmlRecordingTranscription) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TexmlRecordingTranscription) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *TexmlRecordingTranscription) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *TexmlRecordingTranscription) SetUri(v string) {
	o.Uri = &v
}

func (o TexmlRecordingTranscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TexmlRecordingTranscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountSid) {
		toSerialize["account_sid"] = o.AccountSid
	}
	if !IsNil(o.CallSid) {
		toSerialize["call_sid"] = o.CallSid
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["api_version"] = o.ApiVersion
	}
	if !IsNil(o.DateCreated) {
		toSerialize["date_created"] = o.DateCreated
	}
	if !IsNil(o.DateUpdated) {
		toSerialize["date_updated"] = o.DateUpdated
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.RecordingSid) {
		toSerialize["recording_sid"] = o.RecordingSid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TranscriptionText) {
		toSerialize["transcription_text"] = o.TranscriptionText
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableTexmlRecordingTranscription struct {
	value *TexmlRecordingTranscription
	isSet bool
}

func (v NullableTexmlRecordingTranscription) Get() *TexmlRecordingTranscription {
	return v.value
}

func (v *NullableTexmlRecordingTranscription) Set(val *TexmlRecordingTranscription) {
	v.value = val
	v.isSet = true
}

func (v NullableTexmlRecordingTranscription) IsSet() bool {
	return v.isSet
}

func (v *NullableTexmlRecordingTranscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTexmlRecordingTranscription(val *TexmlRecordingTranscription) *NullableTexmlRecordingTranscription {
	return &NullableTexmlRecordingTranscription{value: val, isSet: true}
}

func (v NullableTexmlRecordingTranscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTexmlRecordingTranscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



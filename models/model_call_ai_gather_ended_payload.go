/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallAIGatherEndedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallAIGatherEndedPayload{}

// CallAIGatherEndedPayload struct for CallAIGatherEndedPayload
type CallAIGatherEndedPayload struct {
	// Call ID used to issue commands via Call Control API.
	CallControlId *string `json:"call_control_id,omitempty"`
	// Telnyx connection ID used in the call.
	ConnectionId *string `json:"connection_id,omitempty"`
	// ID that is unique to the call and can be used to correlate webhook events.
	CallLegId *string `json:"call_leg_id,omitempty"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
	CallSessionId *string `json:"call_session_id,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// Number or SIP URI placing the call.
	From *string `json:"from,omitempty"`
	// Destination number or SIP URI of the call.
	To *string `json:"to,omitempty"`
	// The history of the messages exchanged during the AI gather
	MessageHistory []CallAIGatherEndedPayloadMessageHistoryInner `json:"message_history,omitempty"`
	// The result of the AI gather, its type depends of the `parameters` provided in the command
	Result map[string]interface{} `json:"result,omitempty"`
	// Reflects how command ended.
	Status *string `json:"status,omitempty"`
}

// NewCallAIGatherEndedPayload instantiates a new CallAIGatherEndedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallAIGatherEndedPayload() *CallAIGatherEndedPayload {
	this := CallAIGatherEndedPayload{}
	return &this
}

// NewCallAIGatherEndedPayloadWithDefaults instantiates a new CallAIGatherEndedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallAIGatherEndedPayloadWithDefaults() *CallAIGatherEndedPayload {
	this := CallAIGatherEndedPayload{}
	return &this
}

// GetCallControlId returns the CallControlId field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetCallControlId() string {
	if o == nil || IsNil(o.CallControlId) {
		var ret string
		return ret
	}
	return *o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetCallControlIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallControlId) {
		return nil, false
	}
	return o.CallControlId, true
}

// HasCallControlId returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasCallControlId() bool {
	if o != nil && !IsNil(o.CallControlId) {
		return true
	}

	return false
}

// SetCallControlId gets a reference to the given string and assigns it to the CallControlId field.
func (o *CallAIGatherEndedPayload) SetCallControlId(v string) {
	o.CallControlId = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *CallAIGatherEndedPayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCallLegId returns the CallLegId field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetCallLegId() string {
	if o == nil || IsNil(o.CallLegId) {
		var ret string
		return ret
	}
	return *o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetCallLegIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallLegId) {
		return nil, false
	}
	return o.CallLegId, true
}

// HasCallLegId returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasCallLegId() bool {
	if o != nil && !IsNil(o.CallLegId) {
		return true
	}

	return false
}

// SetCallLegId gets a reference to the given string and assigns it to the CallLegId field.
func (o *CallAIGatherEndedPayload) SetCallLegId(v string) {
	o.CallLegId = &v
}

// GetCallSessionId returns the CallSessionId field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetCallSessionId() string {
	if o == nil || IsNil(o.CallSessionId) {
		var ret string
		return ret
	}
	return *o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallSessionId) {
		return nil, false
	}
	return o.CallSessionId, true
}

// HasCallSessionId returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasCallSessionId() bool {
	if o != nil && !IsNil(o.CallSessionId) {
		return true
	}

	return false
}

// SetCallSessionId gets a reference to the given string and assigns it to the CallSessionId field.
func (o *CallAIGatherEndedPayload) SetCallSessionId(v string) {
	o.CallSessionId = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *CallAIGatherEndedPayload) SetClientState(v string) {
	o.ClientState = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *CallAIGatherEndedPayload) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *CallAIGatherEndedPayload) SetTo(v string) {
	o.To = &v
}

// GetMessageHistory returns the MessageHistory field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetMessageHistory() []CallAIGatherEndedPayloadMessageHistoryInner {
	if o == nil || IsNil(o.MessageHistory) {
		var ret []CallAIGatherEndedPayloadMessageHistoryInner
		return ret
	}
	return o.MessageHistory
}

// GetMessageHistoryOk returns a tuple with the MessageHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetMessageHistoryOk() ([]CallAIGatherEndedPayloadMessageHistoryInner, bool) {
	if o == nil || IsNil(o.MessageHistory) {
		return nil, false
	}
	return o.MessageHistory, true
}

// HasMessageHistory returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasMessageHistory() bool {
	if o != nil && !IsNil(o.MessageHistory) {
		return true
	}

	return false
}

// SetMessageHistory gets a reference to the given []CallAIGatherEndedPayloadMessageHistoryInner and assigns it to the MessageHistory field.
func (o *CallAIGatherEndedPayload) SetMessageHistory(v []CallAIGatherEndedPayloadMessageHistoryInner) {
	o.MessageHistory = v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetResult() map[string]interface{} {
	if o == nil || IsNil(o.Result) {
		var ret map[string]interface{}
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return map[string]interface{}{}, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given map[string]interface{} and assigns it to the Result field.
func (o *CallAIGatherEndedPayload) SetResult(v map[string]interface{}) {
	o.Result = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CallAIGatherEndedPayload) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallAIGatherEndedPayload) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CallAIGatherEndedPayload) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CallAIGatherEndedPayload) SetStatus(v string) {
	o.Status = &v
}

func (o CallAIGatherEndedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallAIGatherEndedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallControlId) {
		toSerialize["call_control_id"] = o.CallControlId
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CallLegId) {
		toSerialize["call_leg_id"] = o.CallLegId
	}
	if !IsNil(o.CallSessionId) {
		toSerialize["call_session_id"] = o.CallSessionId
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.MessageHistory) {
		toSerialize["message_history"] = o.MessageHistory
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCallAIGatherEndedPayload struct {
	value *CallAIGatherEndedPayload
	isSet bool
}

func (v NullableCallAIGatherEndedPayload) Get() *CallAIGatherEndedPayload {
	return v.value
}

func (v *NullableCallAIGatherEndedPayload) Set(val *CallAIGatherEndedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCallAIGatherEndedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCallAIGatherEndedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallAIGatherEndedPayload(val *CallAIGatherEndedPayload) *NullableCallAIGatherEndedPayload {
	return &NullableCallAIGatherEndedPayload{value: val, isSet: true}
}

func (v NullableCallAIGatherEndedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallAIGatherEndedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



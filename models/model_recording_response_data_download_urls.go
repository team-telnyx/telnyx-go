/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the RecordingResponseDataDownloadUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordingResponseDataDownloadUrls{}

// RecordingResponseDataDownloadUrls Links to download the recording files.
type RecordingResponseDataDownloadUrls struct {
	// Link to download the recording in mp3 format.
	Mp3 *string `json:"mp3,omitempty"`
	// Link to download the recording in wav format.
	Wav *string `json:"wav,omitempty"`
}

// NewRecordingResponseDataDownloadUrls instantiates a new RecordingResponseDataDownloadUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordingResponseDataDownloadUrls() *RecordingResponseDataDownloadUrls {
	this := RecordingResponseDataDownloadUrls{}
	return &this
}

// NewRecordingResponseDataDownloadUrlsWithDefaults instantiates a new RecordingResponseDataDownloadUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordingResponseDataDownloadUrlsWithDefaults() *RecordingResponseDataDownloadUrls {
	this := RecordingResponseDataDownloadUrls{}
	return &this
}

// GetMp3 returns the Mp3 field value if set, zero value otherwise.
func (o *RecordingResponseDataDownloadUrls) GetMp3() string {
	if o == nil || IsNil(o.Mp3) {
		var ret string
		return ret
	}
	return *o.Mp3
}

// GetMp3Ok returns a tuple with the Mp3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordingResponseDataDownloadUrls) GetMp3Ok() (*string, bool) {
	if o == nil || IsNil(o.Mp3) {
		return nil, false
	}
	return o.Mp3, true
}

// HasMp3 returns a boolean if a field has been set.
func (o *RecordingResponseDataDownloadUrls) HasMp3() bool {
	if o != nil && !IsNil(o.Mp3) {
		return true
	}

	return false
}

// SetMp3 gets a reference to the given string and assigns it to the Mp3 field.
func (o *RecordingResponseDataDownloadUrls) SetMp3(v string) {
	o.Mp3 = &v
}

// GetWav returns the Wav field value if set, zero value otherwise.
func (o *RecordingResponseDataDownloadUrls) GetWav() string {
	if o == nil || IsNil(o.Wav) {
		var ret string
		return ret
	}
	return *o.Wav
}

// GetWavOk returns a tuple with the Wav field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordingResponseDataDownloadUrls) GetWavOk() (*string, bool) {
	if o == nil || IsNil(o.Wav) {
		return nil, false
	}
	return o.Wav, true
}

// HasWav returns a boolean if a field has been set.
func (o *RecordingResponseDataDownloadUrls) HasWav() bool {
	if o != nil && !IsNil(o.Wav) {
		return true
	}

	return false
}

// SetWav gets a reference to the given string and assigns it to the Wav field.
func (o *RecordingResponseDataDownloadUrls) SetWav(v string) {
	o.Wav = &v
}

func (o RecordingResponseDataDownloadUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordingResponseDataDownloadUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mp3) {
		toSerialize["mp3"] = o.Mp3
	}
	if !IsNil(o.Wav) {
		toSerialize["wav"] = o.Wav
	}
	return toSerialize, nil
}

type NullableRecordingResponseDataDownloadUrls struct {
	value *RecordingResponseDataDownloadUrls
	isSet bool
}

func (v NullableRecordingResponseDataDownloadUrls) Get() *RecordingResponseDataDownloadUrls {
	return v.value
}

func (v *NullableRecordingResponseDataDownloadUrls) Set(val *RecordingResponseDataDownloadUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordingResponseDataDownloadUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordingResponseDataDownloadUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordingResponseDataDownloadUrls(val *RecordingResponseDataDownloadUrls) *NullableRecordingResponseDataDownloadUrls {
	return &NullableRecordingResponseDataDownloadUrls{value: val, isSet: true}
}

func (v NullableRecordingResponseDataDownloadUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordingResponseDataDownloadUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



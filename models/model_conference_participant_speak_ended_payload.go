/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the ConferenceParticipantSpeakEndedPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConferenceParticipantSpeakEndedPayload{}

// ConferenceParticipantSpeakEndedPayload struct for ConferenceParticipantSpeakEndedPayload
type ConferenceParticipantSpeakEndedPayload struct {
	// Participant's call ID used to issue commands via Call Control API.
	CallControlId *string `json:"call_control_id,omitempty"`
	// ID that is unique to the call and can be used to correlate webhook events.
	CallLegId *string `json:"call_leg_id,omitempty"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
	CallSessionId *string `json:"call_session_id,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// Call Control App ID (formerly Telnyx connection ID) used in the call.
	ConnectionId *string `json:"connection_id,omitempty"`
	// ID that is unique to the call session that started the conference.
	CreatorCallSessionId *string `json:"creator_call_session_id,omitempty"`
	// ID of the conference the text was spoken in.
	ConferenceId *string `json:"conference_id,omitempty"`
	// ISO 8601 datetime of when the event occurred.
	OccurredAt *time.Time `json:"occurred_at,omitempty"`
}

// NewConferenceParticipantSpeakEndedPayload instantiates a new ConferenceParticipantSpeakEndedPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConferenceParticipantSpeakEndedPayload() *ConferenceParticipantSpeakEndedPayload {
	this := ConferenceParticipantSpeakEndedPayload{}
	return &this
}

// NewConferenceParticipantSpeakEndedPayloadWithDefaults instantiates a new ConferenceParticipantSpeakEndedPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConferenceParticipantSpeakEndedPayloadWithDefaults() *ConferenceParticipantSpeakEndedPayload {
	this := ConferenceParticipantSpeakEndedPayload{}
	return &this
}

// GetCallControlId returns the CallControlId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallControlId() string {
	if o == nil || IsNil(o.CallControlId) {
		var ret string
		return ret
	}
	return *o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallControlIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallControlId) {
		return nil, false
	}
	return o.CallControlId, true
}

// HasCallControlId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasCallControlId() bool {
	if o != nil && !IsNil(o.CallControlId) {
		return true
	}

	return false
}

// SetCallControlId gets a reference to the given string and assigns it to the CallControlId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetCallControlId(v string) {
	o.CallControlId = &v
}

// GetCallLegId returns the CallLegId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallLegId() string {
	if o == nil || IsNil(o.CallLegId) {
		var ret string
		return ret
	}
	return *o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallLegIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallLegId) {
		return nil, false
	}
	return o.CallLegId, true
}

// HasCallLegId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasCallLegId() bool {
	if o != nil && !IsNil(o.CallLegId) {
		return true
	}

	return false
}

// SetCallLegId gets a reference to the given string and assigns it to the CallLegId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetCallLegId(v string) {
	o.CallLegId = &v
}

// GetCallSessionId returns the CallSessionId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallSessionId() string {
	if o == nil || IsNil(o.CallSessionId) {
		var ret string
		return ret
	}
	return *o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallSessionId) {
		return nil, false
	}
	return o.CallSessionId, true
}

// HasCallSessionId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasCallSessionId() bool {
	if o != nil && !IsNil(o.CallSessionId) {
		return true
	}

	return false
}

// SetCallSessionId gets a reference to the given string and assigns it to the CallSessionId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetCallSessionId(v string) {
	o.CallSessionId = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *ConferenceParticipantSpeakEndedPayload) SetClientState(v string) {
	o.ClientState = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCreatorCallSessionId returns the CreatorCallSessionId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetCreatorCallSessionId() string {
	if o == nil || IsNil(o.CreatorCallSessionId) {
		var ret string
		return ret
	}
	return *o.CreatorCallSessionId
}

// GetCreatorCallSessionIdOk returns a tuple with the CreatorCallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetCreatorCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorCallSessionId) {
		return nil, false
	}
	return o.CreatorCallSessionId, true
}

// HasCreatorCallSessionId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasCreatorCallSessionId() bool {
	if o != nil && !IsNil(o.CreatorCallSessionId) {
		return true
	}

	return false
}

// SetCreatorCallSessionId gets a reference to the given string and assigns it to the CreatorCallSessionId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetCreatorCallSessionId(v string) {
	o.CreatorCallSessionId = &v
}

// GetConferenceId returns the ConferenceId field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetConferenceId() string {
	if o == nil || IsNil(o.ConferenceId) {
		var ret string
		return ret
	}
	return *o.ConferenceId
}

// GetConferenceIdOk returns a tuple with the ConferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetConferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceId) {
		return nil, false
	}
	return o.ConferenceId, true
}

// HasConferenceId returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasConferenceId() bool {
	if o != nil && !IsNil(o.ConferenceId) {
		return true
	}

	return false
}

// SetConferenceId gets a reference to the given string and assigns it to the ConferenceId field.
func (o *ConferenceParticipantSpeakEndedPayload) SetConferenceId(v string) {
	o.ConferenceId = &v
}

// GetOccurredAt returns the OccurredAt field value if set, zero value otherwise.
func (o *ConferenceParticipantSpeakEndedPayload) GetOccurredAt() time.Time {
	if o == nil || IsNil(o.OccurredAt) {
		var ret time.Time
		return ret
	}
	return *o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceParticipantSpeakEndedPayload) GetOccurredAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OccurredAt) {
		return nil, false
	}
	return o.OccurredAt, true
}

// HasOccurredAt returns a boolean if a field has been set.
func (o *ConferenceParticipantSpeakEndedPayload) HasOccurredAt() bool {
	if o != nil && !IsNil(o.OccurredAt) {
		return true
	}

	return false
}

// SetOccurredAt gets a reference to the given time.Time and assigns it to the OccurredAt field.
func (o *ConferenceParticipantSpeakEndedPayload) SetOccurredAt(v time.Time) {
	o.OccurredAt = &v
}

func (o ConferenceParticipantSpeakEndedPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConferenceParticipantSpeakEndedPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallControlId) {
		toSerialize["call_control_id"] = o.CallControlId
	}
	if !IsNil(o.CallLegId) {
		toSerialize["call_leg_id"] = o.CallLegId
	}
	if !IsNil(o.CallSessionId) {
		toSerialize["call_session_id"] = o.CallSessionId
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CreatorCallSessionId) {
		toSerialize["creator_call_session_id"] = o.CreatorCallSessionId
	}
	if !IsNil(o.ConferenceId) {
		toSerialize["conference_id"] = o.ConferenceId
	}
	if !IsNil(o.OccurredAt) {
		toSerialize["occurred_at"] = o.OccurredAt
	}
	return toSerialize, nil
}

type NullableConferenceParticipantSpeakEndedPayload struct {
	value *ConferenceParticipantSpeakEndedPayload
	isSet bool
}

func (v NullableConferenceParticipantSpeakEndedPayload) Get() *ConferenceParticipantSpeakEndedPayload {
	return v.value
}

func (v *NullableConferenceParticipantSpeakEndedPayload) Set(val *ConferenceParticipantSpeakEndedPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableConferenceParticipantSpeakEndedPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableConferenceParticipantSpeakEndedPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConferenceParticipantSpeakEndedPayload(val *ConferenceParticipantSpeakEndedPayload) *NullableConferenceParticipantSpeakEndedPayload {
	return &NullableConferenceParticipantSpeakEndedPayload{value: val, isSet: true}
}

func (v NullableConferenceParticipantSpeakEndedPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConferenceParticipantSpeakEndedPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



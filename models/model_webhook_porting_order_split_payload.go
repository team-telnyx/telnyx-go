/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the WebhookPortingOrderSplitPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookPortingOrderSplitPayload{}

// WebhookPortingOrderSplitPayload The webhook payload for the porting_order.split event
type WebhookPortingOrderSplitPayload struct {
	From *WebhookPortingOrderSplitPayloadFrom `json:"from,omitempty"`
	To *WebhookPortingOrderSplitPayloadTo `json:"to,omitempty"`
	// The list of porting phone numbers that were moved to the new porting order.
	PortingPhoneNumbers []WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner `json:"porting_phone_numbers,omitempty"`
}

// NewWebhookPortingOrderSplitPayload instantiates a new WebhookPortingOrderSplitPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookPortingOrderSplitPayload() *WebhookPortingOrderSplitPayload {
	this := WebhookPortingOrderSplitPayload{}
	return &this
}

// NewWebhookPortingOrderSplitPayloadWithDefaults instantiates a new WebhookPortingOrderSplitPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookPortingOrderSplitPayloadWithDefaults() *WebhookPortingOrderSplitPayload {
	this := WebhookPortingOrderSplitPayload{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *WebhookPortingOrderSplitPayload) GetFrom() WebhookPortingOrderSplitPayloadFrom {
	if o == nil || IsNil(o.From) {
		var ret WebhookPortingOrderSplitPayloadFrom
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderSplitPayload) GetFromOk() (*WebhookPortingOrderSplitPayloadFrom, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *WebhookPortingOrderSplitPayload) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given WebhookPortingOrderSplitPayloadFrom and assigns it to the From field.
func (o *WebhookPortingOrderSplitPayload) SetFrom(v WebhookPortingOrderSplitPayloadFrom) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *WebhookPortingOrderSplitPayload) GetTo() WebhookPortingOrderSplitPayloadTo {
	if o == nil || IsNil(o.To) {
		var ret WebhookPortingOrderSplitPayloadTo
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderSplitPayload) GetToOk() (*WebhookPortingOrderSplitPayloadTo, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *WebhookPortingOrderSplitPayload) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given WebhookPortingOrderSplitPayloadTo and assigns it to the To field.
func (o *WebhookPortingOrderSplitPayload) SetTo(v WebhookPortingOrderSplitPayloadTo) {
	o.To = &v
}

// GetPortingPhoneNumbers returns the PortingPhoneNumbers field value if set, zero value otherwise.
func (o *WebhookPortingOrderSplitPayload) GetPortingPhoneNumbers() []WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner {
	if o == nil || IsNil(o.PortingPhoneNumbers) {
		var ret []WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner
		return ret
	}
	return o.PortingPhoneNumbers
}

// GetPortingPhoneNumbersOk returns a tuple with the PortingPhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookPortingOrderSplitPayload) GetPortingPhoneNumbersOk() ([]WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner, bool) {
	if o == nil || IsNil(o.PortingPhoneNumbers) {
		return nil, false
	}
	return o.PortingPhoneNumbers, true
}

// HasPortingPhoneNumbers returns a boolean if a field has been set.
func (o *WebhookPortingOrderSplitPayload) HasPortingPhoneNumbers() bool {
	if o != nil && !IsNil(o.PortingPhoneNumbers) {
		return true
	}

	return false
}

// SetPortingPhoneNumbers gets a reference to the given []WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner and assigns it to the PortingPhoneNumbers field.
func (o *WebhookPortingOrderSplitPayload) SetPortingPhoneNumbers(v []WebhookPortingOrderSplitPayloadPortingPhoneNumbersInner) {
	o.PortingPhoneNumbers = v
}

func (o WebhookPortingOrderSplitPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookPortingOrderSplitPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.PortingPhoneNumbers) {
		toSerialize["porting_phone_numbers"] = o.PortingPhoneNumbers
	}
	return toSerialize, nil
}

type NullableWebhookPortingOrderSplitPayload struct {
	value *WebhookPortingOrderSplitPayload
	isSet bool
}

func (v NullableWebhookPortingOrderSplitPayload) Get() *WebhookPortingOrderSplitPayload {
	return v.value
}

func (v *NullableWebhookPortingOrderSplitPayload) Set(val *WebhookPortingOrderSplitPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookPortingOrderSplitPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookPortingOrderSplitPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookPortingOrderSplitPayload(val *WebhookPortingOrderSplitPayload) *NullableWebhookPortingOrderSplitPayload {
	return &NullableWebhookPortingOrderSplitPayload{value: val, isSet: true}
}

func (v NullableWebhookPortingOrderSplitPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookPortingOrderSplitPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



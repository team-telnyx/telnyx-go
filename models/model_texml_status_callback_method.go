/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)

// TexmlStatusCallbackMethod HTTP method used to send status callbacks.
type TexmlStatusCallbackMethod string

// List of TexmlStatusCallbackMethod
const (
	GET TexmlStatusCallbackMethod = "GET"
	POST TexmlStatusCallbackMethod = "POST"
)

// All allowed values of TexmlStatusCallbackMethod enum
var AllowedTexmlStatusCallbackMethodEnumValues = []TexmlStatusCallbackMethod{
	"GET",
	"POST",
}

func (v *TexmlStatusCallbackMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TexmlStatusCallbackMethod(value)
	for _, existing := range AllowedTexmlStatusCallbackMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TexmlStatusCallbackMethod", value)
}

// NewTexmlStatusCallbackMethodFromValue returns a pointer to a valid TexmlStatusCallbackMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTexmlStatusCallbackMethodFromValue(v string) (*TexmlStatusCallbackMethod, error) {
	ev := TexmlStatusCallbackMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TexmlStatusCallbackMethod: valid values are %v", v, AllowedTexmlStatusCallbackMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TexmlStatusCallbackMethod) IsValid() bool {
	for _, existing := range AllowedTexmlStatusCallbackMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TexmlStatusCallbackMethod value
func (v TexmlStatusCallbackMethod) Ptr() *TexmlStatusCallbackMethod {
	return &v
}

type NullableTexmlStatusCallbackMethod struct {
	value *TexmlStatusCallbackMethod
	isSet bool
}

func (v NullableTexmlStatusCallbackMethod) Get() *TexmlStatusCallbackMethod {
	return v.value
}

func (v *NullableTexmlStatusCallbackMethod) Set(val *TexmlStatusCallbackMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableTexmlStatusCallbackMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableTexmlStatusCallbackMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTexmlStatusCallbackMethod(val *TexmlStatusCallbackMethod) *NullableTexmlStatusCallbackMethod {
	return &NullableTexmlStatusCallbackMethod{value: val, isSet: true}
}

func (v NullableTexmlStatusCallbackMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTexmlStatusCallbackMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Settings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Settings{}

// Settings The settings associated with the authentication provider.
type Settings struct {
	// The Entity ID for the identity provider (IdP).
	IdpEntityId string `json:"idp_entity_id"`
	// The SSO target url for the identity provider (IdP).
	IdpSsoTargetUrl string `json:"idp_sso_target_url"`
	// The certificate fingerprint for the identity provider (IdP)
	IdpCertFingerprint string `json:"idp_cert_fingerprint"`
	// The algorithm used to generate the identity provider's (IdP) certificate fingerprint
	IdpCertFingerprintAlgorithm *string `json:"idp_cert_fingerprint_algorithm,omitempty"`
}

type _Settings Settings

// NewSettings instantiates a new Settings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettings(idpEntityId string, idpSsoTargetUrl string, idpCertFingerprint string) *Settings {
	this := Settings{}
	this.IdpEntityId = idpEntityId
	this.IdpSsoTargetUrl = idpSsoTargetUrl
	this.IdpCertFingerprint = idpCertFingerprint
	var idpCertFingerprintAlgorithm string = "sha1"
	this.IdpCertFingerprintAlgorithm = &idpCertFingerprintAlgorithm
	return &this
}

// NewSettingsWithDefaults instantiates a new Settings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsWithDefaults() *Settings {
	this := Settings{}
	var idpCertFingerprintAlgorithm string = "sha1"
	this.IdpCertFingerprintAlgorithm = &idpCertFingerprintAlgorithm
	return &this
}

// GetIdpEntityId returns the IdpEntityId field value
func (o *Settings) GetIdpEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpEntityId
}

// GetIdpEntityIdOk returns a tuple with the IdpEntityId field value
// and a boolean to check if the value has been set.
func (o *Settings) GetIdpEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpEntityId, true
}

// SetIdpEntityId sets field value
func (o *Settings) SetIdpEntityId(v string) {
	o.IdpEntityId = v
}

// GetIdpSsoTargetUrl returns the IdpSsoTargetUrl field value
func (o *Settings) GetIdpSsoTargetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpSsoTargetUrl
}

// GetIdpSsoTargetUrlOk returns a tuple with the IdpSsoTargetUrl field value
// and a boolean to check if the value has been set.
func (o *Settings) GetIdpSsoTargetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpSsoTargetUrl, true
}

// SetIdpSsoTargetUrl sets field value
func (o *Settings) SetIdpSsoTargetUrl(v string) {
	o.IdpSsoTargetUrl = v
}

// GetIdpCertFingerprint returns the IdpCertFingerprint field value
func (o *Settings) GetIdpCertFingerprint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpCertFingerprint
}

// GetIdpCertFingerprintOk returns a tuple with the IdpCertFingerprint field value
// and a boolean to check if the value has been set.
func (o *Settings) GetIdpCertFingerprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpCertFingerprint, true
}

// SetIdpCertFingerprint sets field value
func (o *Settings) SetIdpCertFingerprint(v string) {
	o.IdpCertFingerprint = v
}

// GetIdpCertFingerprintAlgorithm returns the IdpCertFingerprintAlgorithm field value if set, zero value otherwise.
func (o *Settings) GetIdpCertFingerprintAlgorithm() string {
	if o == nil || IsNil(o.IdpCertFingerprintAlgorithm) {
		var ret string
		return ret
	}
	return *o.IdpCertFingerprintAlgorithm
}

// GetIdpCertFingerprintAlgorithmOk returns a tuple with the IdpCertFingerprintAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetIdpCertFingerprintAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.IdpCertFingerprintAlgorithm) {
		return nil, false
	}
	return o.IdpCertFingerprintAlgorithm, true
}

// HasIdpCertFingerprintAlgorithm returns a boolean if a field has been set.
func (o *Settings) HasIdpCertFingerprintAlgorithm() bool {
	if o != nil && !IsNil(o.IdpCertFingerprintAlgorithm) {
		return true
	}

	return false
}

// SetIdpCertFingerprintAlgorithm gets a reference to the given string and assigns it to the IdpCertFingerprintAlgorithm field.
func (o *Settings) SetIdpCertFingerprintAlgorithm(v string) {
	o.IdpCertFingerprintAlgorithm = &v
}

func (o Settings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Settings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["idp_entity_id"] = o.IdpEntityId
	toSerialize["idp_sso_target_url"] = o.IdpSsoTargetUrl
	toSerialize["idp_cert_fingerprint"] = o.IdpCertFingerprint
	if !IsNil(o.IdpCertFingerprintAlgorithm) {
		toSerialize["idp_cert_fingerprint_algorithm"] = o.IdpCertFingerprintAlgorithm
	}
	return toSerialize, nil
}

func (o *Settings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"idp_entity_id",
		"idp_sso_target_url",
		"idp_cert_fingerprint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSettings := _Settings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSettings)

	if err != nil {
		return err
	}

	*o = Settings(varSettings)

	return err
}

type NullableSettings struct {
	value *Settings
	isSet bool
}

func (v NullableSettings) Get() *Settings {
	return v.value
}

func (v *NullableSettings) Set(val *Settings) {
	v.value = val
	v.isSet = true
}

func (v NullableSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettings(val *Settings) *NullableSettings {
	return &NullableSettings{value: val, isSet: true}
}

func (v NullableSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



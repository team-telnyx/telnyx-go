/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshRoomClientTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshRoomClientTokenRequest{}

// RefreshRoomClientTokenRequest struct for RefreshRoomClientTokenRequest
type RefreshRoomClientTokenRequest struct {
	// The time to live in seconds of the Client Token, after that time the Client Token is invalid and can't be used to join a Room.
	TokenTtlSecs *int32 `json:"token_ttl_secs,omitempty"`
	RefreshToken string `json:"refresh_token"`
}

type _RefreshRoomClientTokenRequest RefreshRoomClientTokenRequest

// NewRefreshRoomClientTokenRequest instantiates a new RefreshRoomClientTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshRoomClientTokenRequest(refreshToken string) *RefreshRoomClientTokenRequest {
	this := RefreshRoomClientTokenRequest{}
	var tokenTtlSecs int32 = 600
	this.TokenTtlSecs = &tokenTtlSecs
	this.RefreshToken = refreshToken
	return &this
}

// NewRefreshRoomClientTokenRequestWithDefaults instantiates a new RefreshRoomClientTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshRoomClientTokenRequestWithDefaults() *RefreshRoomClientTokenRequest {
	this := RefreshRoomClientTokenRequest{}
	var tokenTtlSecs int32 = 600
	this.TokenTtlSecs = &tokenTtlSecs
	return &this
}

// GetTokenTtlSecs returns the TokenTtlSecs field value if set, zero value otherwise.
func (o *RefreshRoomClientTokenRequest) GetTokenTtlSecs() int32 {
	if o == nil || IsNil(o.TokenTtlSecs) {
		var ret int32
		return ret
	}
	return *o.TokenTtlSecs
}

// GetTokenTtlSecsOk returns a tuple with the TokenTtlSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshRoomClientTokenRequest) GetTokenTtlSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.TokenTtlSecs) {
		return nil, false
	}
	return o.TokenTtlSecs, true
}

// HasTokenTtlSecs returns a boolean if a field has been set.
func (o *RefreshRoomClientTokenRequest) HasTokenTtlSecs() bool {
	if o != nil && !IsNil(o.TokenTtlSecs) {
		return true
	}

	return false
}

// SetTokenTtlSecs gets a reference to the given int32 and assigns it to the TokenTtlSecs field.
func (o *RefreshRoomClientTokenRequest) SetTokenTtlSecs(v int32) {
	o.TokenTtlSecs = &v
}

// GetRefreshToken returns the RefreshToken field value
func (o *RefreshRoomClientTokenRequest) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *RefreshRoomClientTokenRequest) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *RefreshRoomClientTokenRequest) SetRefreshToken(v string) {
	o.RefreshToken = v
}

func (o RefreshRoomClientTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshRoomClientTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TokenTtlSecs) {
		toSerialize["token_ttl_secs"] = o.TokenTtlSecs
	}
	toSerialize["refresh_token"] = o.RefreshToken
	return toSerialize, nil
}

func (o *RefreshRoomClientTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"refresh_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshRoomClientTokenRequest := _RefreshRoomClientTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshRoomClientTokenRequest)

	if err != nil {
		return err
	}

	*o = RefreshRoomClientTokenRequest(varRefreshRoomClientTokenRequest)

	return err
}

type NullableRefreshRoomClientTokenRequest struct {
	value *RefreshRoomClientTokenRequest
	isSet bool
}

func (v NullableRefreshRoomClientTokenRequest) Get() *RefreshRoomClientTokenRequest {
	return v.value
}

func (v *NullableRefreshRoomClientTokenRequest) Set(val *RefreshRoomClientTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshRoomClientTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshRoomClientTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshRoomClientTokenRequest(val *RefreshRoomClientTokenRequest) *NullableRefreshRoomClientTokenRequest {
	return &NullableRefreshRoomClientTokenRequest{value: val, isSet: true}
}

func (v NullableRefreshRoomClientTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshRoomClientTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CredentialOutbound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialOutbound{}

// CredentialOutbound struct for CredentialOutbound
type CredentialOutbound struct {
	// Forces all SIP calls originated on this connection to be \"parked\" instead of \"bridged\" to the destination specified on the URI. Parked calls will return ringback to the caller and will await for a Call Control command to define which action will be taken next.
	CallParkingEnabled NullableBool `json:"call_parking_enabled,omitempty"`
	// Set a phone number as the ani_override value to override caller id number on outbound calls.
	AniOverride *string `json:"ani_override,omitempty"`
	// Specifies when we apply your ani_override setting. Only applies when ani_override is not blank.
	AniOverrideType *string `json:"ani_override_type,omitempty"`
	// When set, this will limit the total number of outbound calls to phone numbers associated with this connection.
	ChannelLimit *int32 `json:"channel_limit,omitempty"`
	// When set, ringback will not wait for indication before sending ringback tone to calling party.
	InstantRingbackEnabled *bool `json:"instant_ringback_enabled,omitempty"`
	// Generate ringback tone through 183 session progress message with early media.
	GenerateRingbackTone *bool `json:"generate_ringback_tone,omitempty"`
	// A 2-character country code specifying the country whose national dialing rules should be used. For example, if set to `US` then any US number can be dialed without preprending +1 to the number. When left blank, Telnyx will try US and GB dialing rules, in that order, by default.
	Localization *string `json:"localization,omitempty"`
	// This setting only affects connections with Fax-type Outbound Voice Profiles. The setting dictates whether or not Telnyx sends a t.38 reinvite.<br/><br/> By default, Telnyx will send the re-invite. If set to `customer`, the caller is expected to send the t.38 reinvite.
	T38ReinviteSource *string `json:"t38_reinvite_source,omitempty"`
	// Identifies the associated outbound voice profile.
	OutboundVoiceProfileId *string `json:"outbound_voice_profile_id,omitempty"`
}

// NewCredentialOutbound instantiates a new CredentialOutbound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialOutbound() *CredentialOutbound {
	this := CredentialOutbound{}
	var callParkingEnabled bool = false
	this.CallParkingEnabled = *NewNullableBool(&callParkingEnabled)
	var aniOverride string = ""
	this.AniOverride = &aniOverride
	var aniOverrideType string = "always"
	this.AniOverrideType = &aniOverrideType
	var instantRingbackEnabled bool = true
	this.InstantRingbackEnabled = &instantRingbackEnabled
	var generateRingbackTone bool = false
	this.GenerateRingbackTone = &generateRingbackTone
	var localization string = "US"
	this.Localization = &localization
	var t38ReinviteSource string = "telnyx"
	this.T38ReinviteSource = &t38ReinviteSource
	return &this
}

// NewCredentialOutboundWithDefaults instantiates a new CredentialOutbound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialOutboundWithDefaults() *CredentialOutbound {
	this := CredentialOutbound{}
	var callParkingEnabled bool = false
	this.CallParkingEnabled = *NewNullableBool(&callParkingEnabled)
	var aniOverride string = ""
	this.AniOverride = &aniOverride
	var aniOverrideType string = "always"
	this.AniOverrideType = &aniOverrideType
	var instantRingbackEnabled bool = true
	this.InstantRingbackEnabled = &instantRingbackEnabled
	var generateRingbackTone bool = false
	this.GenerateRingbackTone = &generateRingbackTone
	var localization string = "US"
	this.Localization = &localization
	var t38ReinviteSource string = "telnyx"
	this.T38ReinviteSource = &t38ReinviteSource
	return &this
}

// GetCallParkingEnabled returns the CallParkingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialOutbound) GetCallParkingEnabled() bool {
	if o == nil || IsNil(o.CallParkingEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.CallParkingEnabled.Get()
}

// GetCallParkingEnabledOk returns a tuple with the CallParkingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialOutbound) GetCallParkingEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallParkingEnabled.Get(), o.CallParkingEnabled.IsSet()
}

// HasCallParkingEnabled returns a boolean if a field has been set.
func (o *CredentialOutbound) HasCallParkingEnabled() bool {
	if o != nil && o.CallParkingEnabled.IsSet() {
		return true
	}

	return false
}

// SetCallParkingEnabled gets a reference to the given NullableBool and assigns it to the CallParkingEnabled field.
func (o *CredentialOutbound) SetCallParkingEnabled(v bool) {
	o.CallParkingEnabled.Set(&v)
}
// SetCallParkingEnabledNil sets the value for CallParkingEnabled to be an explicit nil
func (o *CredentialOutbound) SetCallParkingEnabledNil() {
	o.CallParkingEnabled.Set(nil)
}

// UnsetCallParkingEnabled ensures that no value is present for CallParkingEnabled, not even an explicit nil
func (o *CredentialOutbound) UnsetCallParkingEnabled() {
	o.CallParkingEnabled.Unset()
}

// GetAniOverride returns the AniOverride field value if set, zero value otherwise.
func (o *CredentialOutbound) GetAniOverride() string {
	if o == nil || IsNil(o.AniOverride) {
		var ret string
		return ret
	}
	return *o.AniOverride
}

// GetAniOverrideOk returns a tuple with the AniOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetAniOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AniOverride) {
		return nil, false
	}
	return o.AniOverride, true
}

// HasAniOverride returns a boolean if a field has been set.
func (o *CredentialOutbound) HasAniOverride() bool {
	if o != nil && !IsNil(o.AniOverride) {
		return true
	}

	return false
}

// SetAniOverride gets a reference to the given string and assigns it to the AniOverride field.
func (o *CredentialOutbound) SetAniOverride(v string) {
	o.AniOverride = &v
}

// GetAniOverrideType returns the AniOverrideType field value if set, zero value otherwise.
func (o *CredentialOutbound) GetAniOverrideType() string {
	if o == nil || IsNil(o.AniOverrideType) {
		var ret string
		return ret
	}
	return *o.AniOverrideType
}

// GetAniOverrideTypeOk returns a tuple with the AniOverrideType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetAniOverrideTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AniOverrideType) {
		return nil, false
	}
	return o.AniOverrideType, true
}

// HasAniOverrideType returns a boolean if a field has been set.
func (o *CredentialOutbound) HasAniOverrideType() bool {
	if o != nil && !IsNil(o.AniOverrideType) {
		return true
	}

	return false
}

// SetAniOverrideType gets a reference to the given string and assigns it to the AniOverrideType field.
func (o *CredentialOutbound) SetAniOverrideType(v string) {
	o.AniOverrideType = &v
}

// GetChannelLimit returns the ChannelLimit field value if set, zero value otherwise.
func (o *CredentialOutbound) GetChannelLimit() int32 {
	if o == nil || IsNil(o.ChannelLimit) {
		var ret int32
		return ret
	}
	return *o.ChannelLimit
}

// GetChannelLimitOk returns a tuple with the ChannelLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetChannelLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelLimit) {
		return nil, false
	}
	return o.ChannelLimit, true
}

// HasChannelLimit returns a boolean if a field has been set.
func (o *CredentialOutbound) HasChannelLimit() bool {
	if o != nil && !IsNil(o.ChannelLimit) {
		return true
	}

	return false
}

// SetChannelLimit gets a reference to the given int32 and assigns it to the ChannelLimit field.
func (o *CredentialOutbound) SetChannelLimit(v int32) {
	o.ChannelLimit = &v
}

// GetInstantRingbackEnabled returns the InstantRingbackEnabled field value if set, zero value otherwise.
func (o *CredentialOutbound) GetInstantRingbackEnabled() bool {
	if o == nil || IsNil(o.InstantRingbackEnabled) {
		var ret bool
		return ret
	}
	return *o.InstantRingbackEnabled
}

// GetInstantRingbackEnabledOk returns a tuple with the InstantRingbackEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetInstantRingbackEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.InstantRingbackEnabled) {
		return nil, false
	}
	return o.InstantRingbackEnabled, true
}

// HasInstantRingbackEnabled returns a boolean if a field has been set.
func (o *CredentialOutbound) HasInstantRingbackEnabled() bool {
	if o != nil && !IsNil(o.InstantRingbackEnabled) {
		return true
	}

	return false
}

// SetInstantRingbackEnabled gets a reference to the given bool and assigns it to the InstantRingbackEnabled field.
func (o *CredentialOutbound) SetInstantRingbackEnabled(v bool) {
	o.InstantRingbackEnabled = &v
}

// GetGenerateRingbackTone returns the GenerateRingbackTone field value if set, zero value otherwise.
func (o *CredentialOutbound) GetGenerateRingbackTone() bool {
	if o == nil || IsNil(o.GenerateRingbackTone) {
		var ret bool
		return ret
	}
	return *o.GenerateRingbackTone
}

// GetGenerateRingbackToneOk returns a tuple with the GenerateRingbackTone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetGenerateRingbackToneOk() (*bool, bool) {
	if o == nil || IsNil(o.GenerateRingbackTone) {
		return nil, false
	}
	return o.GenerateRingbackTone, true
}

// HasGenerateRingbackTone returns a boolean if a field has been set.
func (o *CredentialOutbound) HasGenerateRingbackTone() bool {
	if o != nil && !IsNil(o.GenerateRingbackTone) {
		return true
	}

	return false
}

// SetGenerateRingbackTone gets a reference to the given bool and assigns it to the GenerateRingbackTone field.
func (o *CredentialOutbound) SetGenerateRingbackTone(v bool) {
	o.GenerateRingbackTone = &v
}

// GetLocalization returns the Localization field value if set, zero value otherwise.
func (o *CredentialOutbound) GetLocalization() string {
	if o == nil || IsNil(o.Localization) {
		var ret string
		return ret
	}
	return *o.Localization
}

// GetLocalizationOk returns a tuple with the Localization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetLocalizationOk() (*string, bool) {
	if o == nil || IsNil(o.Localization) {
		return nil, false
	}
	return o.Localization, true
}

// HasLocalization returns a boolean if a field has been set.
func (o *CredentialOutbound) HasLocalization() bool {
	if o != nil && !IsNil(o.Localization) {
		return true
	}

	return false
}

// SetLocalization gets a reference to the given string and assigns it to the Localization field.
func (o *CredentialOutbound) SetLocalization(v string) {
	o.Localization = &v
}

// GetT38ReinviteSource returns the T38ReinviteSource field value if set, zero value otherwise.
func (o *CredentialOutbound) GetT38ReinviteSource() string {
	if o == nil || IsNil(o.T38ReinviteSource) {
		var ret string
		return ret
	}
	return *o.T38ReinviteSource
}

// GetT38ReinviteSourceOk returns a tuple with the T38ReinviteSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetT38ReinviteSourceOk() (*string, bool) {
	if o == nil || IsNil(o.T38ReinviteSource) {
		return nil, false
	}
	return o.T38ReinviteSource, true
}

// HasT38ReinviteSource returns a boolean if a field has been set.
func (o *CredentialOutbound) HasT38ReinviteSource() bool {
	if o != nil && !IsNil(o.T38ReinviteSource) {
		return true
	}

	return false
}

// SetT38ReinviteSource gets a reference to the given string and assigns it to the T38ReinviteSource field.
func (o *CredentialOutbound) SetT38ReinviteSource(v string) {
	o.T38ReinviteSource = &v
}

// GetOutboundVoiceProfileId returns the OutboundVoiceProfileId field value if set, zero value otherwise.
func (o *CredentialOutbound) GetOutboundVoiceProfileId() string {
	if o == nil || IsNil(o.OutboundVoiceProfileId) {
		var ret string
		return ret
	}
	return *o.OutboundVoiceProfileId
}

// GetOutboundVoiceProfileIdOk returns a tuple with the OutboundVoiceProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialOutbound) GetOutboundVoiceProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundVoiceProfileId) {
		return nil, false
	}
	return o.OutboundVoiceProfileId, true
}

// HasOutboundVoiceProfileId returns a boolean if a field has been set.
func (o *CredentialOutbound) HasOutboundVoiceProfileId() bool {
	if o != nil && !IsNil(o.OutboundVoiceProfileId) {
		return true
	}

	return false
}

// SetOutboundVoiceProfileId gets a reference to the given string and assigns it to the OutboundVoiceProfileId field.
func (o *CredentialOutbound) SetOutboundVoiceProfileId(v string) {
	o.OutboundVoiceProfileId = &v
}

func (o CredentialOutbound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialOutbound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CallParkingEnabled.IsSet() {
		toSerialize["call_parking_enabled"] = o.CallParkingEnabled.Get()
	}
	if !IsNil(o.AniOverride) {
		toSerialize["ani_override"] = o.AniOverride
	}
	if !IsNil(o.AniOverrideType) {
		toSerialize["ani_override_type"] = o.AniOverrideType
	}
	if !IsNil(o.ChannelLimit) {
		toSerialize["channel_limit"] = o.ChannelLimit
	}
	if !IsNil(o.InstantRingbackEnabled) {
		toSerialize["instant_ringback_enabled"] = o.InstantRingbackEnabled
	}
	if !IsNil(o.GenerateRingbackTone) {
		toSerialize["generate_ringback_tone"] = o.GenerateRingbackTone
	}
	if !IsNil(o.Localization) {
		toSerialize["localization"] = o.Localization
	}
	if !IsNil(o.T38ReinviteSource) {
		toSerialize["t38_reinvite_source"] = o.T38ReinviteSource
	}
	if !IsNil(o.OutboundVoiceProfileId) {
		toSerialize["outbound_voice_profile_id"] = o.OutboundVoiceProfileId
	}
	return toSerialize, nil
}

type NullableCredentialOutbound struct {
	value *CredentialOutbound
	isSet bool
}

func (v NullableCredentialOutbound) Get() *CredentialOutbound {
	return v.value
}

func (v *NullableCredentialOutbound) Set(val *CredentialOutbound) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialOutbound) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialOutbound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialOutbound(val *CredentialOutbound) *NullableCredentialOutbound {
	return &NullableCredentialOutbound{value: val, isSet: true}
}

func (v NullableCredentialOutbound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialOutbound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



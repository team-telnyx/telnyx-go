/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderExternalVetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderExternalVetting{}

// OrderExternalVetting struct for OrderExternalVetting
type OrderExternalVetting struct {
	// External vetting provider ID for the brand.
	EvpId string `json:"evpId"`
	// Identifies the vetting classification.
	VettingClass string `json:"vettingClass"`
}

type _OrderExternalVetting OrderExternalVetting

// NewOrderExternalVetting instantiates a new OrderExternalVetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderExternalVetting(evpId string, vettingClass string) *OrderExternalVetting {
	this := OrderExternalVetting{}
	this.EvpId = evpId
	this.VettingClass = vettingClass
	return &this
}

// NewOrderExternalVettingWithDefaults instantiates a new OrderExternalVetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderExternalVettingWithDefaults() *OrderExternalVetting {
	this := OrderExternalVetting{}
	return &this
}

// GetEvpId returns the EvpId field value
func (o *OrderExternalVetting) GetEvpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EvpId
}

// GetEvpIdOk returns a tuple with the EvpId field value
// and a boolean to check if the value has been set.
func (o *OrderExternalVetting) GetEvpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EvpId, true
}

// SetEvpId sets field value
func (o *OrderExternalVetting) SetEvpId(v string) {
	o.EvpId = v
}

// GetVettingClass returns the VettingClass field value
func (o *OrderExternalVetting) GetVettingClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VettingClass
}

// GetVettingClassOk returns a tuple with the VettingClass field value
// and a boolean to check if the value has been set.
func (o *OrderExternalVetting) GetVettingClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VettingClass, true
}

// SetVettingClass sets field value
func (o *OrderExternalVetting) SetVettingClass(v string) {
	o.VettingClass = v
}

func (o OrderExternalVetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderExternalVetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["evpId"] = o.EvpId
	toSerialize["vettingClass"] = o.VettingClass
	return toSerialize, nil
}

func (o *OrderExternalVetting) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"evpId",
		"vettingClass",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderExternalVetting := _OrderExternalVetting{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderExternalVetting)

	if err != nil {
		return err
	}

	*o = OrderExternalVetting(varOrderExternalVetting)

	return err
}

type NullableOrderExternalVetting struct {
	value *OrderExternalVetting
	isSet bool
}

func (v NullableOrderExternalVetting) Get() *OrderExternalVetting {
	return v.value
}

func (v *NullableOrderExternalVetting) Set(val *OrderExternalVetting) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderExternalVetting) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderExternalVetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderExternalVetting(val *OrderExternalVetting) *NullableOrderExternalVetting {
	return &NullableOrderExternalVetting{value: val, isSet: true}
}

func (v NullableOrderExternalVetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderExternalVetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



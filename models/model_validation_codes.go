/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ValidationCodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationCodes{}

// ValidationCodes struct for ValidationCodes
type ValidationCodes struct {
	PhoneNumbers []ValidationCodesPhoneNumbersInner `json:"phone_numbers"`
	OrderId string `json:"order_id"`
}

type _ValidationCodes ValidationCodes

// NewValidationCodes instantiates a new ValidationCodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationCodes(phoneNumbers []ValidationCodesPhoneNumbersInner, orderId string) *ValidationCodes {
	this := ValidationCodes{}
	this.PhoneNumbers = phoneNumbers
	this.OrderId = orderId
	return &this
}

// NewValidationCodesWithDefaults instantiates a new ValidationCodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationCodesWithDefaults() *ValidationCodes {
	this := ValidationCodes{}
	return &this
}

// GetPhoneNumbers returns the PhoneNumbers field value
func (o *ValidationCodes) GetPhoneNumbers() []ValidationCodesPhoneNumbersInner {
	if o == nil {
		var ret []ValidationCodesPhoneNumbersInner
		return ret
	}

	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value
// and a boolean to check if the value has been set.
func (o *ValidationCodes) GetPhoneNumbersOk() ([]ValidationCodesPhoneNumbersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// SetPhoneNumbers sets field value
func (o *ValidationCodes) SetPhoneNumbers(v []ValidationCodesPhoneNumbersInner) {
	o.PhoneNumbers = v
}

// GetOrderId returns the OrderId field value
func (o *ValidationCodes) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *ValidationCodes) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *ValidationCodes) SetOrderId(v string) {
	o.OrderId = v
}

func (o ValidationCodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationCodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone_numbers"] = o.PhoneNumbers
	toSerialize["order_id"] = o.OrderId
	return toSerialize, nil
}

func (o *ValidationCodes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone_numbers",
		"order_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValidationCodes := _ValidationCodes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValidationCodes)

	if err != nil {
		return err
	}

	*o = ValidationCodes(varValidationCodes)

	return err
}

type NullableValidationCodes struct {
	value *ValidationCodes
	isSet bool
}

func (v NullableValidationCodes) Get() *ValidationCodes {
	return v.value
}

func (v *NullableValidationCodes) Set(val *ValidationCodes) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationCodes(val *ValidationCodes) *NullableValidationCodes {
	return &NullableValidationCodes{value: val, isSet: true}
}

func (v NullableValidationCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



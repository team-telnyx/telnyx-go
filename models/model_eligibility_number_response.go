/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the EligibilityNumberResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EligibilityNumberResponse{}

// EligibilityNumberResponse struct for EligibilityNumberResponse
type EligibilityNumberResponse struct {
	// Detailed information about the eligibility status.
	Detail *string `json:"detail,omitempty"`
	// The phone number in e164 format.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Whether the phone number is eligible for hosted messaging.
	Eligible *bool `json:"eligible,omitempty"`
	// The eligibility status of the phone number.
	EligibleStatus *string `json:"eligible_status,omitempty"`
}

// NewEligibilityNumberResponse instantiates a new EligibilityNumberResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEligibilityNumberResponse() *EligibilityNumberResponse {
	this := EligibilityNumberResponse{}
	return &this
}

// NewEligibilityNumberResponseWithDefaults instantiates a new EligibilityNumberResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEligibilityNumberResponseWithDefaults() *EligibilityNumberResponse {
	this := EligibilityNumberResponse{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *EligibilityNumberResponse) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityNumberResponse) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *EligibilityNumberResponse) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *EligibilityNumberResponse) SetDetail(v string) {
	o.Detail = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *EligibilityNumberResponse) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityNumberResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *EligibilityNumberResponse) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *EligibilityNumberResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetEligible returns the Eligible field value if set, zero value otherwise.
func (o *EligibilityNumberResponse) GetEligible() bool {
	if o == nil || IsNil(o.Eligible) {
		var ret bool
		return ret
	}
	return *o.Eligible
}

// GetEligibleOk returns a tuple with the Eligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityNumberResponse) GetEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Eligible) {
		return nil, false
	}
	return o.Eligible, true
}

// HasEligible returns a boolean if a field has been set.
func (o *EligibilityNumberResponse) HasEligible() bool {
	if o != nil && !IsNil(o.Eligible) {
		return true
	}

	return false
}

// SetEligible gets a reference to the given bool and assigns it to the Eligible field.
func (o *EligibilityNumberResponse) SetEligible(v bool) {
	o.Eligible = &v
}

// GetEligibleStatus returns the EligibleStatus field value if set, zero value otherwise.
func (o *EligibilityNumberResponse) GetEligibleStatus() string {
	if o == nil || IsNil(o.EligibleStatus) {
		var ret string
		return ret
	}
	return *o.EligibleStatus
}

// GetEligibleStatusOk returns a tuple with the EligibleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityNumberResponse) GetEligibleStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EligibleStatus) {
		return nil, false
	}
	return o.EligibleStatus, true
}

// HasEligibleStatus returns a boolean if a field has been set.
func (o *EligibilityNumberResponse) HasEligibleStatus() bool {
	if o != nil && !IsNil(o.EligibleStatus) {
		return true
	}

	return false
}

// SetEligibleStatus gets a reference to the given string and assigns it to the EligibleStatus field.
func (o *EligibilityNumberResponse) SetEligibleStatus(v string) {
	o.EligibleStatus = &v
}

func (o EligibilityNumberResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EligibilityNumberResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Eligible) {
		toSerialize["eligible"] = o.Eligible
	}
	if !IsNil(o.EligibleStatus) {
		toSerialize["eligible_status"] = o.EligibleStatus
	}
	return toSerialize, nil
}

type NullableEligibilityNumberResponse struct {
	value *EligibilityNumberResponse
	isSet bool
}

func (v NullableEligibilityNumberResponse) Get() *EligibilityNumberResponse {
	return v.value
}

func (v *NullableEligibilityNumberResponse) Set(val *EligibilityNumberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEligibilityNumberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEligibilityNumberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEligibilityNumberResponse(val *EligibilityNumberResponse) *NullableEligibilityNumberResponse {
	return &NullableEligibilityNumberResponse{value: val, isSet: true}
}

func (v NullableEligibilityNumberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEligibilityNumberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



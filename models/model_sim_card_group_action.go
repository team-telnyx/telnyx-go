/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SIMCardGroupAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SIMCardGroupAction{}

// SIMCardGroupAction This object represents a SIM card group action request. It allows tracking the current status of an operation that impacts the SIM card group and SIM card in it.
type SIMCardGroupAction struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	// The SIM card group identification.
	SimCardGroupId *string `json:"sim_card_group_id,omitempty"`
	// Represents the type of the operation requested.
	Type *string `json:"type,omitempty"`
	Status *string `json:"status,omitempty"`
	Settings *SIMCardGroupActionSettings `json:"settings,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewSIMCardGroupAction instantiates a new SIMCardGroupAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSIMCardGroupAction() *SIMCardGroupAction {
	this := SIMCardGroupAction{}
	return &this
}

// NewSIMCardGroupActionWithDefaults instantiates a new SIMCardGroupAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSIMCardGroupActionWithDefaults() *SIMCardGroupAction {
	this := SIMCardGroupAction{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SIMCardGroupAction) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *SIMCardGroupAction) SetRecordType(v string) {
	o.RecordType = &v
}

// GetSimCardGroupId returns the SimCardGroupId field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetSimCardGroupId() string {
	if o == nil || IsNil(o.SimCardGroupId) {
		var ret string
		return ret
	}
	return *o.SimCardGroupId
}

// GetSimCardGroupIdOk returns a tuple with the SimCardGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetSimCardGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SimCardGroupId) {
		return nil, false
	}
	return o.SimCardGroupId, true
}

// HasSimCardGroupId returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasSimCardGroupId() bool {
	if o != nil && !IsNil(o.SimCardGroupId) {
		return true
	}

	return false
}

// SetSimCardGroupId gets a reference to the given string and assigns it to the SimCardGroupId field.
func (o *SIMCardGroupAction) SetSimCardGroupId(v string) {
	o.SimCardGroupId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SIMCardGroupAction) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SIMCardGroupAction) SetStatus(v string) {
	o.Status = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetSettings() SIMCardGroupActionSettings {
	if o == nil || IsNil(o.Settings) {
		var ret SIMCardGroupActionSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetSettingsOk() (*SIMCardGroupActionSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given SIMCardGroupActionSettings and assigns it to the Settings field.
func (o *SIMCardGroupAction) SetSettings(v SIMCardGroupActionSettings) {
	o.Settings = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SIMCardGroupAction) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SIMCardGroupAction) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SIMCardGroupAction) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SIMCardGroupAction) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SIMCardGroupAction) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o SIMCardGroupAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SIMCardGroupAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.SimCardGroupId) {
		toSerialize["sim_card_group_id"] = o.SimCardGroupId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSIMCardGroupAction struct {
	value *SIMCardGroupAction
	isSet bool
}

func (v NullableSIMCardGroupAction) Get() *SIMCardGroupAction {
	return v.value
}

func (v *NullableSIMCardGroupAction) Set(val *SIMCardGroupAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSIMCardGroupAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSIMCardGroupAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSIMCardGroupAction(val *SIMCardGroupAction) *NullableSIMCardGroupAction {
	return &NullableSIMCardGroupAction{value: val, isSet: true}
}

func (v NullableSIMCardGroupAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSIMCardGroupAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the Release type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Release{}

// Release struct for Release
type Release struct {
	// Uniquely identifies the resource.
	TicketId *string `json:"ticket_id,omitempty"`
	TenantId *string `json:"tenant_id,omitempty"`
	// Represents the status of the release on Microsoft Teams.
	Status *string `json:"status,omitempty"`
	// A message set if there is an error with the upload process.
	ErrorMessage *string `json:"error_message,omitempty"`
	TelephoneNumbers []TnReleaseEntry `json:"telephone_numbers,omitempty"`
	// ISO 8601 formatted date indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
}

// NewRelease instantiates a new Release object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelease() *Release {
	this := Release{}
	var status string = "pending_upload"
	this.Status = &status
	return &this
}

// NewReleaseWithDefaults instantiates a new Release object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseWithDefaults() *Release {
	this := Release{}
	var status string = "pending_upload"
	this.Status = &status
	return &this
}

// GetTicketId returns the TicketId field value if set, zero value otherwise.
func (o *Release) GetTicketId() string {
	if o == nil || IsNil(o.TicketId) {
		var ret string
		return ret
	}
	return *o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetTicketIdOk() (*string, bool) {
	if o == nil || IsNil(o.TicketId) {
		return nil, false
	}
	return o.TicketId, true
}

// HasTicketId returns a boolean if a field has been set.
func (o *Release) HasTicketId() bool {
	if o != nil && !IsNil(o.TicketId) {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given string and assigns it to the TicketId field.
func (o *Release) SetTicketId(v string) {
	o.TicketId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Release) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Release) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Release) SetTenantId(v string) {
	o.TenantId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Release) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Release) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Release) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *Release) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Release) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *Release) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetTelephoneNumbers returns the TelephoneNumbers field value if set, zero value otherwise.
func (o *Release) GetTelephoneNumbers() []TnReleaseEntry {
	if o == nil || IsNil(o.TelephoneNumbers) {
		var ret []TnReleaseEntry
		return ret
	}
	return o.TelephoneNumbers
}

// GetTelephoneNumbersOk returns a tuple with the TelephoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetTelephoneNumbersOk() ([]TnReleaseEntry, bool) {
	if o == nil || IsNil(o.TelephoneNumbers) {
		return nil, false
	}
	return o.TelephoneNumbers, true
}

// HasTelephoneNumbers returns a boolean if a field has been set.
func (o *Release) HasTelephoneNumbers() bool {
	if o != nil && !IsNil(o.TelephoneNumbers) {
		return true
	}

	return false
}

// SetTelephoneNumbers gets a reference to the given []TnReleaseEntry and assigns it to the TelephoneNumbers field.
func (o *Release) SetTelephoneNumbers(v []TnReleaseEntry) {
	o.TelephoneNumbers = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Release) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Release) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Release) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Release) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o Release) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Release) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TicketId) {
		toSerialize["ticket_id"] = o.TicketId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if !IsNil(o.TelephoneNumbers) {
		toSerialize["telephone_numbers"] = o.TelephoneNumbers
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableRelease struct {
	value *Release
	isSet bool
}

func (v NullableRelease) Get() *Release {
	return v.value
}

func (v *NullableRelease) Set(val *Release) {
	v.value = val
	v.isSet = true
}

func (v NullableRelease) IsSet() bool {
	return v.isSet
}

func (v *NullableRelease) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelease(val *Release) *NullableRelease {
	return &NullableRelease{value: val, isSet: true}
}

func (v NullableRelease) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelease) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



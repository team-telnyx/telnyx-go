/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MobileNetworkOperator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileNetworkOperator{}

// MobileNetworkOperator struct for MobileNetworkOperator
type MobileNetworkOperator struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// The network operator name.
	Name *string `json:"name,omitempty"`
	// TADIG stands for Transferred Account Data Interchange Group. The TADIG code is a unique identifier for network operators in GSM mobile networks.
	Tadig *string `json:"tadig,omitempty"`
	// The mobile operator two-character (ISO 3166-1 alpha-2) origin country code.
	CountryCode *string `json:"country_code,omitempty"`
	// MCC stands for Mobile Country Code. It's a three decimal digit that identifies a country.<br/><br/> This code is commonly seen joined with a Mobile Network Code (MNC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.
	Mcc *string `json:"mcc,omitempty"`
	// MNC stands for Mobile Network Code. It's a two to three decimal digits that identify a network.<br/><br/>  This code is commonly seen joined with a Mobile Country Code (MCC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.
	Mnc *string `json:"mnc,omitempty"`
	// Indicate whether the mobile network operator can be set as preferred in the Network Preferences API.
	NetworkPreferencesEnabled *bool `json:"network_preferences_enabled,omitempty"`
}

// NewMobileNetworkOperator instantiates a new MobileNetworkOperator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileNetworkOperator() *MobileNetworkOperator {
	this := MobileNetworkOperator{}
	return &this
}

// NewMobileNetworkOperatorWithDefaults instantiates a new MobileNetworkOperator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileNetworkOperatorWithDefaults() *MobileNetworkOperator {
	this := MobileNetworkOperator{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MobileNetworkOperator) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *MobileNetworkOperator) SetRecordType(v string) {
	o.RecordType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileNetworkOperator) SetName(v string) {
	o.Name = &v
}

// GetTadig returns the Tadig field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetTadig() string {
	if o == nil || IsNil(o.Tadig) {
		var ret string
		return ret
	}
	return *o.Tadig
}

// GetTadigOk returns a tuple with the Tadig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetTadigOk() (*string, bool) {
	if o == nil || IsNil(o.Tadig) {
		return nil, false
	}
	return o.Tadig, true
}

// HasTadig returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasTadig() bool {
	if o != nil && !IsNil(o.Tadig) {
		return true
	}

	return false
}

// SetTadig gets a reference to the given string and assigns it to the Tadig field.
func (o *MobileNetworkOperator) SetTadig(v string) {
	o.Tadig = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *MobileNetworkOperator) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetMcc returns the Mcc field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetMcc() string {
	if o == nil || IsNil(o.Mcc) {
		var ret string
		return ret
	}
	return *o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetMccOk() (*string, bool) {
	if o == nil || IsNil(o.Mcc) {
		return nil, false
	}
	return o.Mcc, true
}

// HasMcc returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasMcc() bool {
	if o != nil && !IsNil(o.Mcc) {
		return true
	}

	return false
}

// SetMcc gets a reference to the given string and assigns it to the Mcc field.
func (o *MobileNetworkOperator) SetMcc(v string) {
	o.Mcc = &v
}

// GetMnc returns the Mnc field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetMnc() string {
	if o == nil || IsNil(o.Mnc) {
		var ret string
		return ret
	}
	return *o.Mnc
}

// GetMncOk returns a tuple with the Mnc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetMncOk() (*string, bool) {
	if o == nil || IsNil(o.Mnc) {
		return nil, false
	}
	return o.Mnc, true
}

// HasMnc returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasMnc() bool {
	if o != nil && !IsNil(o.Mnc) {
		return true
	}

	return false
}

// SetMnc gets a reference to the given string and assigns it to the Mnc field.
func (o *MobileNetworkOperator) SetMnc(v string) {
	o.Mnc = &v
}

// GetNetworkPreferencesEnabled returns the NetworkPreferencesEnabled field value if set, zero value otherwise.
func (o *MobileNetworkOperator) GetNetworkPreferencesEnabled() bool {
	if o == nil || IsNil(o.NetworkPreferencesEnabled) {
		var ret bool
		return ret
	}
	return *o.NetworkPreferencesEnabled
}

// GetNetworkPreferencesEnabledOk returns a tuple with the NetworkPreferencesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNetworkOperator) GetNetworkPreferencesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkPreferencesEnabled) {
		return nil, false
	}
	return o.NetworkPreferencesEnabled, true
}

// HasNetworkPreferencesEnabled returns a boolean if a field has been set.
func (o *MobileNetworkOperator) HasNetworkPreferencesEnabled() bool {
	if o != nil && !IsNil(o.NetworkPreferencesEnabled) {
		return true
	}

	return false
}

// SetNetworkPreferencesEnabled gets a reference to the given bool and assigns it to the NetworkPreferencesEnabled field.
func (o *MobileNetworkOperator) SetNetworkPreferencesEnabled(v bool) {
	o.NetworkPreferencesEnabled = &v
}

func (o MobileNetworkOperator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileNetworkOperator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Tadig) {
		toSerialize["tadig"] = o.Tadig
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Mcc) {
		toSerialize["mcc"] = o.Mcc
	}
	if !IsNil(o.Mnc) {
		toSerialize["mnc"] = o.Mnc
	}
	if !IsNil(o.NetworkPreferencesEnabled) {
		toSerialize["network_preferences_enabled"] = o.NetworkPreferencesEnabled
	}
	return toSerialize, nil
}

type NullableMobileNetworkOperator struct {
	value *MobileNetworkOperator
	isSet bool
}

func (v NullableMobileNetworkOperator) Get() *MobileNetworkOperator {
	return v.value
}

func (v *NullableMobileNetworkOperator) Set(val *MobileNetworkOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileNetworkOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileNetworkOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileNetworkOperator(val *MobileNetworkOperator) *NullableMobileNetworkOperator {
	return &NullableMobileNetworkOperator{value: val, isSet: true}
}

func (v NullableMobileNetworkOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileNetworkOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



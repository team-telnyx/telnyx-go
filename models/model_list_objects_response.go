/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the ListObjectsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListObjectsResponse{}

// ListObjectsResponse struct for ListObjectsResponse
type ListObjectsResponse struct {
	Name *string `json:"Name,omitempty"`
	Contents []ListObjectsResponseContentsInner `json:"Contents,omitempty"`
}

// NewListObjectsResponse instantiates a new ListObjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListObjectsResponse() *ListObjectsResponse {
	this := ListObjectsResponse{}
	return &this
}

// NewListObjectsResponseWithDefaults instantiates a new ListObjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListObjectsResponseWithDefaults() *ListObjectsResponse {
	this := ListObjectsResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListObjectsResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListObjectsResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListObjectsResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListObjectsResponse) SetName(v string) {
	o.Name = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *ListObjectsResponse) GetContents() []ListObjectsResponseContentsInner {
	if o == nil || IsNil(o.Contents) {
		var ret []ListObjectsResponseContentsInner
		return ret
	}
	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListObjectsResponse) GetContentsOk() ([]ListObjectsResponseContentsInner, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *ListObjectsResponse) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given []ListObjectsResponseContentsInner and assigns it to the Contents field.
func (o *ListObjectsResponse) SetContents(v []ListObjectsResponseContentsInner) {
	o.Contents = v
}

func (o ListObjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListObjectsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Contents) {
		toSerialize["Contents"] = o.Contents
	}
	return toSerialize, nil
}

type NullableListObjectsResponse struct {
	value *ListObjectsResponse
	isSet bool
}

func (v NullableListObjectsResponse) Get() *ListObjectsResponse {
	return v.value
}

func (v *NullableListObjectsResponse) Set(val *ListObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListObjectsResponse(val *ListObjectsResponse) *NullableListObjectsResponse {
	return &NullableListObjectsResponse{value: val, isSet: true}
}

func (v NullableListObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



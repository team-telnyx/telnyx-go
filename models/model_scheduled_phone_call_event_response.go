/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ScheduledPhoneCallEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledPhoneCallEventResponse{}

// ScheduledPhoneCallEventResponse struct for ScheduledPhoneCallEventResponse
type ScheduledPhoneCallEventResponse struct {
	TelnyxConversationChannel ConversationChannelType `json:"telnyx_conversation_channel"`
	TelnyxEndUserTarget string `json:"telnyx_end_user_target"`
	TelnyxAgentTarget string `json:"telnyx_agent_target"`
	ScheduledAtFixedDatetime time.Time `json:"scheduled_at_fixed_datetime"`
	AssistantId string `json:"assistant_id"`
	RetryCount *int32 `json:"retry_count,omitempty"`
	RetryAttempts *int32 `json:"retry_attempts,omitempty"`
	ScheduledEventId *string `json:"scheduled_event_id,omitempty"`
	ConversationId *string `json:"conversation_id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Status *EventStatus `json:"status,omitempty"`
	ConversationMetadata map[string]ConversationMetadataValue `json:"conversation_metadata,omitempty"`
	Errors []string `json:"errors,omitempty"`
}

type _ScheduledPhoneCallEventResponse ScheduledPhoneCallEventResponse

// NewScheduledPhoneCallEventResponse instantiates a new ScheduledPhoneCallEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledPhoneCallEventResponse(telnyxConversationChannel ConversationChannelType, telnyxEndUserTarget string, telnyxAgentTarget string, scheduledAtFixedDatetime time.Time, assistantId string) *ScheduledPhoneCallEventResponse {
	this := ScheduledPhoneCallEventResponse{}
	this.TelnyxConversationChannel = telnyxConversationChannel
	this.TelnyxEndUserTarget = telnyxEndUserTarget
	this.TelnyxAgentTarget = telnyxAgentTarget
	this.ScheduledAtFixedDatetime = scheduledAtFixedDatetime
	this.AssistantId = assistantId
	var retryCount int32 = 0
	this.RetryCount = &retryCount
	var status EventStatus = PENDING
	this.Status = &status
	return &this
}

// NewScheduledPhoneCallEventResponseWithDefaults instantiates a new ScheduledPhoneCallEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledPhoneCallEventResponseWithDefaults() *ScheduledPhoneCallEventResponse {
	this := ScheduledPhoneCallEventResponse{}
	var retryCount int32 = 0
	this.RetryCount = &retryCount
	var status EventStatus = PENDING
	this.Status = &status
	return &this
}

// GetTelnyxConversationChannel returns the TelnyxConversationChannel field value
func (o *ScheduledPhoneCallEventResponse) GetTelnyxConversationChannel() ConversationChannelType {
	if o == nil {
		var ret ConversationChannelType
		return ret
	}

	return o.TelnyxConversationChannel
}

// GetTelnyxConversationChannelOk returns a tuple with the TelnyxConversationChannel field value
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetTelnyxConversationChannelOk() (*ConversationChannelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxConversationChannel, true
}

// SetTelnyxConversationChannel sets field value
func (o *ScheduledPhoneCallEventResponse) SetTelnyxConversationChannel(v ConversationChannelType) {
	o.TelnyxConversationChannel = v
}

// GetTelnyxEndUserTarget returns the TelnyxEndUserTarget field value
func (o *ScheduledPhoneCallEventResponse) GetTelnyxEndUserTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TelnyxEndUserTarget
}

// GetTelnyxEndUserTargetOk returns a tuple with the TelnyxEndUserTarget field value
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetTelnyxEndUserTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxEndUserTarget, true
}

// SetTelnyxEndUserTarget sets field value
func (o *ScheduledPhoneCallEventResponse) SetTelnyxEndUserTarget(v string) {
	o.TelnyxEndUserTarget = v
}

// GetTelnyxAgentTarget returns the TelnyxAgentTarget field value
func (o *ScheduledPhoneCallEventResponse) GetTelnyxAgentTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TelnyxAgentTarget
}

// GetTelnyxAgentTargetOk returns a tuple with the TelnyxAgentTarget field value
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetTelnyxAgentTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelnyxAgentTarget, true
}

// SetTelnyxAgentTarget sets field value
func (o *ScheduledPhoneCallEventResponse) SetTelnyxAgentTarget(v string) {
	o.TelnyxAgentTarget = v
}

// GetScheduledAtFixedDatetime returns the ScheduledAtFixedDatetime field value
func (o *ScheduledPhoneCallEventResponse) GetScheduledAtFixedDatetime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ScheduledAtFixedDatetime
}

// GetScheduledAtFixedDatetimeOk returns a tuple with the ScheduledAtFixedDatetime field value
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetScheduledAtFixedDatetimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledAtFixedDatetime, true
}

// SetScheduledAtFixedDatetime sets field value
func (o *ScheduledPhoneCallEventResponse) SetScheduledAtFixedDatetime(v time.Time) {
	o.ScheduledAtFixedDatetime = v
}

// GetAssistantId returns the AssistantId field value
func (o *ScheduledPhoneCallEventResponse) GetAssistantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssistantId
}

// GetAssistantIdOk returns a tuple with the AssistantId field value
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetAssistantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssistantId, true
}

// SetAssistantId sets field value
func (o *ScheduledPhoneCallEventResponse) SetAssistantId(v string) {
	o.AssistantId = v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetRetryCount() int32 {
	if o == nil || IsNil(o.RetryCount) {
		var ret int32
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetRetryCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryCount) {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasRetryCount() bool {
	if o != nil && !IsNil(o.RetryCount) {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given int32 and assigns it to the RetryCount field.
func (o *ScheduledPhoneCallEventResponse) SetRetryCount(v int32) {
	o.RetryCount = &v
}

// GetRetryAttempts returns the RetryAttempts field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetRetryAttempts() int32 {
	if o == nil || IsNil(o.RetryAttempts) {
		var ret int32
		return ret
	}
	return *o.RetryAttempts
}

// GetRetryAttemptsOk returns a tuple with the RetryAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetRetryAttemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryAttempts) {
		return nil, false
	}
	return o.RetryAttempts, true
}

// HasRetryAttempts returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasRetryAttempts() bool {
	if o != nil && !IsNil(o.RetryAttempts) {
		return true
	}

	return false
}

// SetRetryAttempts gets a reference to the given int32 and assigns it to the RetryAttempts field.
func (o *ScheduledPhoneCallEventResponse) SetRetryAttempts(v int32) {
	o.RetryAttempts = &v
}

// GetScheduledEventId returns the ScheduledEventId field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetScheduledEventId() string {
	if o == nil || IsNil(o.ScheduledEventId) {
		var ret string
		return ret
	}
	return *o.ScheduledEventId
}

// GetScheduledEventIdOk returns a tuple with the ScheduledEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetScheduledEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledEventId) {
		return nil, false
	}
	return o.ScheduledEventId, true
}

// HasScheduledEventId returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasScheduledEventId() bool {
	if o != nil && !IsNil(o.ScheduledEventId) {
		return true
	}

	return false
}

// SetScheduledEventId gets a reference to the given string and assigns it to the ScheduledEventId field.
func (o *ScheduledPhoneCallEventResponse) SetScheduledEventId(v string) {
	o.ScheduledEventId = &v
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetConversationId() string {
	if o == nil || IsNil(o.ConversationId) {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetConversationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationId) {
		return nil, false
	}
	return o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasConversationId() bool {
	if o != nil && !IsNil(o.ConversationId) {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *ScheduledPhoneCallEventResponse) SetConversationId(v string) {
	o.ConversationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ScheduledPhoneCallEventResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetStatus() EventStatus {
	if o == nil || IsNil(o.Status) {
		var ret EventStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetStatusOk() (*EventStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EventStatus and assigns it to the Status field.
func (o *ScheduledPhoneCallEventResponse) SetStatus(v EventStatus) {
	o.Status = &v
}

// GetConversationMetadata returns the ConversationMetadata field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetConversationMetadata() map[string]ConversationMetadataValue {
	if o == nil || IsNil(o.ConversationMetadata) {
		var ret map[string]ConversationMetadataValue
		return ret
	}
	return o.ConversationMetadata
}

// GetConversationMetadataOk returns a tuple with the ConversationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetConversationMetadataOk() (map[string]ConversationMetadataValue, bool) {
	if o == nil || IsNil(o.ConversationMetadata) {
		return map[string]ConversationMetadataValue{}, false
	}
	return o.ConversationMetadata, true
}

// HasConversationMetadata returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasConversationMetadata() bool {
	if o != nil && !IsNil(o.ConversationMetadata) {
		return true
	}

	return false
}

// SetConversationMetadata gets a reference to the given map[string]ConversationMetadataValue and assigns it to the ConversationMetadata field.
func (o *ScheduledPhoneCallEventResponse) SetConversationMetadata(v map[string]ConversationMetadataValue) {
	o.ConversationMetadata = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ScheduledPhoneCallEventResponse) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledPhoneCallEventResponse) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ScheduledPhoneCallEventResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ScheduledPhoneCallEventResponse) SetErrors(v []string) {
	o.Errors = v
}

func (o ScheduledPhoneCallEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledPhoneCallEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["telnyx_conversation_channel"] = o.TelnyxConversationChannel
	toSerialize["telnyx_end_user_target"] = o.TelnyxEndUserTarget
	toSerialize["telnyx_agent_target"] = o.TelnyxAgentTarget
	toSerialize["scheduled_at_fixed_datetime"] = o.ScheduledAtFixedDatetime
	toSerialize["assistant_id"] = o.AssistantId
	if !IsNil(o.RetryCount) {
		toSerialize["retry_count"] = o.RetryCount
	}
	if !IsNil(o.RetryAttempts) {
		toSerialize["retry_attempts"] = o.RetryAttempts
	}
	if !IsNil(o.ScheduledEventId) {
		toSerialize["scheduled_event_id"] = o.ScheduledEventId
	}
	if !IsNil(o.ConversationId) {
		toSerialize["conversation_id"] = o.ConversationId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ConversationMetadata) {
		toSerialize["conversation_metadata"] = o.ConversationMetadata
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

func (o *ScheduledPhoneCallEventResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"telnyx_conversation_channel",
		"telnyx_end_user_target",
		"telnyx_agent_target",
		"scheduled_at_fixed_datetime",
		"assistant_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varScheduledPhoneCallEventResponse := _ScheduledPhoneCallEventResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varScheduledPhoneCallEventResponse)

	if err != nil {
		return err
	}

	*o = ScheduledPhoneCallEventResponse(varScheduledPhoneCallEventResponse)

	return err
}

type NullableScheduledPhoneCallEventResponse struct {
	value *ScheduledPhoneCallEventResponse
	isSet bool
}

func (v NullableScheduledPhoneCallEventResponse) Get() *ScheduledPhoneCallEventResponse {
	return v.value
}

func (v *NullableScheduledPhoneCallEventResponse) Set(val *ScheduledPhoneCallEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledPhoneCallEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledPhoneCallEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledPhoneCallEventResponse(val *ScheduledPhoneCallEventResponse) *NullableScheduledPhoneCallEventResponse {
	return &NullableScheduledPhoneCallEventResponse{value: val, isSet: true}
}

func (v NullableScheduledPhoneCallEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledPhoneCallEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



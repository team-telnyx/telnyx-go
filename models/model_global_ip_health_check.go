/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GlobalIPHealthCheck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalIPHealthCheck{}

// GlobalIPHealthCheck struct for GlobalIPHealthCheck
type GlobalIPHealthCheck struct {
	// Identifies the resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date-time indicating when the resource was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// The Global IP health check type.
	HealthCheckType *string `json:"health_check_type,omitempty"`
	// A Global IP health check params.
	HealthCheckParams map[string]interface{} `json:"health_check_params,omitempty"`
	// Global IP ID.
	GlobalIpId *string `json:"global_ip_id,omitempty"`
}

// NewGlobalIPHealthCheck instantiates a new GlobalIPHealthCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalIPHealthCheck() *GlobalIPHealthCheck {
	this := GlobalIPHealthCheck{}
	return &this
}

// NewGlobalIPHealthCheckWithDefaults instantiates a new GlobalIPHealthCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalIPHealthCheckWithDefaults() *GlobalIPHealthCheck {
	this := GlobalIPHealthCheck{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GlobalIPHealthCheck) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *GlobalIPHealthCheck) SetRecordType(v string) {
	o.RecordType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GlobalIPHealthCheck) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GlobalIPHealthCheck) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetHealthCheckType returns the HealthCheckType field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetHealthCheckType() string {
	if o == nil || IsNil(o.HealthCheckType) {
		var ret string
		return ret
	}
	return *o.HealthCheckType
}

// GetHealthCheckTypeOk returns a tuple with the HealthCheckType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetHealthCheckTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HealthCheckType) {
		return nil, false
	}
	return o.HealthCheckType, true
}

// HasHealthCheckType returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasHealthCheckType() bool {
	if o != nil && !IsNil(o.HealthCheckType) {
		return true
	}

	return false
}

// SetHealthCheckType gets a reference to the given string and assigns it to the HealthCheckType field.
func (o *GlobalIPHealthCheck) SetHealthCheckType(v string) {
	o.HealthCheckType = &v
}

// GetHealthCheckParams returns the HealthCheckParams field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetHealthCheckParams() map[string]interface{} {
	if o == nil || IsNil(o.HealthCheckParams) {
		var ret map[string]interface{}
		return ret
	}
	return o.HealthCheckParams
}

// GetHealthCheckParamsOk returns a tuple with the HealthCheckParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetHealthCheckParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HealthCheckParams) {
		return map[string]interface{}{}, false
	}
	return o.HealthCheckParams, true
}

// HasHealthCheckParams returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasHealthCheckParams() bool {
	if o != nil && !IsNil(o.HealthCheckParams) {
		return true
	}

	return false
}

// SetHealthCheckParams gets a reference to the given map[string]interface{} and assigns it to the HealthCheckParams field.
func (o *GlobalIPHealthCheck) SetHealthCheckParams(v map[string]interface{}) {
	o.HealthCheckParams = v
}

// GetGlobalIpId returns the GlobalIpId field value if set, zero value otherwise.
func (o *GlobalIPHealthCheck) GetGlobalIpId() string {
	if o == nil || IsNil(o.GlobalIpId) {
		var ret string
		return ret
	}
	return *o.GlobalIpId
}

// GetGlobalIpIdOk returns a tuple with the GlobalIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalIPHealthCheck) GetGlobalIpIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalIpId) {
		return nil, false
	}
	return o.GlobalIpId, true
}

// HasGlobalIpId returns a boolean if a field has been set.
func (o *GlobalIPHealthCheck) HasGlobalIpId() bool {
	if o != nil && !IsNil(o.GlobalIpId) {
		return true
	}

	return false
}

// SetGlobalIpId gets a reference to the given string and assigns it to the GlobalIpId field.
func (o *GlobalIPHealthCheck) SetGlobalIpId(v string) {
	o.GlobalIpId = &v
}

func (o GlobalIPHealthCheck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalIPHealthCheck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.HealthCheckType) {
		toSerialize["health_check_type"] = o.HealthCheckType
	}
	if !IsNil(o.HealthCheckParams) {
		toSerialize["health_check_params"] = o.HealthCheckParams
	}
	if !IsNil(o.GlobalIpId) {
		toSerialize["global_ip_id"] = o.GlobalIpId
	}
	return toSerialize, nil
}

type NullableGlobalIPHealthCheck struct {
	value *GlobalIPHealthCheck
	isSet bool
}

func (v NullableGlobalIPHealthCheck) Get() *GlobalIPHealthCheck {
	return v.value
}

func (v *NullableGlobalIPHealthCheck) Set(val *GlobalIPHealthCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalIPHealthCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalIPHealthCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalIPHealthCheck(val *GlobalIPHealthCheck) *NullableGlobalIPHealthCheck {
	return &NullableGlobalIPHealthCheck{value: val, isSet: true}
}

func (v NullableGlobalIPHealthCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalIPHealthCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



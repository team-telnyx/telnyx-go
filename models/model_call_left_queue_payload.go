/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallLeftQueuePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallLeftQueuePayload{}

// CallLeftQueuePayload struct for CallLeftQueuePayload
type CallLeftQueuePayload struct {
	// Call ID used to issue commands via Call Control API.
	CallControlId *string `json:"call_control_id,omitempty"`
	// Call Control App ID (formerly Telnyx connection ID) used in the call.
	ConnectionId *string `json:"connection_id,omitempty"`
	// ID that is unique to the call and can be used to correlate webhook events.
	CallLegId *string `json:"call_leg_id,omitempty"`
	// ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
	CallSessionId *string `json:"call_session_id,omitempty"`
	// State received from a command.
	ClientState *string `json:"client_state,omitempty"`
	// The name of the queue
	Queue *string `json:"queue,omitempty"`
	// Last position of the call in the queue.
	QueuePosition *int32 `json:"queue_position,omitempty"`
	// The reason for leaving the queue
	Reason *string `json:"reason,omitempty"`
	// Time call spent in the queue in seconds.
	WaitTimeSecs *int32 `json:"wait_time_secs,omitempty"`
}

// NewCallLeftQueuePayload instantiates a new CallLeftQueuePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallLeftQueuePayload() *CallLeftQueuePayload {
	this := CallLeftQueuePayload{}
	return &this
}

// NewCallLeftQueuePayloadWithDefaults instantiates a new CallLeftQueuePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallLeftQueuePayloadWithDefaults() *CallLeftQueuePayload {
	this := CallLeftQueuePayload{}
	return &this
}

// GetCallControlId returns the CallControlId field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetCallControlId() string {
	if o == nil || IsNil(o.CallControlId) {
		var ret string
		return ret
	}
	return *o.CallControlId
}

// GetCallControlIdOk returns a tuple with the CallControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetCallControlIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallControlId) {
		return nil, false
	}
	return o.CallControlId, true
}

// HasCallControlId returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasCallControlId() bool {
	if o != nil && !IsNil(o.CallControlId) {
		return true
	}

	return false
}

// SetCallControlId gets a reference to the given string and assigns it to the CallControlId field.
func (o *CallLeftQueuePayload) SetCallControlId(v string) {
	o.CallControlId = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *CallLeftQueuePayload) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCallLegId returns the CallLegId field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetCallLegId() string {
	if o == nil || IsNil(o.CallLegId) {
		var ret string
		return ret
	}
	return *o.CallLegId
}

// GetCallLegIdOk returns a tuple with the CallLegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetCallLegIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallLegId) {
		return nil, false
	}
	return o.CallLegId, true
}

// HasCallLegId returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasCallLegId() bool {
	if o != nil && !IsNil(o.CallLegId) {
		return true
	}

	return false
}

// SetCallLegId gets a reference to the given string and assigns it to the CallLegId field.
func (o *CallLeftQueuePayload) SetCallLegId(v string) {
	o.CallLegId = &v
}

// GetCallSessionId returns the CallSessionId field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetCallSessionId() string {
	if o == nil || IsNil(o.CallSessionId) {
		var ret string
		return ret
	}
	return *o.CallSessionId
}

// GetCallSessionIdOk returns a tuple with the CallSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetCallSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallSessionId) {
		return nil, false
	}
	return o.CallSessionId, true
}

// HasCallSessionId returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasCallSessionId() bool {
	if o != nil && !IsNil(o.CallSessionId) {
		return true
	}

	return false
}

// SetCallSessionId gets a reference to the given string and assigns it to the CallSessionId field.
func (o *CallLeftQueuePayload) SetCallSessionId(v string) {
	o.CallSessionId = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *CallLeftQueuePayload) SetClientState(v string) {
	o.ClientState = &v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetQueue() string {
	if o == nil || IsNil(o.Queue) {
		var ret string
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetQueueOk() (*string, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given string and assigns it to the Queue field.
func (o *CallLeftQueuePayload) SetQueue(v string) {
	o.Queue = &v
}

// GetQueuePosition returns the QueuePosition field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetQueuePosition() int32 {
	if o == nil || IsNil(o.QueuePosition) {
		var ret int32
		return ret
	}
	return *o.QueuePosition
}

// GetQueuePositionOk returns a tuple with the QueuePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetQueuePositionOk() (*int32, bool) {
	if o == nil || IsNil(o.QueuePosition) {
		return nil, false
	}
	return o.QueuePosition, true
}

// HasQueuePosition returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasQueuePosition() bool {
	if o != nil && !IsNil(o.QueuePosition) {
		return true
	}

	return false
}

// SetQueuePosition gets a reference to the given int32 and assigns it to the QueuePosition field.
func (o *CallLeftQueuePayload) SetQueuePosition(v int32) {
	o.QueuePosition = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CallLeftQueuePayload) SetReason(v string) {
	o.Reason = &v
}

// GetWaitTimeSecs returns the WaitTimeSecs field value if set, zero value otherwise.
func (o *CallLeftQueuePayload) GetWaitTimeSecs() int32 {
	if o == nil || IsNil(o.WaitTimeSecs) {
		var ret int32
		return ret
	}
	return *o.WaitTimeSecs
}

// GetWaitTimeSecsOk returns a tuple with the WaitTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallLeftQueuePayload) GetWaitTimeSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.WaitTimeSecs) {
		return nil, false
	}
	return o.WaitTimeSecs, true
}

// HasWaitTimeSecs returns a boolean if a field has been set.
func (o *CallLeftQueuePayload) HasWaitTimeSecs() bool {
	if o != nil && !IsNil(o.WaitTimeSecs) {
		return true
	}

	return false
}

// SetWaitTimeSecs gets a reference to the given int32 and assigns it to the WaitTimeSecs field.
func (o *CallLeftQueuePayload) SetWaitTimeSecs(v int32) {
	o.WaitTimeSecs = &v
}

func (o CallLeftQueuePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallLeftQueuePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallControlId) {
		toSerialize["call_control_id"] = o.CallControlId
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CallLegId) {
		toSerialize["call_leg_id"] = o.CallLegId
	}
	if !IsNil(o.CallSessionId) {
		toSerialize["call_session_id"] = o.CallSessionId
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	if !IsNil(o.QueuePosition) {
		toSerialize["queue_position"] = o.QueuePosition
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.WaitTimeSecs) {
		toSerialize["wait_time_secs"] = o.WaitTimeSecs
	}
	return toSerialize, nil
}

type NullableCallLeftQueuePayload struct {
	value *CallLeftQueuePayload
	isSet bool
}

func (v NullableCallLeftQueuePayload) Get() *CallLeftQueuePayload {
	return v.value
}

func (v *NullableCallLeftQueuePayload) Set(val *CallLeftQueuePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCallLeftQueuePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCallLeftQueuePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallLeftQueuePayload(val *CallLeftQueuePayload) *NullableCallLeftQueuePayload {
	return &NullableCallLeftQueuePayload{value: val, isSet: true}
}

func (v NullableCallLeftQueuePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallLeftQueuePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



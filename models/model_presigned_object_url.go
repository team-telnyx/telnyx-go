/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PresignedObjectUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PresignedObjectUrl{}

// PresignedObjectUrl struct for PresignedObjectUrl
type PresignedObjectUrl struct {
	Content *PresignedObjectUrlContent `json:"content,omitempty"`
}

// NewPresignedObjectUrl instantiates a new PresignedObjectUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresignedObjectUrl() *PresignedObjectUrl {
	this := PresignedObjectUrl{}
	return &this
}

// NewPresignedObjectUrlWithDefaults instantiates a new PresignedObjectUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresignedObjectUrlWithDefaults() *PresignedObjectUrl {
	this := PresignedObjectUrl{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PresignedObjectUrl) GetContent() PresignedObjectUrlContent {
	if o == nil || IsNil(o.Content) {
		var ret PresignedObjectUrlContent
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresignedObjectUrl) GetContentOk() (*PresignedObjectUrlContent, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PresignedObjectUrl) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given PresignedObjectUrlContent and assigns it to the Content field.
func (o *PresignedObjectUrl) SetContent(v PresignedObjectUrlContent) {
	o.Content = &v
}

func (o PresignedObjectUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PresignedObjectUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullablePresignedObjectUrl struct {
	value *PresignedObjectUrl
	isSet bool
}

func (v NullablePresignedObjectUrl) Get() *PresignedObjectUrl {
	return v.value
}

func (v *NullablePresignedObjectUrl) Set(val *PresignedObjectUrl) {
	v.value = val
	v.isSet = true
}

func (v NullablePresignedObjectUrl) IsSet() bool {
	return v.isSet
}

func (v *NullablePresignedObjectUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresignedObjectUrl(val *PresignedObjectUrl) *NullablePresignedObjectUrl {
	return &NullablePresignedObjectUrl{value: val, isSet: true}
}

func (v NullablePresignedObjectUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresignedObjectUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePortingReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePortingReportRequest{}

// CreatePortingReportRequest The parameters for generating a new porting related report.
type CreatePortingReportRequest struct {
	// Identifies the type of report
	ReportType string `json:"report_type"`
	Params ExportPortingOrdersCSVReport `json:"params"`
}

type _CreatePortingReportRequest CreatePortingReportRequest

// NewCreatePortingReportRequest instantiates a new CreatePortingReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePortingReportRequest(reportType string, params ExportPortingOrdersCSVReport) *CreatePortingReportRequest {
	this := CreatePortingReportRequest{}
	this.ReportType = reportType
	this.Params = params
	return &this
}

// NewCreatePortingReportRequestWithDefaults instantiates a new CreatePortingReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePortingReportRequestWithDefaults() *CreatePortingReportRequest {
	this := CreatePortingReportRequest{}
	return &this
}

// GetReportType returns the ReportType field value
func (o *CreatePortingReportRequest) GetReportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value
// and a boolean to check if the value has been set.
func (o *CreatePortingReportRequest) GetReportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportType, true
}

// SetReportType sets field value
func (o *CreatePortingReportRequest) SetReportType(v string) {
	o.ReportType = v
}

// GetParams returns the Params field value
func (o *CreatePortingReportRequest) GetParams() ExportPortingOrdersCSVReport {
	if o == nil {
		var ret ExportPortingOrdersCSVReport
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *CreatePortingReportRequest) GetParamsOk() (*ExportPortingOrdersCSVReport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *CreatePortingReportRequest) SetParams(v ExportPortingOrdersCSVReport) {
	o.Params = v
}

func (o CreatePortingReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePortingReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["report_type"] = o.ReportType
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

func (o *CreatePortingReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"report_type",
		"params",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePortingReportRequest := _CreatePortingReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePortingReportRequest)

	if err != nil {
		return err
	}

	*o = CreatePortingReportRequest(varCreatePortingReportRequest)

	return err
}

type NullableCreatePortingReportRequest struct {
	value *CreatePortingReportRequest
	isSet bool
}

func (v NullableCreatePortingReportRequest) Get() *CreatePortingReportRequest {
	return v.value
}

func (v *NullableCreatePortingReportRequest) Set(val *CreatePortingReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePortingReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePortingReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePortingReportRequest(val *CreatePortingReportRequest) *NullableCreatePortingReportRequest {
	return &NullableCreatePortingReportRequest{value: val, isSet: true}
}

func (v NullableCreatePortingReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePortingReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



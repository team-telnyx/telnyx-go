/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIosPushCredentialRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIosPushCredentialRequest{}

// CreateIosPushCredentialRequest struct for CreateIosPushCredentialRequest
type CreateIosPushCredentialRequest struct {
	// Type of mobile push credential. Should be <code>ios</code> here
	Type string `json:"type"`
	// Certificate as received from APNs
	Certificate string `json:"certificate"`
	// Corresponding private key to the certificate as received from APNs
	PrivateKey string `json:"private_key"`
	// Alias to uniquely identify the credential
	Alias string `json:"alias"`
}

type _CreateIosPushCredentialRequest CreateIosPushCredentialRequest

// NewCreateIosPushCredentialRequest instantiates a new CreateIosPushCredentialRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIosPushCredentialRequest(type_ string, certificate string, privateKey string, alias string) *CreateIosPushCredentialRequest {
	this := CreateIosPushCredentialRequest{}
	this.Type = type_
	this.Certificate = certificate
	this.PrivateKey = privateKey
	this.Alias = alias
	return &this
}

// NewCreateIosPushCredentialRequestWithDefaults instantiates a new CreateIosPushCredentialRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIosPushCredentialRequestWithDefaults() *CreateIosPushCredentialRequest {
	this := CreateIosPushCredentialRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateIosPushCredentialRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateIosPushCredentialRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateIosPushCredentialRequest) SetType(v string) {
	o.Type = v
}

// GetCertificate returns the Certificate field value
func (o *CreateIosPushCredentialRequest) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *CreateIosPushCredentialRequest) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *CreateIosPushCredentialRequest) SetCertificate(v string) {
	o.Certificate = v
}

// GetPrivateKey returns the PrivateKey field value
func (o *CreateIosPushCredentialRequest) GetPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *CreateIosPushCredentialRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *CreateIosPushCredentialRequest) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetAlias returns the Alias field value
func (o *CreateIosPushCredentialRequest) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *CreateIosPushCredentialRequest) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *CreateIosPushCredentialRequest) SetAlias(v string) {
	o.Alias = v
}

func (o CreateIosPushCredentialRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIosPushCredentialRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["certificate"] = o.Certificate
	toSerialize["private_key"] = o.PrivateKey
	toSerialize["alias"] = o.Alias
	return toSerialize, nil
}

func (o *CreateIosPushCredentialRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"certificate",
		"private_key",
		"alias",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIosPushCredentialRequest := _CreateIosPushCredentialRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIosPushCredentialRequest)

	if err != nil {
		return err
	}

	*o = CreateIosPushCredentialRequest(varCreateIosPushCredentialRequest)

	return err
}

type NullableCreateIosPushCredentialRequest struct {
	value *CreateIosPushCredentialRequest
	isSet bool
}

func (v NullableCreateIosPushCredentialRequest) Get() *CreateIosPushCredentialRequest {
	return v.value
}

func (v *NullableCreateIosPushCredentialRequest) Set(val *CreateIosPushCredentialRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIosPushCredentialRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIosPushCredentialRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIosPushCredentialRequest(val *CreateIosPushCredentialRequest) *NullableCreateIosPushCredentialRequest {
	return &NullableCreateIosPushCredentialRequest{value: val, isSet: true}
}

func (v NullableCreateIosPushCredentialRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIosPushCredentialRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



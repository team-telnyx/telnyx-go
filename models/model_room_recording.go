/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the RoomRecording type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomRecording{}

// RoomRecording struct for RoomRecording
type RoomRecording struct {
	// A unique identifier for the room recording.
	Id *string `json:"id,omitempty"`
	// Identify the room associated with the room recording.
	RoomId *string `json:"room_id,omitempty"`
	// Identify the room session associated with the room recording.
	SessionId *string `json:"session_id,omitempty"`
	// Identify the room participant associated with the room recording.
	ParticipantId *string `json:"participant_id,omitempty"`
	// Shows the room recording status.
	Status *string `json:"status,omitempty"`
	// Shows the room recording type.
	Type *string `json:"type,omitempty"`
	// Shows the room recording size in MB.
	SizeMb *float32 `json:"size_mb,omitempty"`
	// Url to download the recording.
	DownloadUrl *string `json:"download_url,omitempty"`
	// Shows the codec used for the room recording.
	Codec *string `json:"codec,omitempty"`
	// Shows the room recording duration in seconds.
	DurationSecs *int32 `json:"duration_secs,omitempty"`
	// ISO 8601 timestamp when the room recording was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 timestamp when the room recording was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// ISO 8601 timestamp when the room recording has ended.
	EndedAt *string `json:"ended_at,omitempty"`
	// ISO 8601 timestamp when the room recording has stated.
	StartedAt *string `json:"started_at,omitempty"`
	// ISO 8601 timestamp when the room recording has completed.
	CompletedAt *string `json:"completed_at,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
}

// NewRoomRecording instantiates a new RoomRecording object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomRecording() *RoomRecording {
	this := RoomRecording{}
	return &this
}

// NewRoomRecordingWithDefaults instantiates a new RoomRecording object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomRecordingWithDefaults() *RoomRecording {
	this := RoomRecording{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RoomRecording) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RoomRecording) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RoomRecording) SetId(v string) {
	o.Id = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *RoomRecording) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *RoomRecording) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *RoomRecording) SetRoomId(v string) {
	o.RoomId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *RoomRecording) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *RoomRecording) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *RoomRecording) SetSessionId(v string) {
	o.SessionId = &v
}

// GetParticipantId returns the ParticipantId field value if set, zero value otherwise.
func (o *RoomRecording) GetParticipantId() string {
	if o == nil || IsNil(o.ParticipantId) {
		var ret string
		return ret
	}
	return *o.ParticipantId
}

// GetParticipantIdOk returns a tuple with the ParticipantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetParticipantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParticipantId) {
		return nil, false
	}
	return o.ParticipantId, true
}

// HasParticipantId returns a boolean if a field has been set.
func (o *RoomRecording) HasParticipantId() bool {
	if o != nil && !IsNil(o.ParticipantId) {
		return true
	}

	return false
}

// SetParticipantId gets a reference to the given string and assigns it to the ParticipantId field.
func (o *RoomRecording) SetParticipantId(v string) {
	o.ParticipantId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RoomRecording) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RoomRecording) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RoomRecording) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RoomRecording) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RoomRecording) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RoomRecording) SetType(v string) {
	o.Type = &v
}

// GetSizeMb returns the SizeMb field value if set, zero value otherwise.
func (o *RoomRecording) GetSizeMb() float32 {
	if o == nil || IsNil(o.SizeMb) {
		var ret float32
		return ret
	}
	return *o.SizeMb
}

// GetSizeMbOk returns a tuple with the SizeMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetSizeMbOk() (*float32, bool) {
	if o == nil || IsNil(o.SizeMb) {
		return nil, false
	}
	return o.SizeMb, true
}

// HasSizeMb returns a boolean if a field has been set.
func (o *RoomRecording) HasSizeMb() bool {
	if o != nil && !IsNil(o.SizeMb) {
		return true
	}

	return false
}

// SetSizeMb gets a reference to the given float32 and assigns it to the SizeMb field.
func (o *RoomRecording) SetSizeMb(v float32) {
	o.SizeMb = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *RoomRecording) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *RoomRecording) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *RoomRecording) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetCodec returns the Codec field value if set, zero value otherwise.
func (o *RoomRecording) GetCodec() string {
	if o == nil || IsNil(o.Codec) {
		var ret string
		return ret
	}
	return *o.Codec
}

// GetCodecOk returns a tuple with the Codec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetCodecOk() (*string, bool) {
	if o == nil || IsNil(o.Codec) {
		return nil, false
	}
	return o.Codec, true
}

// HasCodec returns a boolean if a field has been set.
func (o *RoomRecording) HasCodec() bool {
	if o != nil && !IsNil(o.Codec) {
		return true
	}

	return false
}

// SetCodec gets a reference to the given string and assigns it to the Codec field.
func (o *RoomRecording) SetCodec(v string) {
	o.Codec = &v
}

// GetDurationSecs returns the DurationSecs field value if set, zero value otherwise.
func (o *RoomRecording) GetDurationSecs() int32 {
	if o == nil || IsNil(o.DurationSecs) {
		var ret int32
		return ret
	}
	return *o.DurationSecs
}

// GetDurationSecsOk returns a tuple with the DurationSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetDurationSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationSecs) {
		return nil, false
	}
	return o.DurationSecs, true
}

// HasDurationSecs returns a boolean if a field has been set.
func (o *RoomRecording) HasDurationSecs() bool {
	if o != nil && !IsNil(o.DurationSecs) {
		return true
	}

	return false
}

// SetDurationSecs gets a reference to the given int32 and assigns it to the DurationSecs field.
func (o *RoomRecording) SetDurationSecs(v int32) {
	o.DurationSecs = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RoomRecording) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RoomRecording) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RoomRecording) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RoomRecording) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RoomRecording) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *RoomRecording) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *RoomRecording) GetEndedAt() string {
	if o == nil || IsNil(o.EndedAt) {
		var ret string
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetEndedAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *RoomRecording) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given string and assigns it to the EndedAt field.
func (o *RoomRecording) SetEndedAt(v string) {
	o.EndedAt = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *RoomRecording) GetStartedAt() string {
	if o == nil || IsNil(o.StartedAt) {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetStartedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *RoomRecording) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *RoomRecording) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *RoomRecording) GetCompletedAt() string {
	if o == nil || IsNil(o.CompletedAt) {
		var ret string
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetCompletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *RoomRecording) HasCompletedAt() bool {
	if o != nil && !IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given string and assigns it to the CompletedAt field.
func (o *RoomRecording) SetCompletedAt(v string) {
	o.CompletedAt = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *RoomRecording) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRecording) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *RoomRecording) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *RoomRecording) SetRecordType(v string) {
	o.RecordType = &v
}

func (o RoomRecording) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomRecording) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RoomId) {
		toSerialize["room_id"] = o.RoomId
	}
	if !IsNil(o.SessionId) {
		toSerialize["session_id"] = o.SessionId
	}
	if !IsNil(o.ParticipantId) {
		toSerialize["participant_id"] = o.ParticipantId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SizeMb) {
		toSerialize["size_mb"] = o.SizeMb
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["download_url"] = o.DownloadUrl
	}
	if !IsNil(o.Codec) {
		toSerialize["codec"] = o.Codec
	}
	if !IsNil(o.DurationSecs) {
		toSerialize["duration_secs"] = o.DurationSecs
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.CompletedAt) {
		toSerialize["completed_at"] = o.CompletedAt
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullableRoomRecording struct {
	value *RoomRecording
	isSet bool
}

func (v NullableRoomRecording) Get() *RoomRecording {
	return v.value
}

func (v *NullableRoomRecording) Set(val *RoomRecording) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomRecording) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomRecording) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomRecording(val *RoomRecording) *NullableRoomRecording {
	return &NullableRoomRecording{value: val, isSet: true}
}

func (v NullableRoomRecording) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomRecording) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserEmbeddedBuckets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserEmbeddedBuckets{}

// UserEmbeddedBuckets struct for UserEmbeddedBuckets
type UserEmbeddedBuckets struct {
	Buckets []string `json:"buckets"`
}

type _UserEmbeddedBuckets UserEmbeddedBuckets

// NewUserEmbeddedBuckets instantiates a new UserEmbeddedBuckets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserEmbeddedBuckets(buckets []string) *UserEmbeddedBuckets {
	this := UserEmbeddedBuckets{}
	this.Buckets = buckets
	return &this
}

// NewUserEmbeddedBucketsWithDefaults instantiates a new UserEmbeddedBuckets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserEmbeddedBucketsWithDefaults() *UserEmbeddedBuckets {
	this := UserEmbeddedBuckets{}
	return &this
}

// GetBuckets returns the Buckets field value
func (o *UserEmbeddedBuckets) GetBuckets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value
// and a boolean to check if the value has been set.
func (o *UserEmbeddedBuckets) GetBucketsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Buckets, true
}

// SetBuckets sets field value
func (o *UserEmbeddedBuckets) SetBuckets(v []string) {
	o.Buckets = v
}

func (o UserEmbeddedBuckets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserEmbeddedBuckets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buckets"] = o.Buckets
	return toSerialize, nil
}

func (o *UserEmbeddedBuckets) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"buckets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserEmbeddedBuckets := _UserEmbeddedBuckets{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserEmbeddedBuckets)

	if err != nil {
		return err
	}

	*o = UserEmbeddedBuckets(varUserEmbeddedBuckets)

	return err
}

type NullableUserEmbeddedBuckets struct {
	value *UserEmbeddedBuckets
	isSet bool
}

func (v NullableUserEmbeddedBuckets) Get() *UserEmbeddedBuckets {
	return v.value
}

func (v *NullableUserEmbeddedBuckets) Set(val *UserEmbeddedBuckets) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEmbeddedBuckets) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEmbeddedBuckets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEmbeddedBuckets(val *UserEmbeddedBuckets) *NullableUserEmbeddedBuckets {
	return &NullableUserEmbeddedBuckets{value: val, isSet: true}
}

func (v NullableUserEmbeddedBuckets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEmbeddedBuckets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



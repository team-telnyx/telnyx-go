/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateIpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIpRequest{}

// UpdateIpRequest struct for UpdateIpRequest
type UpdateIpRequest struct {
	// ID of the IP Connection to which this IP should be attached.
	ConnectionId *string `json:"connection_id,omitempty"`
	// IP adddress represented by this resource.
	IpAddress string `json:"ip_address"`
	// Port to use when connecting to this IP.
	Port *int32 `json:"port,omitempty"`
}

type _UpdateIpRequest UpdateIpRequest

// NewUpdateIpRequest instantiates a new UpdateIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIpRequest(ipAddress string) *UpdateIpRequest {
	this := UpdateIpRequest{}
	this.IpAddress = ipAddress
	var port int32 = 5060
	this.Port = &port
	return &this
}

// NewUpdateIpRequestWithDefaults instantiates a new UpdateIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIpRequestWithDefaults() *UpdateIpRequest {
	this := UpdateIpRequest{}
	var port int32 = 5060
	this.Port = &port
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *UpdateIpRequest) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIpRequest) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *UpdateIpRequest) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *UpdateIpRequest) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetIpAddress returns the IpAddress field value
func (o *UpdateIpRequest) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *UpdateIpRequest) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *UpdateIpRequest) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *UpdateIpRequest) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIpRequest) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *UpdateIpRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *UpdateIpRequest) SetPort(v int32) {
	o.Port = &v
}

func (o UpdateIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	toSerialize["ip_address"] = o.IpAddress
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

func (o *UpdateIpRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ip_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateIpRequest := _UpdateIpRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateIpRequest)

	if err != nil {
		return err
	}

	*o = UpdateIpRequest(varUpdateIpRequest)

	return err
}

type NullableUpdateIpRequest struct {
	value *UpdateIpRequest
	isSet bool
}

func (v NullableUpdateIpRequest) Get() *UpdateIpRequest {
	return v.value
}

func (v *NullableUpdateIpRequest) Set(val *UpdateIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIpRequest(val *UpdateIpRequest) *NullableUpdateIpRequest {
	return &NullableUpdateIpRequest{value: val, isSet: true}
}

func (v NullableUpdateIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



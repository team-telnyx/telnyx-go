/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the BucketOps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketOps{}

// BucketOps struct for BucketOps
type BucketOps struct {
	// The number of bytes sent
	BytesSent *int32 `json:"bytes_sent,omitempty"`
	// The number of bytes received
	BytesReceived *int32 `json:"bytes_received,omitempty"`
	// The number of operations
	Ops *int32 `json:"ops,omitempty"`
	// The number of successful operations
	SuccessfulOps *int32 `json:"successful_ops,omitempty"`
	// The category of the bucket operation
	Category *string `json:"category,omitempty"`
}

// NewBucketOps instantiates a new BucketOps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketOps() *BucketOps {
	this := BucketOps{}
	return &this
}

// NewBucketOpsWithDefaults instantiates a new BucketOps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketOpsWithDefaults() *BucketOps {
	this := BucketOps{}
	return &this
}

// GetBytesSent returns the BytesSent field value if set, zero value otherwise.
func (o *BucketOps) GetBytesSent() int32 {
	if o == nil || IsNil(o.BytesSent) {
		var ret int32
		return ret
	}
	return *o.BytesSent
}

// GetBytesSentOk returns a tuple with the BytesSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketOps) GetBytesSentOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesSent) {
		return nil, false
	}
	return o.BytesSent, true
}

// HasBytesSent returns a boolean if a field has been set.
func (o *BucketOps) HasBytesSent() bool {
	if o != nil && !IsNil(o.BytesSent) {
		return true
	}

	return false
}

// SetBytesSent gets a reference to the given int32 and assigns it to the BytesSent field.
func (o *BucketOps) SetBytesSent(v int32) {
	o.BytesSent = &v
}

// GetBytesReceived returns the BytesReceived field value if set, zero value otherwise.
func (o *BucketOps) GetBytesReceived() int32 {
	if o == nil || IsNil(o.BytesReceived) {
		var ret int32
		return ret
	}
	return *o.BytesReceived
}

// GetBytesReceivedOk returns a tuple with the BytesReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketOps) GetBytesReceivedOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesReceived) {
		return nil, false
	}
	return o.BytesReceived, true
}

// HasBytesReceived returns a boolean if a field has been set.
func (o *BucketOps) HasBytesReceived() bool {
	if o != nil && !IsNil(o.BytesReceived) {
		return true
	}

	return false
}

// SetBytesReceived gets a reference to the given int32 and assigns it to the BytesReceived field.
func (o *BucketOps) SetBytesReceived(v int32) {
	o.BytesReceived = &v
}

// GetOps returns the Ops field value if set, zero value otherwise.
func (o *BucketOps) GetOps() int32 {
	if o == nil || IsNil(o.Ops) {
		var ret int32
		return ret
	}
	return *o.Ops
}

// GetOpsOk returns a tuple with the Ops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketOps) GetOpsOk() (*int32, bool) {
	if o == nil || IsNil(o.Ops) {
		return nil, false
	}
	return o.Ops, true
}

// HasOps returns a boolean if a field has been set.
func (o *BucketOps) HasOps() bool {
	if o != nil && !IsNil(o.Ops) {
		return true
	}

	return false
}

// SetOps gets a reference to the given int32 and assigns it to the Ops field.
func (o *BucketOps) SetOps(v int32) {
	o.Ops = &v
}

// GetSuccessfulOps returns the SuccessfulOps field value if set, zero value otherwise.
func (o *BucketOps) GetSuccessfulOps() int32 {
	if o == nil || IsNil(o.SuccessfulOps) {
		var ret int32
		return ret
	}
	return *o.SuccessfulOps
}

// GetSuccessfulOpsOk returns a tuple with the SuccessfulOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketOps) GetSuccessfulOpsOk() (*int32, bool) {
	if o == nil || IsNil(o.SuccessfulOps) {
		return nil, false
	}
	return o.SuccessfulOps, true
}

// HasSuccessfulOps returns a boolean if a field has been set.
func (o *BucketOps) HasSuccessfulOps() bool {
	if o != nil && !IsNil(o.SuccessfulOps) {
		return true
	}

	return false
}

// SetSuccessfulOps gets a reference to the given int32 and assigns it to the SuccessfulOps field.
func (o *BucketOps) SetSuccessfulOps(v int32) {
	o.SuccessfulOps = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *BucketOps) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketOps) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *BucketOps) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *BucketOps) SetCategory(v string) {
	o.Category = &v
}

func (o BucketOps) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketOps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BytesSent) {
		toSerialize["bytes_sent"] = o.BytesSent
	}
	if !IsNil(o.BytesReceived) {
		toSerialize["bytes_received"] = o.BytesReceived
	}
	if !IsNil(o.Ops) {
		toSerialize["ops"] = o.Ops
	}
	if !IsNil(o.SuccessfulOps) {
		toSerialize["successful_ops"] = o.SuccessfulOps
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableBucketOps struct {
	value *BucketOps
	isSet bool
}

func (v NullableBucketOps) Get() *BucketOps {
	return v.value
}

func (v *NullableBucketOps) Set(val *BucketOps) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketOps) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketOps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketOps(val *BucketOps) *NullableBucketOps {
	return &NullableBucketOps{value: val, isSet: true}
}

func (v NullableBucketOps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketOps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



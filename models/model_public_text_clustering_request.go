/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PublicTextClusteringRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicTextClusteringRequest{}

// PublicTextClusteringRequest struct for PublicTextClusteringRequest
type PublicTextClusteringRequest struct {
	// The embedded storage bucket to compute the clusters from. The bucket must already be [embedded](https://developers.telnyx.com/api/inference/inference-embedding/post-embedding).
	Bucket string `json:"bucket"`
	// Prefix to filter whcih files in the buckets are included.
	Prefix *string `json:"prefix,omitempty"`
	// Array of files to filter which are included.
	Files []string `json:"files,omitempty"`
	// Smallest number of related text chunks to qualify as a cluster. Top-level clusters should be thought of as identifying broad themes in your data.
	MinClusterSize *int32 `json:"min_cluster_size,omitempty"`
	// Smallest number of related text chunks to qualify as a sub-cluster. Sub-clusters should be thought of as identifying more specific topics within a broader theme.
	MinSubclusterSize *int32 `json:"min_subcluster_size,omitempty"`
}

type _PublicTextClusteringRequest PublicTextClusteringRequest

// NewPublicTextClusteringRequest instantiates a new PublicTextClusteringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicTextClusteringRequest(bucket string) *PublicTextClusteringRequest {
	this := PublicTextClusteringRequest{}
	this.Bucket = bucket
	var minClusterSize int32 = 25
	this.MinClusterSize = &minClusterSize
	var minSubclusterSize int32 = 5
	this.MinSubclusterSize = &minSubclusterSize
	return &this
}

// NewPublicTextClusteringRequestWithDefaults instantiates a new PublicTextClusteringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicTextClusteringRequestWithDefaults() *PublicTextClusteringRequest {
	this := PublicTextClusteringRequest{}
	var minClusterSize int32 = 25
	this.MinClusterSize = &minClusterSize
	var minSubclusterSize int32 = 5
	this.MinSubclusterSize = &minSubclusterSize
	return &this
}

// GetBucket returns the Bucket field value
func (o *PublicTextClusteringRequest) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *PublicTextClusteringRequest) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *PublicTextClusteringRequest) SetBucket(v string) {
	o.Bucket = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *PublicTextClusteringRequest) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTextClusteringRequest) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *PublicTextClusteringRequest) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *PublicTextClusteringRequest) SetPrefix(v string) {
	o.Prefix = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *PublicTextClusteringRequest) GetFiles() []string {
	if o == nil || IsNil(o.Files) {
		var ret []string
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTextClusteringRequest) GetFilesOk() ([]string, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *PublicTextClusteringRequest) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []string and assigns it to the Files field.
func (o *PublicTextClusteringRequest) SetFiles(v []string) {
	o.Files = v
}

// GetMinClusterSize returns the MinClusterSize field value if set, zero value otherwise.
func (o *PublicTextClusteringRequest) GetMinClusterSize() int32 {
	if o == nil || IsNil(o.MinClusterSize) {
		var ret int32
		return ret
	}
	return *o.MinClusterSize
}

// GetMinClusterSizeOk returns a tuple with the MinClusterSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTextClusteringRequest) GetMinClusterSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MinClusterSize) {
		return nil, false
	}
	return o.MinClusterSize, true
}

// HasMinClusterSize returns a boolean if a field has been set.
func (o *PublicTextClusteringRequest) HasMinClusterSize() bool {
	if o != nil && !IsNil(o.MinClusterSize) {
		return true
	}

	return false
}

// SetMinClusterSize gets a reference to the given int32 and assigns it to the MinClusterSize field.
func (o *PublicTextClusteringRequest) SetMinClusterSize(v int32) {
	o.MinClusterSize = &v
}

// GetMinSubclusterSize returns the MinSubclusterSize field value if set, zero value otherwise.
func (o *PublicTextClusteringRequest) GetMinSubclusterSize() int32 {
	if o == nil || IsNil(o.MinSubclusterSize) {
		var ret int32
		return ret
	}
	return *o.MinSubclusterSize
}

// GetMinSubclusterSizeOk returns a tuple with the MinSubclusterSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTextClusteringRequest) GetMinSubclusterSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MinSubclusterSize) {
		return nil, false
	}
	return o.MinSubclusterSize, true
}

// HasMinSubclusterSize returns a boolean if a field has been set.
func (o *PublicTextClusteringRequest) HasMinSubclusterSize() bool {
	if o != nil && !IsNil(o.MinSubclusterSize) {
		return true
	}

	return false
}

// SetMinSubclusterSize gets a reference to the given int32 and assigns it to the MinSubclusterSize field.
func (o *PublicTextClusteringRequest) SetMinSubclusterSize(v int32) {
	o.MinSubclusterSize = &v
}

func (o PublicTextClusteringRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicTextClusteringRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucket"] = o.Bucket
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.MinClusterSize) {
		toSerialize["min_cluster_size"] = o.MinClusterSize
	}
	if !IsNil(o.MinSubclusterSize) {
		toSerialize["min_subcluster_size"] = o.MinSubclusterSize
	}
	return toSerialize, nil
}

func (o *PublicTextClusteringRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicTextClusteringRequest := _PublicTextClusteringRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicTextClusteringRequest)

	if err != nil {
		return err
	}

	*o = PublicTextClusteringRequest(varPublicTextClusteringRequest)

	return err
}

type NullablePublicTextClusteringRequest struct {
	value *PublicTextClusteringRequest
	isSet bool
}

func (v NullablePublicTextClusteringRequest) Get() *PublicTextClusteringRequest {
	return v.value
}

func (v *NullablePublicTextClusteringRequest) Set(val *PublicTextClusteringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicTextClusteringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicTextClusteringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicTextClusteringRequest(val *PublicTextClusteringRequest) *NullablePublicTextClusteringRequest {
	return &NullablePublicTextClusteringRequest{value: val, isSet: true}
}

func (v NullablePublicTextClusteringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicTextClusteringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the SSLCertificateIssuedBy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSLCertificateIssuedBy{}

// SSLCertificateIssuedBy struct for SSLCertificateIssuedBy
type SSLCertificateIssuedBy struct {
	// The common name of the entity the certificate was issued by
	CommonName *string `json:"common_name,omitempty"`
	// The organization the certificate was issued by
	Organization *string `json:"organization,omitempty"`
	// The organizational unit the certificate was issued by
	OrganizationUnit *string `json:"organization_unit,omitempty"`
}

// NewSSLCertificateIssuedBy instantiates a new SSLCertificateIssuedBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSLCertificateIssuedBy() *SSLCertificateIssuedBy {
	this := SSLCertificateIssuedBy{}
	return &this
}

// NewSSLCertificateIssuedByWithDefaults instantiates a new SSLCertificateIssuedBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSLCertificateIssuedByWithDefaults() *SSLCertificateIssuedBy {
	this := SSLCertificateIssuedBy{}
	return &this
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *SSLCertificateIssuedBy) GetCommonName() string {
	if o == nil || IsNil(o.CommonName) {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSLCertificateIssuedBy) GetCommonNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommonName) {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *SSLCertificateIssuedBy) HasCommonName() bool {
	if o != nil && !IsNil(o.CommonName) {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *SSLCertificateIssuedBy) SetCommonName(v string) {
	o.CommonName = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *SSLCertificateIssuedBy) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSLCertificateIssuedBy) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *SSLCertificateIssuedBy) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *SSLCertificateIssuedBy) SetOrganization(v string) {
	o.Organization = &v
}

// GetOrganizationUnit returns the OrganizationUnit field value if set, zero value otherwise.
func (o *SSLCertificateIssuedBy) GetOrganizationUnit() string {
	if o == nil || IsNil(o.OrganizationUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationUnit
}

// GetOrganizationUnitOk returns a tuple with the OrganizationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSLCertificateIssuedBy) GetOrganizationUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationUnit) {
		return nil, false
	}
	return o.OrganizationUnit, true
}

// HasOrganizationUnit returns a boolean if a field has been set.
func (o *SSLCertificateIssuedBy) HasOrganizationUnit() bool {
	if o != nil && !IsNil(o.OrganizationUnit) {
		return true
	}

	return false
}

// SetOrganizationUnit gets a reference to the given string and assigns it to the OrganizationUnit field.
func (o *SSLCertificateIssuedBy) SetOrganizationUnit(v string) {
	o.OrganizationUnit = &v
}

func (o SSLCertificateIssuedBy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSLCertificateIssuedBy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommonName) {
		toSerialize["common_name"] = o.CommonName
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.OrganizationUnit) {
		toSerialize["organization_unit"] = o.OrganizationUnit
	}
	return toSerialize, nil
}

type NullableSSLCertificateIssuedBy struct {
	value *SSLCertificateIssuedBy
	isSet bool
}

func (v NullableSSLCertificateIssuedBy) Get() *SSLCertificateIssuedBy {
	return v.value
}

func (v *NullableSSLCertificateIssuedBy) Set(val *SSLCertificateIssuedBy) {
	v.value = val
	v.isSet = true
}

func (v NullableSSLCertificateIssuedBy) IsSet() bool {
	return v.isSet
}

func (v *NullableSSLCertificateIssuedBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSLCertificateIssuedBy(val *SSLCertificateIssuedBy) *NullableSSLCertificateIssuedBy {
	return &NullableSSLCertificateIssuedBy{value: val, isSet: true}
}

func (v NullableSSLCertificateIssuedBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSLCertificateIssuedBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



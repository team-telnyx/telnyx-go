/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"fmt"
)

// VerificationProfileRecordType The possible verification profile record types.
type VerificationProfileRecordType string

// List of VerificationProfileRecordType
const (
	VERIFICATION_PROFILE VerificationProfileRecordType = "verification_profile"
)

// All allowed values of VerificationProfileRecordType enum
var AllowedVerificationProfileRecordTypeEnumValues = []VerificationProfileRecordType{
	"verification_profile",
}

func (v *VerificationProfileRecordType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VerificationProfileRecordType(value)
	for _, existing := range AllowedVerificationProfileRecordTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VerificationProfileRecordType", value)
}

// NewVerificationProfileRecordTypeFromValue returns a pointer to a valid VerificationProfileRecordType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVerificationProfileRecordTypeFromValue(v string) (*VerificationProfileRecordType, error) {
	ev := VerificationProfileRecordType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VerificationProfileRecordType: valid values are %v", v, AllowedVerificationProfileRecordTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VerificationProfileRecordType) IsValid() bool {
	for _, existing := range AllowedVerificationProfileRecordTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VerificationProfileRecordType value
func (v VerificationProfileRecordType) Ptr() *VerificationProfileRecordType {
	return &v
}

type NullableVerificationProfileRecordType struct {
	value *VerificationProfileRecordType
	isSet bool
}

func (v NullableVerificationProfileRecordType) Get() *VerificationProfileRecordType {
	return v.value
}

func (v *NullableVerificationProfileRecordType) Set(val *VerificationProfileRecordType) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationProfileRecordType) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationProfileRecordType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationProfileRecordType(val *VerificationProfileRecordType) *NullableVerificationProfileRecordType {
	return &NullableVerificationProfileRecordType{value: val, isSet: true}
}

func (v NullableVerificationProfileRecordType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationProfileRecordType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


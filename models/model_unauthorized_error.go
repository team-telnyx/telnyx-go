/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the UnauthorizedError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnauthorizedError{}

// UnauthorizedError struct for UnauthorizedError
type UnauthorizedError struct {
	Code interface{} `json:"code,omitempty"`
	Title interface{} `json:"title,omitempty"`
	Detail interface{} `json:"detail,omitempty"`
	Source *UpdateOutboundChannelsDefaultResponseErrorsInnerSource `json:"source,omitempty"`
	Meta *UnauthorizedErrorAllOfMeta `json:"meta,omitempty"`
}

// NewUnauthorizedError instantiates a new UnauthorizedError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorizedError() *UnauthorizedError {
	this := UnauthorizedError{}
	return &this
}

// NewUnauthorizedErrorWithDefaults instantiates a new UnauthorizedError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorizedErrorWithDefaults() *UnauthorizedError {
	this := UnauthorizedError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnauthorizedError) GetCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnauthorizedError) GetCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return &o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UnauthorizedError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given interface{} and assigns it to the Code field.
func (o *UnauthorizedError) SetCode(v interface{}) {
	o.Code = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnauthorizedError) GetTitle() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnauthorizedError) GetTitleOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return &o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UnauthorizedError) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given interface{} and assigns it to the Title field.
func (o *UnauthorizedError) SetTitle(v interface{}) {
	o.Title = v
}

// GetDetail returns the Detail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnauthorizedError) GetDetail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnauthorizedError) GetDetailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return &o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *UnauthorizedError) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given interface{} and assigns it to the Detail field.
func (o *UnauthorizedError) SetDetail(v interface{}) {
	o.Detail = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *UnauthorizedError) GetSource() UpdateOutboundChannelsDefaultResponseErrorsInnerSource {
	if o == nil || IsNil(o.Source) {
		var ret UpdateOutboundChannelsDefaultResponseErrorsInnerSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthorizedError) GetSourceOk() (*UpdateOutboundChannelsDefaultResponseErrorsInnerSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *UnauthorizedError) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given UpdateOutboundChannelsDefaultResponseErrorsInnerSource and assigns it to the Source field.
func (o *UnauthorizedError) SetSource(v UpdateOutboundChannelsDefaultResponseErrorsInnerSource) {
	o.Source = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *UnauthorizedError) GetMeta() UnauthorizedErrorAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret UnauthorizedErrorAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthorizedError) GetMetaOk() (*UnauthorizedErrorAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *UnauthorizedError) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given UnauthorizedErrorAllOfMeta and assigns it to the Meta field.
func (o *UnauthorizedError) SetMeta(v UnauthorizedErrorAllOfMeta) {
	o.Meta = &v
}

func (o UnauthorizedError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnauthorizedError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableUnauthorizedError struct {
	value *UnauthorizedError
	isSet bool
}

func (v NullableUnauthorizedError) Get() *UnauthorizedError {
	return v.value
}

func (v *NullableUnauthorizedError) Set(val *UnauthorizedError) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorizedError) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorizedError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorizedError(val *UnauthorizedError) *NullableUnauthorizedError {
	return &NullableUnauthorizedError{value: val, isSet: true}
}

func (v NullableUnauthorizedError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorizedError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TnUploadEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TnUploadEntry{}

// TnUploadEntry struct for TnUploadEntry
type TnUploadEntry struct {
	// Uniquely identifies the resource.
	NumberId *string `json:"number_id,omitempty"`
	// Phone number in E164 format.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Represents the status of the phone number entry upload on Microsoft Teams.
	Status *string `json:"status,omitempty"`
	// A code returned by Microsoft Teams if there is an error with the phone number entry upload.
	ErrorCode *string `json:"error_code,omitempty"`
	// A message returned by Microsoft Teams if there is an error with the upload process.
	ErrorMessage *string `json:"error_message,omitempty"`
	// Identifies the civic address assigned to the phone number entry.
	CivicAddressId *string `json:"civic_address_id,omitempty"`
	// Identifies the location assigned to the phone number entry.
	LocationId *string `json:"location_id,omitempty"`
	// Represents the status of the phone number entry upload on Telnyx.
	InternalStatus *string `json:"internal_status,omitempty"`
}

// NewTnUploadEntry instantiates a new TnUploadEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTnUploadEntry() *TnUploadEntry {
	this := TnUploadEntry{}
	var status string = "pending_upload"
	this.Status = &status
	var internalStatus string = "pending_assignment"
	this.InternalStatus = &internalStatus
	return &this
}

// NewTnUploadEntryWithDefaults instantiates a new TnUploadEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTnUploadEntryWithDefaults() *TnUploadEntry {
	this := TnUploadEntry{}
	var status string = "pending_upload"
	this.Status = &status
	var internalStatus string = "pending_assignment"
	this.InternalStatus = &internalStatus
	return &this
}

// GetNumberId returns the NumberId field value if set, zero value otherwise.
func (o *TnUploadEntry) GetNumberId() string {
	if o == nil || IsNil(o.NumberId) {
		var ret string
		return ret
	}
	return *o.NumberId
}

// GetNumberIdOk returns a tuple with the NumberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetNumberIdOk() (*string, bool) {
	if o == nil || IsNil(o.NumberId) {
		return nil, false
	}
	return o.NumberId, true
}

// HasNumberId returns a boolean if a field has been set.
func (o *TnUploadEntry) HasNumberId() bool {
	if o != nil && !IsNil(o.NumberId) {
		return true
	}

	return false
}

// SetNumberId gets a reference to the given string and assigns it to the NumberId field.
func (o *TnUploadEntry) SetNumberId(v string) {
	o.NumberId = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *TnUploadEntry) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *TnUploadEntry) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *TnUploadEntry) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TnUploadEntry) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TnUploadEntry) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TnUploadEntry) SetStatus(v string) {
	o.Status = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *TnUploadEntry) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *TnUploadEntry) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *TnUploadEntry) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *TnUploadEntry) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *TnUploadEntry) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *TnUploadEntry) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetCivicAddressId returns the CivicAddressId field value if set, zero value otherwise.
func (o *TnUploadEntry) GetCivicAddressId() string {
	if o == nil || IsNil(o.CivicAddressId) {
		var ret string
		return ret
	}
	return *o.CivicAddressId
}

// GetCivicAddressIdOk returns a tuple with the CivicAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetCivicAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.CivicAddressId) {
		return nil, false
	}
	return o.CivicAddressId, true
}

// HasCivicAddressId returns a boolean if a field has been set.
func (o *TnUploadEntry) HasCivicAddressId() bool {
	if o != nil && !IsNil(o.CivicAddressId) {
		return true
	}

	return false
}

// SetCivicAddressId gets a reference to the given string and assigns it to the CivicAddressId field.
func (o *TnUploadEntry) SetCivicAddressId(v string) {
	o.CivicAddressId = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *TnUploadEntry) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *TnUploadEntry) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *TnUploadEntry) SetLocationId(v string) {
	o.LocationId = &v
}

// GetInternalStatus returns the InternalStatus field value if set, zero value otherwise.
func (o *TnUploadEntry) GetInternalStatus() string {
	if o == nil || IsNil(o.InternalStatus) {
		var ret string
		return ret
	}
	return *o.InternalStatus
}

// GetInternalStatusOk returns a tuple with the InternalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TnUploadEntry) GetInternalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.InternalStatus) {
		return nil, false
	}
	return o.InternalStatus, true
}

// HasInternalStatus returns a boolean if a field has been set.
func (o *TnUploadEntry) HasInternalStatus() bool {
	if o != nil && !IsNil(o.InternalStatus) {
		return true
	}

	return false
}

// SetInternalStatus gets a reference to the given string and assigns it to the InternalStatus field.
func (o *TnUploadEntry) SetInternalStatus(v string) {
	o.InternalStatus = &v
}

func (o TnUploadEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TnUploadEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberId) {
		toSerialize["number_id"] = o.NumberId
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if !IsNil(o.CivicAddressId) {
		toSerialize["civic_address_id"] = o.CivicAddressId
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.InternalStatus) {
		toSerialize["internal_status"] = o.InternalStatus
	}
	return toSerialize, nil
}

type NullableTnUploadEntry struct {
	value *TnUploadEntry
	isSet bool
}

func (v NullableTnUploadEntry) Get() *TnUploadEntry {
	return v.value
}

func (v *NullableTnUploadEntry) Set(val *TnUploadEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTnUploadEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTnUploadEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTnUploadEntry(val *TnUploadEntry) *NullableTnUploadEntry {
	return &NullableTnUploadEntry{value: val, isSet: true}
}

func (v NullableTnUploadEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTnUploadEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



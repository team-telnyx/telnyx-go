/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the CallCostPayloadCostPartsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallCostPayloadCostPartsInner{}

// CallCostPayloadCostPartsInner struct for CallCostPayloadCostPartsInner
type CallCostPayloadCostPartsInner struct {
	// The number of seconds for which this item will be billed
	BilledDurationSecs *int32 `json:"billed_duration_secs,omitempty"`
	// The service incurring a charge
	CallPart *string `json:"call_part,omitempty"`
	// The billed cost of the item, in currency shown in the `currency` field
	Cost *float32 `json:"cost,omitempty"`
	// The currency in which `cost` is measured
	Currency *string `json:"currency,omitempty"`
	// The cost per unit of the item incurring a charge
	Rate *float32 `json:"rate,omitempty"`
}

// NewCallCostPayloadCostPartsInner instantiates a new CallCostPayloadCostPartsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallCostPayloadCostPartsInner() *CallCostPayloadCostPartsInner {
	this := CallCostPayloadCostPartsInner{}
	return &this
}

// NewCallCostPayloadCostPartsInnerWithDefaults instantiates a new CallCostPayloadCostPartsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallCostPayloadCostPartsInnerWithDefaults() *CallCostPayloadCostPartsInner {
	this := CallCostPayloadCostPartsInner{}
	return &this
}

// GetBilledDurationSecs returns the BilledDurationSecs field value if set, zero value otherwise.
func (o *CallCostPayloadCostPartsInner) GetBilledDurationSecs() int32 {
	if o == nil || IsNil(o.BilledDurationSecs) {
		var ret int32
		return ret
	}
	return *o.BilledDurationSecs
}

// GetBilledDurationSecsOk returns a tuple with the BilledDurationSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayloadCostPartsInner) GetBilledDurationSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.BilledDurationSecs) {
		return nil, false
	}
	return o.BilledDurationSecs, true
}

// HasBilledDurationSecs returns a boolean if a field has been set.
func (o *CallCostPayloadCostPartsInner) HasBilledDurationSecs() bool {
	if o != nil && !IsNil(o.BilledDurationSecs) {
		return true
	}

	return false
}

// SetBilledDurationSecs gets a reference to the given int32 and assigns it to the BilledDurationSecs field.
func (o *CallCostPayloadCostPartsInner) SetBilledDurationSecs(v int32) {
	o.BilledDurationSecs = &v
}

// GetCallPart returns the CallPart field value if set, zero value otherwise.
func (o *CallCostPayloadCostPartsInner) GetCallPart() string {
	if o == nil || IsNil(o.CallPart) {
		var ret string
		return ret
	}
	return *o.CallPart
}

// GetCallPartOk returns a tuple with the CallPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayloadCostPartsInner) GetCallPartOk() (*string, bool) {
	if o == nil || IsNil(o.CallPart) {
		return nil, false
	}
	return o.CallPart, true
}

// HasCallPart returns a boolean if a field has been set.
func (o *CallCostPayloadCostPartsInner) HasCallPart() bool {
	if o != nil && !IsNil(o.CallPart) {
		return true
	}

	return false
}

// SetCallPart gets a reference to the given string and assigns it to the CallPart field.
func (o *CallCostPayloadCostPartsInner) SetCallPart(v string) {
	o.CallPart = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *CallCostPayloadCostPartsInner) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayloadCostPartsInner) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *CallCostPayloadCostPartsInner) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *CallCostPayloadCostPartsInner) SetCost(v float32) {
	o.Cost = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CallCostPayloadCostPartsInner) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayloadCostPartsInner) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CallCostPayloadCostPartsInner) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CallCostPayloadCostPartsInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *CallCostPayloadCostPartsInner) GetRate() float32 {
	if o == nil || IsNil(o.Rate) {
		var ret float32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallCostPayloadCostPartsInner) GetRateOk() (*float32, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *CallCostPayloadCostPartsInner) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given float32 and assigns it to the Rate field.
func (o *CallCostPayloadCostPartsInner) SetRate(v float32) {
	o.Rate = &v
}

func (o CallCostPayloadCostPartsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallCostPayloadCostPartsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BilledDurationSecs) {
		toSerialize["billed_duration_secs"] = o.BilledDurationSecs
	}
	if !IsNil(o.CallPart) {
		toSerialize["call_part"] = o.CallPart
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	return toSerialize, nil
}

type NullableCallCostPayloadCostPartsInner struct {
	value *CallCostPayloadCostPartsInner
	isSet bool
}

func (v NullableCallCostPayloadCostPartsInner) Get() *CallCostPayloadCostPartsInner {
	return v.value
}

func (v *NullableCallCostPayloadCostPartsInner) Set(val *CallCostPayloadCostPartsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCallCostPayloadCostPartsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCallCostPayloadCostPartsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallCostPayloadCostPartsInner(val *CallCostPayloadCostPartsInner) *NullableCallCostPayloadCostPartsInner {
	return &NullableCallCostPayloadCostPartsInner{value: val, isSet: true}
}

func (v NullableCallCostPayloadCostPartsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallCostPayloadCostPartsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



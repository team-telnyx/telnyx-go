/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GatherUsingAudioRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatherUsingAudioRequest{}

// GatherUsingAudioRequest struct for GatherUsingAudioRequest
type GatherUsingAudioRequest struct {
	// The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file. media_name and audio_url cannot be used together in one request.
	AudioUrl *string `json:"audio_url,omitempty"`
	// The media_name of a file to be played back at the beginning of each prompt. The media_name must point to a file previously uploaded to api.telnyx.com/v2/media by the same user/organization. The file must either be a WAV or MP3 file.
	MediaName *string `json:"media_name,omitempty"`
	// The URL of a file to play when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. The URL can point to either a WAV or MP3 file. invalid_media_name and invalid_audio_url cannot be used together in one request.
	InvalidAudioUrl *string `json:"invalid_audio_url,omitempty"`
	// The media_name of a file to be played back when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. The media_name must point to a file previously uploaded to api.telnyx.com/v2/media by the same user/organization. The file must either be a WAV or MP3 file.
	InvalidMediaName *string `json:"invalid_media_name,omitempty"`
	// The minimum number of digits to fetch. This parameter has a minimum value of 1.
	MinimumDigits *int32 `json:"minimum_digits,omitempty"`
	// The maximum number of digits to fetch. This parameter has a maximum value of 128.
	MaximumDigits *int32 `json:"maximum_digits,omitempty"`
	// The maximum number of times the file should be played if there is no input from the user on the call.
	MaximumTries *int32 `json:"maximum_tries,omitempty"`
	// The number of milliseconds to wait for a DTMF response after file playback ends before a replaying the sound file.
	TimeoutMillis *int32 `json:"timeout_millis,omitempty"`
	// The digit used to terminate input if fewer than `maximum_digits` digits have been gathered.
	TerminatingDigit *string `json:"terminating_digit,omitempty"`
	// A list of all digits accepted as valid.
	ValidDigits *string `json:"valid_digits,omitempty"`
	// The number of milliseconds to wait for input between digits.
	InterDigitTimeoutMillis *int32 `json:"inter_digit_timeout_millis,omitempty"`
	// Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
	ClientState *string `json:"client_state,omitempty"`
	// Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.
	CommandId *string `json:"command_id,omitempty"`
}

// NewGatherUsingAudioRequest instantiates a new GatherUsingAudioRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatherUsingAudioRequest() *GatherUsingAudioRequest {
	this := GatherUsingAudioRequest{}
	var minimumDigits int32 = 1
	this.MinimumDigits = &minimumDigits
	var maximumDigits int32 = 128
	this.MaximumDigits = &maximumDigits
	var maximumTries int32 = 3
	this.MaximumTries = &maximumTries
	var timeoutMillis int32 = 60000
	this.TimeoutMillis = &timeoutMillis
	var terminatingDigit string = "#"
	this.TerminatingDigit = &terminatingDigit
	var validDigits string = "0123456789#*"
	this.ValidDigits = &validDigits
	var interDigitTimeoutMillis int32 = 5000
	this.InterDigitTimeoutMillis = &interDigitTimeoutMillis
	return &this
}

// NewGatherUsingAudioRequestWithDefaults instantiates a new GatherUsingAudioRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatherUsingAudioRequestWithDefaults() *GatherUsingAudioRequest {
	this := GatherUsingAudioRequest{}
	var minimumDigits int32 = 1
	this.MinimumDigits = &minimumDigits
	var maximumDigits int32 = 128
	this.MaximumDigits = &maximumDigits
	var maximumTries int32 = 3
	this.MaximumTries = &maximumTries
	var timeoutMillis int32 = 60000
	this.TimeoutMillis = &timeoutMillis
	var terminatingDigit string = "#"
	this.TerminatingDigit = &terminatingDigit
	var validDigits string = "0123456789#*"
	this.ValidDigits = &validDigits
	var interDigitTimeoutMillis int32 = 5000
	this.InterDigitTimeoutMillis = &interDigitTimeoutMillis
	return &this
}

// GetAudioUrl returns the AudioUrl field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetAudioUrl() string {
	if o == nil || IsNil(o.AudioUrl) {
		var ret string
		return ret
	}
	return *o.AudioUrl
}

// GetAudioUrlOk returns a tuple with the AudioUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetAudioUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AudioUrl) {
		return nil, false
	}
	return o.AudioUrl, true
}

// HasAudioUrl returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasAudioUrl() bool {
	if o != nil && !IsNil(o.AudioUrl) {
		return true
	}

	return false
}

// SetAudioUrl gets a reference to the given string and assigns it to the AudioUrl field.
func (o *GatherUsingAudioRequest) SetAudioUrl(v string) {
	o.AudioUrl = &v
}

// GetMediaName returns the MediaName field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetMediaName() string {
	if o == nil || IsNil(o.MediaName) {
		var ret string
		return ret
	}
	return *o.MediaName
}

// GetMediaNameOk returns a tuple with the MediaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetMediaNameOk() (*string, bool) {
	if o == nil || IsNil(o.MediaName) {
		return nil, false
	}
	return o.MediaName, true
}

// HasMediaName returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasMediaName() bool {
	if o != nil && !IsNil(o.MediaName) {
		return true
	}

	return false
}

// SetMediaName gets a reference to the given string and assigns it to the MediaName field.
func (o *GatherUsingAudioRequest) SetMediaName(v string) {
	o.MediaName = &v
}

// GetInvalidAudioUrl returns the InvalidAudioUrl field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetInvalidAudioUrl() string {
	if o == nil || IsNil(o.InvalidAudioUrl) {
		var ret string
		return ret
	}
	return *o.InvalidAudioUrl
}

// GetInvalidAudioUrlOk returns a tuple with the InvalidAudioUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetInvalidAudioUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InvalidAudioUrl) {
		return nil, false
	}
	return o.InvalidAudioUrl, true
}

// HasInvalidAudioUrl returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasInvalidAudioUrl() bool {
	if o != nil && !IsNil(o.InvalidAudioUrl) {
		return true
	}

	return false
}

// SetInvalidAudioUrl gets a reference to the given string and assigns it to the InvalidAudioUrl field.
func (o *GatherUsingAudioRequest) SetInvalidAudioUrl(v string) {
	o.InvalidAudioUrl = &v
}

// GetInvalidMediaName returns the InvalidMediaName field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetInvalidMediaName() string {
	if o == nil || IsNil(o.InvalidMediaName) {
		var ret string
		return ret
	}
	return *o.InvalidMediaName
}

// GetInvalidMediaNameOk returns a tuple with the InvalidMediaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetInvalidMediaNameOk() (*string, bool) {
	if o == nil || IsNil(o.InvalidMediaName) {
		return nil, false
	}
	return o.InvalidMediaName, true
}

// HasInvalidMediaName returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasInvalidMediaName() bool {
	if o != nil && !IsNil(o.InvalidMediaName) {
		return true
	}

	return false
}

// SetInvalidMediaName gets a reference to the given string and assigns it to the InvalidMediaName field.
func (o *GatherUsingAudioRequest) SetInvalidMediaName(v string) {
	o.InvalidMediaName = &v
}

// GetMinimumDigits returns the MinimumDigits field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetMinimumDigits() int32 {
	if o == nil || IsNil(o.MinimumDigits) {
		var ret int32
		return ret
	}
	return *o.MinimumDigits
}

// GetMinimumDigitsOk returns a tuple with the MinimumDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetMinimumDigitsOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumDigits) {
		return nil, false
	}
	return o.MinimumDigits, true
}

// HasMinimumDigits returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasMinimumDigits() bool {
	if o != nil && !IsNil(o.MinimumDigits) {
		return true
	}

	return false
}

// SetMinimumDigits gets a reference to the given int32 and assigns it to the MinimumDigits field.
func (o *GatherUsingAudioRequest) SetMinimumDigits(v int32) {
	o.MinimumDigits = &v
}

// GetMaximumDigits returns the MaximumDigits field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetMaximumDigits() int32 {
	if o == nil || IsNil(o.MaximumDigits) {
		var ret int32
		return ret
	}
	return *o.MaximumDigits
}

// GetMaximumDigitsOk returns a tuple with the MaximumDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetMaximumDigitsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumDigits) {
		return nil, false
	}
	return o.MaximumDigits, true
}

// HasMaximumDigits returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasMaximumDigits() bool {
	if o != nil && !IsNil(o.MaximumDigits) {
		return true
	}

	return false
}

// SetMaximumDigits gets a reference to the given int32 and assigns it to the MaximumDigits field.
func (o *GatherUsingAudioRequest) SetMaximumDigits(v int32) {
	o.MaximumDigits = &v
}

// GetMaximumTries returns the MaximumTries field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetMaximumTries() int32 {
	if o == nil || IsNil(o.MaximumTries) {
		var ret int32
		return ret
	}
	return *o.MaximumTries
}

// GetMaximumTriesOk returns a tuple with the MaximumTries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetMaximumTriesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumTries) {
		return nil, false
	}
	return o.MaximumTries, true
}

// HasMaximumTries returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasMaximumTries() bool {
	if o != nil && !IsNil(o.MaximumTries) {
		return true
	}

	return false
}

// SetMaximumTries gets a reference to the given int32 and assigns it to the MaximumTries field.
func (o *GatherUsingAudioRequest) SetMaximumTries(v int32) {
	o.MaximumTries = &v
}

// GetTimeoutMillis returns the TimeoutMillis field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetTimeoutMillis() int32 {
	if o == nil || IsNil(o.TimeoutMillis) {
		var ret int32
		return ret
	}
	return *o.TimeoutMillis
}

// GetTimeoutMillisOk returns a tuple with the TimeoutMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetTimeoutMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutMillis) {
		return nil, false
	}
	return o.TimeoutMillis, true
}

// HasTimeoutMillis returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasTimeoutMillis() bool {
	if o != nil && !IsNil(o.TimeoutMillis) {
		return true
	}

	return false
}

// SetTimeoutMillis gets a reference to the given int32 and assigns it to the TimeoutMillis field.
func (o *GatherUsingAudioRequest) SetTimeoutMillis(v int32) {
	o.TimeoutMillis = &v
}

// GetTerminatingDigit returns the TerminatingDigit field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetTerminatingDigit() string {
	if o == nil || IsNil(o.TerminatingDigit) {
		var ret string
		return ret
	}
	return *o.TerminatingDigit
}

// GetTerminatingDigitOk returns a tuple with the TerminatingDigit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetTerminatingDigitOk() (*string, bool) {
	if o == nil || IsNil(o.TerminatingDigit) {
		return nil, false
	}
	return o.TerminatingDigit, true
}

// HasTerminatingDigit returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasTerminatingDigit() bool {
	if o != nil && !IsNil(o.TerminatingDigit) {
		return true
	}

	return false
}

// SetTerminatingDigit gets a reference to the given string and assigns it to the TerminatingDigit field.
func (o *GatherUsingAudioRequest) SetTerminatingDigit(v string) {
	o.TerminatingDigit = &v
}

// GetValidDigits returns the ValidDigits field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetValidDigits() string {
	if o == nil || IsNil(o.ValidDigits) {
		var ret string
		return ret
	}
	return *o.ValidDigits
}

// GetValidDigitsOk returns a tuple with the ValidDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetValidDigitsOk() (*string, bool) {
	if o == nil || IsNil(o.ValidDigits) {
		return nil, false
	}
	return o.ValidDigits, true
}

// HasValidDigits returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasValidDigits() bool {
	if o != nil && !IsNil(o.ValidDigits) {
		return true
	}

	return false
}

// SetValidDigits gets a reference to the given string and assigns it to the ValidDigits field.
func (o *GatherUsingAudioRequest) SetValidDigits(v string) {
	o.ValidDigits = &v
}

// GetInterDigitTimeoutMillis returns the InterDigitTimeoutMillis field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetInterDigitTimeoutMillis() int32 {
	if o == nil || IsNil(o.InterDigitTimeoutMillis) {
		var ret int32
		return ret
	}
	return *o.InterDigitTimeoutMillis
}

// GetInterDigitTimeoutMillisOk returns a tuple with the InterDigitTimeoutMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetInterDigitTimeoutMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.InterDigitTimeoutMillis) {
		return nil, false
	}
	return o.InterDigitTimeoutMillis, true
}

// HasInterDigitTimeoutMillis returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasInterDigitTimeoutMillis() bool {
	if o != nil && !IsNil(o.InterDigitTimeoutMillis) {
		return true
	}

	return false
}

// SetInterDigitTimeoutMillis gets a reference to the given int32 and assigns it to the InterDigitTimeoutMillis field.
func (o *GatherUsingAudioRequest) SetInterDigitTimeoutMillis(v int32) {
	o.InterDigitTimeoutMillis = &v
}

// GetClientState returns the ClientState field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetClientState() string {
	if o == nil || IsNil(o.ClientState) {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetClientStateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientState) {
		return nil, false
	}
	return o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasClientState() bool {
	if o != nil && !IsNil(o.ClientState) {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *GatherUsingAudioRequest) SetClientState(v string) {
	o.ClientState = &v
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *GatherUsingAudioRequest) GetCommandId() string {
	if o == nil || IsNil(o.CommandId) {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatherUsingAudioRequest) GetCommandIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommandId) {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *GatherUsingAudioRequest) HasCommandId() bool {
	if o != nil && !IsNil(o.CommandId) {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *GatherUsingAudioRequest) SetCommandId(v string) {
	o.CommandId = &v
}

func (o GatherUsingAudioRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatherUsingAudioRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioUrl) {
		toSerialize["audio_url"] = o.AudioUrl
	}
	if !IsNil(o.MediaName) {
		toSerialize["media_name"] = o.MediaName
	}
	if !IsNil(o.InvalidAudioUrl) {
		toSerialize["invalid_audio_url"] = o.InvalidAudioUrl
	}
	if !IsNil(o.InvalidMediaName) {
		toSerialize["invalid_media_name"] = o.InvalidMediaName
	}
	if !IsNil(o.MinimumDigits) {
		toSerialize["minimum_digits"] = o.MinimumDigits
	}
	if !IsNil(o.MaximumDigits) {
		toSerialize["maximum_digits"] = o.MaximumDigits
	}
	if !IsNil(o.MaximumTries) {
		toSerialize["maximum_tries"] = o.MaximumTries
	}
	if !IsNil(o.TimeoutMillis) {
		toSerialize["timeout_millis"] = o.TimeoutMillis
	}
	if !IsNil(o.TerminatingDigit) {
		toSerialize["terminating_digit"] = o.TerminatingDigit
	}
	if !IsNil(o.ValidDigits) {
		toSerialize["valid_digits"] = o.ValidDigits
	}
	if !IsNil(o.InterDigitTimeoutMillis) {
		toSerialize["inter_digit_timeout_millis"] = o.InterDigitTimeoutMillis
	}
	if !IsNil(o.ClientState) {
		toSerialize["client_state"] = o.ClientState
	}
	if !IsNil(o.CommandId) {
		toSerialize["command_id"] = o.CommandId
	}
	return toSerialize, nil
}

type NullableGatherUsingAudioRequest struct {
	value *GatherUsingAudioRequest
	isSet bool
}

func (v NullableGatherUsingAudioRequest) Get() *GatherUsingAudioRequest {
	return v.value
}

func (v *NullableGatherUsingAudioRequest) Set(val *GatherUsingAudioRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGatherUsingAudioRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGatherUsingAudioRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatherUsingAudioRequest(val *GatherUsingAudioRequest) *NullableGatherUsingAudioRequest {
	return &NullableGatherUsingAudioRequest{value: val, isSet: true}
}

func (v NullableGatherUsingAudioRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatherUsingAudioRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



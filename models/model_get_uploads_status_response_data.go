/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the GetUploadsStatusResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUploadsStatusResponseData{}

// GetUploadsStatusResponseData struct for GetUploadsStatusResponseData
type GetUploadsStatusResponseData struct {
	// The count of phone numbers that are pending assignment to the external connection.
	PendingNumbersCount *int32 `json:"pending_numbers_count,omitempty"`
	// The count of number uploads that have not yet been uploaded to Microsoft.
	PendingOrdersCount *int32 `json:"pending_orders_count,omitempty"`
}

// NewGetUploadsStatusResponseData instantiates a new GetUploadsStatusResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUploadsStatusResponseData() *GetUploadsStatusResponseData {
	this := GetUploadsStatusResponseData{}
	return &this
}

// NewGetUploadsStatusResponseDataWithDefaults instantiates a new GetUploadsStatusResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUploadsStatusResponseDataWithDefaults() *GetUploadsStatusResponseData {
	this := GetUploadsStatusResponseData{}
	return &this
}

// GetPendingNumbersCount returns the PendingNumbersCount field value if set, zero value otherwise.
func (o *GetUploadsStatusResponseData) GetPendingNumbersCount() int32 {
	if o == nil || IsNil(o.PendingNumbersCount) {
		var ret int32
		return ret
	}
	return *o.PendingNumbersCount
}

// GetPendingNumbersCountOk returns a tuple with the PendingNumbersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUploadsStatusResponseData) GetPendingNumbersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PendingNumbersCount) {
		return nil, false
	}
	return o.PendingNumbersCount, true
}

// HasPendingNumbersCount returns a boolean if a field has been set.
func (o *GetUploadsStatusResponseData) HasPendingNumbersCount() bool {
	if o != nil && !IsNil(o.PendingNumbersCount) {
		return true
	}

	return false
}

// SetPendingNumbersCount gets a reference to the given int32 and assigns it to the PendingNumbersCount field.
func (o *GetUploadsStatusResponseData) SetPendingNumbersCount(v int32) {
	o.PendingNumbersCount = &v
}

// GetPendingOrdersCount returns the PendingOrdersCount field value if set, zero value otherwise.
func (o *GetUploadsStatusResponseData) GetPendingOrdersCount() int32 {
	if o == nil || IsNil(o.PendingOrdersCount) {
		var ret int32
		return ret
	}
	return *o.PendingOrdersCount
}

// GetPendingOrdersCountOk returns a tuple with the PendingOrdersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUploadsStatusResponseData) GetPendingOrdersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PendingOrdersCount) {
		return nil, false
	}
	return o.PendingOrdersCount, true
}

// HasPendingOrdersCount returns a boolean if a field has been set.
func (o *GetUploadsStatusResponseData) HasPendingOrdersCount() bool {
	if o != nil && !IsNil(o.PendingOrdersCount) {
		return true
	}

	return false
}

// SetPendingOrdersCount gets a reference to the given int32 and assigns it to the PendingOrdersCount field.
func (o *GetUploadsStatusResponseData) SetPendingOrdersCount(v int32) {
	o.PendingOrdersCount = &v
}

func (o GetUploadsStatusResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUploadsStatusResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PendingNumbersCount) {
		toSerialize["pending_numbers_count"] = o.PendingNumbersCount
	}
	if !IsNil(o.PendingOrdersCount) {
		toSerialize["pending_orders_count"] = o.PendingOrdersCount
	}
	return toSerialize, nil
}

type NullableGetUploadsStatusResponseData struct {
	value *GetUploadsStatusResponseData
	isSet bool
}

func (v NullableGetUploadsStatusResponseData) Get() *GetUploadsStatusResponseData {
	return v.value
}

func (v *NullableGetUploadsStatusResponseData) Set(val *GetUploadsStatusResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUploadsStatusResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUploadsStatusResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUploadsStatusResponseData(val *GetUploadsStatusResponseData) *NullableGetUploadsStatusResponseData {
	return &NullableGetUploadsStatusResponseData{value: val, isSet: true}
}

func (v NullableGetUploadsStatusResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUploadsStatusResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



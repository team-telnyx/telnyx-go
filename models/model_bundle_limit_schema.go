/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BundleLimitSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleLimitSchema{}

// BundleLimitSchema struct for BundleLimitSchema
type BundleLimitSchema struct {
	Id string `json:"id"`
	Service string `json:"service"`
	Metric string `json:"metric"`
	Limit *int32 `json:"limit,omitempty"`
	Rate *string `json:"rate,omitempty"`
	CountryIso *string `json:"country_iso,omitempty"`
	CountryCode *int32 `json:"country_code,omitempty"`
	// Use country_iso instead
	// Deprecated
	Country *string `json:"country,omitempty"`
	Direction *BundleLimitDirection `json:"direction,omitempty"`
	Types []string `json:"types,omitempty"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	BillingService *string `json:"billing_service,omitempty"`
}

type _BundleLimitSchema BundleLimitSchema

// NewBundleLimitSchema instantiates a new BundleLimitSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleLimitSchema(id string, service string, metric string, createdAt string, updatedAt string) *BundleLimitSchema {
	this := BundleLimitSchema{}
	this.Id = id
	this.Service = service
	this.Metric = metric
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewBundleLimitSchemaWithDefaults instantiates a new BundleLimitSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleLimitSchemaWithDefaults() *BundleLimitSchema {
	this := BundleLimitSchema{}
	return &this
}

// GetId returns the Id field value
func (o *BundleLimitSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BundleLimitSchema) SetId(v string) {
	o.Id = v
}

// GetService returns the Service field value
func (o *BundleLimitSchema) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *BundleLimitSchema) SetService(v string) {
	o.Service = v
}

// GetMetric returns the Metric field value
func (o *BundleLimitSchema) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *BundleLimitSchema) SetMetric(v string) {
	o.Metric = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *BundleLimitSchema) SetLimit(v int32) {
	o.Limit = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetRate() string {
	if o == nil || IsNil(o.Rate) {
		var ret string
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *BundleLimitSchema) SetRate(v string) {
	o.Rate = &v
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso) {
		var ret string
		return ret
	}
	return *o.CountryIso
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetCountryIsoOk() (*string, bool) {
	if o == nil || IsNil(o.CountryIso) {
		return nil, false
	}
	return o.CountryIso, true
}

// HasCountryIso returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasCountryIso() bool {
	if o != nil && !IsNil(o.CountryIso) {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given string and assigns it to the CountryIso field.
func (o *BundleLimitSchema) SetCountryIso(v string) {
	o.CountryIso = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetCountryCode() int32 {
	if o == nil || IsNil(o.CountryCode) {
		var ret int32
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetCountryCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given int32 and assigns it to the CountryCode field.
func (o *BundleLimitSchema) SetCountryCode(v int32) {
	o.CountryCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
// Deprecated
func (o *BundleLimitSchema) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BundleLimitSchema) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
// Deprecated
func (o *BundleLimitSchema) SetCountry(v string) {
	o.Country = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetDirection() BundleLimitDirection {
	if o == nil || IsNil(o.Direction) {
		var ret BundleLimitDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetDirectionOk() (*BundleLimitDirection, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given BundleLimitDirection and assigns it to the Direction field.
func (o *BundleLimitSchema) SetDirection(v BundleLimitDirection) {
	o.Direction = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *BundleLimitSchema) SetTypes(v []string) {
	o.Types = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BundleLimitSchema) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BundleLimitSchema) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BundleLimitSchema) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BundleLimitSchema) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetBillingService returns the BillingService field value if set, zero value otherwise.
func (o *BundleLimitSchema) GetBillingService() string {
	if o == nil || IsNil(o.BillingService) {
		var ret string
		return ret
	}
	return *o.BillingService
}

// GetBillingServiceOk returns a tuple with the BillingService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleLimitSchema) GetBillingServiceOk() (*string, bool) {
	if o == nil || IsNil(o.BillingService) {
		return nil, false
	}
	return o.BillingService, true
}

// HasBillingService returns a boolean if a field has been set.
func (o *BundleLimitSchema) HasBillingService() bool {
	if o != nil && !IsNil(o.BillingService) {
		return true
	}

	return false
}

// SetBillingService gets a reference to the given string and assigns it to the BillingService field.
func (o *BundleLimitSchema) SetBillingService(v string) {
	o.BillingService = &v
}

func (o BundleLimitSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleLimitSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["service"] = o.Service
	toSerialize["metric"] = o.Metric
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.CountryIso) {
		toSerialize["country_iso"] = o.CountryIso
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.BillingService) {
		toSerialize["billing_service"] = o.BillingService
	}
	return toSerialize, nil
}

func (o *BundleLimitSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"service",
		"metric",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBundleLimitSchema := _BundleLimitSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBundleLimitSchema)

	if err != nil {
		return err
	}

	*o = BundleLimitSchema(varBundleLimitSchema)

	return err
}

type NullableBundleLimitSchema struct {
	value *BundleLimitSchema
	isSet bool
}

func (v NullableBundleLimitSchema) Get() *BundleLimitSchema {
	return v.value
}

func (v *NullableBundleLimitSchema) Set(val *BundleLimitSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleLimitSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleLimitSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleLimitSchema(val *BundleLimitSchema) *NullableBundleLimitSchema {
	return &NullableBundleLimitSchema{value: val, isSet: true}
}

func (v NullableBundleLimitSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleLimitSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelMetadata{}

// ModelMetadata struct for ModelMetadata
type ModelMetadata struct {
	Id string `json:"id"`
	Object *string `json:"object,omitempty"`
	Created int32 `json:"created"`
	OwnedBy string `json:"owned_by"`
}

type _ModelMetadata ModelMetadata

// NewModelMetadata instantiates a new ModelMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelMetadata(id string, created int32, ownedBy string) *ModelMetadata {
	this := ModelMetadata{}
	this.Id = id
	var object string = "model"
	this.Object = &object
	this.Created = created
	this.OwnedBy = ownedBy
	return &this
}

// NewModelMetadataWithDefaults instantiates a new ModelMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelMetadataWithDefaults() *ModelMetadata {
	this := ModelMetadata{}
	var object string = "model"
	this.Object = &object
	return &this
}

// GetId returns the Id field value
func (o *ModelMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelMetadata) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelMetadata) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ModelMetadata) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMetadata) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ModelMetadata) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ModelMetadata) SetObject(v string) {
	o.Object = &v
}

// GetCreated returns the Created field value
func (o *ModelMetadata) GetCreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ModelMetadata) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ModelMetadata) SetCreated(v int32) {
	o.Created = v
}

// GetOwnedBy returns the OwnedBy field value
func (o *ModelMetadata) GetOwnedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value
// and a boolean to check if the value has been set.
func (o *ModelMetadata) GetOwnedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnedBy, true
}

// SetOwnedBy sets field value
func (o *ModelMetadata) SetOwnedBy(v string) {
	o.OwnedBy = v
}

func (o ModelMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created"] = o.Created
	toSerialize["owned_by"] = o.OwnedBy
	return toSerialize, nil
}

func (o *ModelMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created",
		"owned_by",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelMetadata := _ModelMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelMetadata)

	if err != nil {
		return err
	}

	*o = ModelMetadata(varModelMetadata)

	return err
}

type NullableModelMetadata struct {
	value *ModelMetadata
	isSet bool
}

func (v NullableModelMetadata) Get() *ModelMetadata {
	return v.value
}

func (v *NullableModelMetadata) Set(val *ModelMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMetadata(val *ModelMetadata) *NullableModelMetadata {
	return &NullableModelMetadata{value: val, isSet: true}
}

func (v NullableModelMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



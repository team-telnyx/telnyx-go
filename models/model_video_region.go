/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the VideoRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoRegion{}

// VideoRegion struct for VideoRegion
type VideoRegion struct {
	// X axis value (in pixels) of the region's upper left corner relative to the upper left corner of the whole room composition viewport.
	XPos NullableInt32 `json:"x_pos,omitempty"`
	// Y axis value (in pixels) of the region's upper left corner relative to the upper left corner of the whole room composition viewport.
	YPos NullableInt32 `json:"y_pos,omitempty"`
	// Regions with higher z_pos values are stacked on top of regions with lower z_pos values
	ZPos NullableInt32 `json:"z_pos,omitempty"`
	// Height of the video region
	Height NullableInt32 `json:"height,omitempty"`
	// Width of the video region
	Width NullableInt32 `json:"width,omitempty"`
	// Maximum number of columns of the region's placement grid. By default, the region has as many columns as needed to layout all the specified video sources.
	MaxColumns NullableInt32 `json:"max_columns,omitempty"`
	// Maximum number of rows of the region's placement grid. By default, the region has as many rows as needed to layout all the specified video sources.
	MaxRows NullableInt32 `json:"max_rows,omitempty"`
	// Array of video recording ids to be composed in the region. Can be \"*\" to specify all video recordings in the session
	VideoSources []string `json:"video_sources,omitempty"`
}

// NewVideoRegion instantiates a new VideoRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoRegion() *VideoRegion {
	this := VideoRegion{}
	var xPos int32 = 0
	this.XPos = *NewNullableInt32(&xPos)
	var yPos int32 = 0
	this.YPos = *NewNullableInt32(&yPos)
	var zPos int32 = 0
	this.ZPos = *NewNullableInt32(&zPos)
	return &this
}

// NewVideoRegionWithDefaults instantiates a new VideoRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoRegionWithDefaults() *VideoRegion {
	this := VideoRegion{}
	var xPos int32 = 0
	this.XPos = *NewNullableInt32(&xPos)
	var yPos int32 = 0
	this.YPos = *NewNullableInt32(&yPos)
	var zPos int32 = 0
	this.ZPos = *NewNullableInt32(&zPos)
	return &this
}

// GetXPos returns the XPos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetXPos() int32 {
	if o == nil || IsNil(o.XPos.Get()) {
		var ret int32
		return ret
	}
	return *o.XPos.Get()
}

// GetXPosOk returns a tuple with the XPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetXPosOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.XPos.Get(), o.XPos.IsSet()
}

// HasXPos returns a boolean if a field has been set.
func (o *VideoRegion) HasXPos() bool {
	if o != nil && o.XPos.IsSet() {
		return true
	}

	return false
}

// SetXPos gets a reference to the given NullableInt32 and assigns it to the XPos field.
func (o *VideoRegion) SetXPos(v int32) {
	o.XPos.Set(&v)
}
// SetXPosNil sets the value for XPos to be an explicit nil
func (o *VideoRegion) SetXPosNil() {
	o.XPos.Set(nil)
}

// UnsetXPos ensures that no value is present for XPos, not even an explicit nil
func (o *VideoRegion) UnsetXPos() {
	o.XPos.Unset()
}

// GetYPos returns the YPos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetYPos() int32 {
	if o == nil || IsNil(o.YPos.Get()) {
		var ret int32
		return ret
	}
	return *o.YPos.Get()
}

// GetYPosOk returns a tuple with the YPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetYPosOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.YPos.Get(), o.YPos.IsSet()
}

// HasYPos returns a boolean if a field has been set.
func (o *VideoRegion) HasYPos() bool {
	if o != nil && o.YPos.IsSet() {
		return true
	}

	return false
}

// SetYPos gets a reference to the given NullableInt32 and assigns it to the YPos field.
func (o *VideoRegion) SetYPos(v int32) {
	o.YPos.Set(&v)
}
// SetYPosNil sets the value for YPos to be an explicit nil
func (o *VideoRegion) SetYPosNil() {
	o.YPos.Set(nil)
}

// UnsetYPos ensures that no value is present for YPos, not even an explicit nil
func (o *VideoRegion) UnsetYPos() {
	o.YPos.Unset()
}

// GetZPos returns the ZPos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetZPos() int32 {
	if o == nil || IsNil(o.ZPos.Get()) {
		var ret int32
		return ret
	}
	return *o.ZPos.Get()
}

// GetZPosOk returns a tuple with the ZPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetZPosOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZPos.Get(), o.ZPos.IsSet()
}

// HasZPos returns a boolean if a field has been set.
func (o *VideoRegion) HasZPos() bool {
	if o != nil && o.ZPos.IsSet() {
		return true
	}

	return false
}

// SetZPos gets a reference to the given NullableInt32 and assigns it to the ZPos field.
func (o *VideoRegion) SetZPos(v int32) {
	o.ZPos.Set(&v)
}
// SetZPosNil sets the value for ZPos to be an explicit nil
func (o *VideoRegion) SetZPosNil() {
	o.ZPos.Set(nil)
}

// UnsetZPos ensures that no value is present for ZPos, not even an explicit nil
func (o *VideoRegion) UnsetZPos() {
	o.ZPos.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *VideoRegion) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *VideoRegion) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *VideoRegion) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *VideoRegion) UnsetHeight() {
	o.Height.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *VideoRegion) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *VideoRegion) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *VideoRegion) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *VideoRegion) UnsetWidth() {
	o.Width.Unset()
}

// GetMaxColumns returns the MaxColumns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetMaxColumns() int32 {
	if o == nil || IsNil(o.MaxColumns.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxColumns.Get()
}

// GetMaxColumnsOk returns a tuple with the MaxColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetMaxColumnsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxColumns.Get(), o.MaxColumns.IsSet()
}

// HasMaxColumns returns a boolean if a field has been set.
func (o *VideoRegion) HasMaxColumns() bool {
	if o != nil && o.MaxColumns.IsSet() {
		return true
	}

	return false
}

// SetMaxColumns gets a reference to the given NullableInt32 and assigns it to the MaxColumns field.
func (o *VideoRegion) SetMaxColumns(v int32) {
	o.MaxColumns.Set(&v)
}
// SetMaxColumnsNil sets the value for MaxColumns to be an explicit nil
func (o *VideoRegion) SetMaxColumnsNil() {
	o.MaxColumns.Set(nil)
}

// UnsetMaxColumns ensures that no value is present for MaxColumns, not even an explicit nil
func (o *VideoRegion) UnsetMaxColumns() {
	o.MaxColumns.Unset()
}

// GetMaxRows returns the MaxRows field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoRegion) GetMaxRows() int32 {
	if o == nil || IsNil(o.MaxRows.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxRows.Get()
}

// GetMaxRowsOk returns a tuple with the MaxRows field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoRegion) GetMaxRowsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxRows.Get(), o.MaxRows.IsSet()
}

// HasMaxRows returns a boolean if a field has been set.
func (o *VideoRegion) HasMaxRows() bool {
	if o != nil && o.MaxRows.IsSet() {
		return true
	}

	return false
}

// SetMaxRows gets a reference to the given NullableInt32 and assigns it to the MaxRows field.
func (o *VideoRegion) SetMaxRows(v int32) {
	o.MaxRows.Set(&v)
}
// SetMaxRowsNil sets the value for MaxRows to be an explicit nil
func (o *VideoRegion) SetMaxRowsNil() {
	o.MaxRows.Set(nil)
}

// UnsetMaxRows ensures that no value is present for MaxRows, not even an explicit nil
func (o *VideoRegion) UnsetMaxRows() {
	o.MaxRows.Unset()
}

// GetVideoSources returns the VideoSources field value if set, zero value otherwise.
func (o *VideoRegion) GetVideoSources() []string {
	if o == nil || IsNil(o.VideoSources) {
		var ret []string
		return ret
	}
	return o.VideoSources
}

// GetVideoSourcesOk returns a tuple with the VideoSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoRegion) GetVideoSourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.VideoSources) {
		return nil, false
	}
	return o.VideoSources, true
}

// HasVideoSources returns a boolean if a field has been set.
func (o *VideoRegion) HasVideoSources() bool {
	if o != nil && !IsNil(o.VideoSources) {
		return true
	}

	return false
}

// SetVideoSources gets a reference to the given []string and assigns it to the VideoSources field.
func (o *VideoRegion) SetVideoSources(v []string) {
	o.VideoSources = v
}

func (o VideoRegion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.XPos.IsSet() {
		toSerialize["x_pos"] = o.XPos.Get()
	}
	if o.YPos.IsSet() {
		toSerialize["y_pos"] = o.YPos.Get()
	}
	if o.ZPos.IsSet() {
		toSerialize["z_pos"] = o.ZPos.Get()
	}
	if o.Height.IsSet() {
		toSerialize["height"] = o.Height.Get()
	}
	if o.Width.IsSet() {
		toSerialize["width"] = o.Width.Get()
	}
	if o.MaxColumns.IsSet() {
		toSerialize["max_columns"] = o.MaxColumns.Get()
	}
	if o.MaxRows.IsSet() {
		toSerialize["max_rows"] = o.MaxRows.Get()
	}
	if !IsNil(o.VideoSources) {
		toSerialize["video_sources"] = o.VideoSources
	}
	return toSerialize, nil
}

type NullableVideoRegion struct {
	value *VideoRegion
	isSet bool
}

func (v NullableVideoRegion) Get() *VideoRegion {
	return v.value
}

func (v *NullableVideoRegion) Set(val *VideoRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoRegion(val *VideoRegion) *NullableVideoRegion {
	return &NullableVideoRegion{value: val, isSet: true}
}

func (v NullableVideoRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



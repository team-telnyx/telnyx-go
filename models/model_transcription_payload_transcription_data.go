/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TranscriptionPayloadTranscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranscriptionPayloadTranscriptionData{}

// TranscriptionPayloadTranscriptionData struct for TranscriptionPayloadTranscriptionData
type TranscriptionPayloadTranscriptionData struct {
	// Speech recognition confidence level.
	Confidence *float64 `json:"confidence,omitempty"`
	// When false, it means that this is an interim result.
	IsFinal *bool `json:"is_final,omitempty"`
	// Recognized text.
	Transcript *string `json:"transcript,omitempty"`
	// Indicates which leg of the call has been transcribed. This is only available when `transcription_engine` is set to `B`.
	TranscriptionTrack *string `json:"transcription_track,omitempty"`
}

// NewTranscriptionPayloadTranscriptionData instantiates a new TranscriptionPayloadTranscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptionPayloadTranscriptionData() *TranscriptionPayloadTranscriptionData {
	this := TranscriptionPayloadTranscriptionData{}
	return &this
}

// NewTranscriptionPayloadTranscriptionDataWithDefaults instantiates a new TranscriptionPayloadTranscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptionPayloadTranscriptionDataWithDefaults() *TranscriptionPayloadTranscriptionData {
	this := TranscriptionPayloadTranscriptionData{}
	return &this
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *TranscriptionPayloadTranscriptionData) GetConfidence() float64 {
	if o == nil || IsNil(o.Confidence) {
		var ret float64
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionPayloadTranscriptionData) GetConfidenceOk() (*float64, bool) {
	if o == nil || IsNil(o.Confidence) {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *TranscriptionPayloadTranscriptionData) HasConfidence() bool {
	if o != nil && !IsNil(o.Confidence) {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given float64 and assigns it to the Confidence field.
func (o *TranscriptionPayloadTranscriptionData) SetConfidence(v float64) {
	o.Confidence = &v
}

// GetIsFinal returns the IsFinal field value if set, zero value otherwise.
func (o *TranscriptionPayloadTranscriptionData) GetIsFinal() bool {
	if o == nil || IsNil(o.IsFinal) {
		var ret bool
		return ret
	}
	return *o.IsFinal
}

// GetIsFinalOk returns a tuple with the IsFinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionPayloadTranscriptionData) GetIsFinalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFinal) {
		return nil, false
	}
	return o.IsFinal, true
}

// HasIsFinal returns a boolean if a field has been set.
func (o *TranscriptionPayloadTranscriptionData) HasIsFinal() bool {
	if o != nil && !IsNil(o.IsFinal) {
		return true
	}

	return false
}

// SetIsFinal gets a reference to the given bool and assigns it to the IsFinal field.
func (o *TranscriptionPayloadTranscriptionData) SetIsFinal(v bool) {
	o.IsFinal = &v
}

// GetTranscript returns the Transcript field value if set, zero value otherwise.
func (o *TranscriptionPayloadTranscriptionData) GetTranscript() string {
	if o == nil || IsNil(o.Transcript) {
		var ret string
		return ret
	}
	return *o.Transcript
}

// GetTranscriptOk returns a tuple with the Transcript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionPayloadTranscriptionData) GetTranscriptOk() (*string, bool) {
	if o == nil || IsNil(o.Transcript) {
		return nil, false
	}
	return o.Transcript, true
}

// HasTranscript returns a boolean if a field has been set.
func (o *TranscriptionPayloadTranscriptionData) HasTranscript() bool {
	if o != nil && !IsNil(o.Transcript) {
		return true
	}

	return false
}

// SetTranscript gets a reference to the given string and assigns it to the Transcript field.
func (o *TranscriptionPayloadTranscriptionData) SetTranscript(v string) {
	o.Transcript = &v
}

// GetTranscriptionTrack returns the TranscriptionTrack field value if set, zero value otherwise.
func (o *TranscriptionPayloadTranscriptionData) GetTranscriptionTrack() string {
	if o == nil || IsNil(o.TranscriptionTrack) {
		var ret string
		return ret
	}
	return *o.TranscriptionTrack
}

// GetTranscriptionTrackOk returns a tuple with the TranscriptionTrack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionPayloadTranscriptionData) GetTranscriptionTrackOk() (*string, bool) {
	if o == nil || IsNil(o.TranscriptionTrack) {
		return nil, false
	}
	return o.TranscriptionTrack, true
}

// HasTranscriptionTrack returns a boolean if a field has been set.
func (o *TranscriptionPayloadTranscriptionData) HasTranscriptionTrack() bool {
	if o != nil && !IsNil(o.TranscriptionTrack) {
		return true
	}

	return false
}

// SetTranscriptionTrack gets a reference to the given string and assigns it to the TranscriptionTrack field.
func (o *TranscriptionPayloadTranscriptionData) SetTranscriptionTrack(v string) {
	o.TranscriptionTrack = &v
}

func (o TranscriptionPayloadTranscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranscriptionPayloadTranscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Confidence) {
		toSerialize["confidence"] = o.Confidence
	}
	if !IsNil(o.IsFinal) {
		toSerialize["is_final"] = o.IsFinal
	}
	if !IsNil(o.Transcript) {
		toSerialize["transcript"] = o.Transcript
	}
	if !IsNil(o.TranscriptionTrack) {
		toSerialize["transcription_track"] = o.TranscriptionTrack
	}
	return toSerialize, nil
}

type NullableTranscriptionPayloadTranscriptionData struct {
	value *TranscriptionPayloadTranscriptionData
	isSet bool
}

func (v NullableTranscriptionPayloadTranscriptionData) Get() *TranscriptionPayloadTranscriptionData {
	return v.value
}

func (v *NullableTranscriptionPayloadTranscriptionData) Set(val *TranscriptionPayloadTranscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionPayloadTranscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionPayloadTranscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionPayloadTranscriptionData(val *TranscriptionPayloadTranscriptionData) *NullableTranscriptionPayloadTranscriptionData {
	return &NullableTranscriptionPayloadTranscriptionData{value: val, isSet: true}
}

func (v NullableTranscriptionPayloadTranscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionPayloadTranscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



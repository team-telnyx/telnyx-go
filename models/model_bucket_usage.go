/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
)

// checks if the BucketUsage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketUsage{}

// BucketUsage struct for BucketUsage
type BucketUsage struct {
	// The size of the bucket in bytes
	Size *int32 `json:"size,omitempty"`
	// The size of the bucket in kilobytes
	SizeKb *int32 `json:"size_kb,omitempty"`
	// The number of objects in the bucket
	NumObjects *int32 `json:"num_objects,omitempty"`
	// The time the snapshot was taken
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewBucketUsage instantiates a new BucketUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketUsage() *BucketUsage {
	this := BucketUsage{}
	return &this
}

// NewBucketUsageWithDefaults instantiates a new BucketUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketUsageWithDefaults() *BucketUsage {
	this := BucketUsage{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *BucketUsage) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketUsage) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *BucketUsage) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *BucketUsage) SetSize(v int32) {
	o.Size = &v
}

// GetSizeKb returns the SizeKb field value if set, zero value otherwise.
func (o *BucketUsage) GetSizeKb() int32 {
	if o == nil || IsNil(o.SizeKb) {
		var ret int32
		return ret
	}
	return *o.SizeKb
}

// GetSizeKbOk returns a tuple with the SizeKb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketUsage) GetSizeKbOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeKb) {
		return nil, false
	}
	return o.SizeKb, true
}

// HasSizeKb returns a boolean if a field has been set.
func (o *BucketUsage) HasSizeKb() bool {
	if o != nil && !IsNil(o.SizeKb) {
		return true
	}

	return false
}

// SetSizeKb gets a reference to the given int32 and assigns it to the SizeKb field.
func (o *BucketUsage) SetSizeKb(v int32) {
	o.SizeKb = &v
}

// GetNumObjects returns the NumObjects field value if set, zero value otherwise.
func (o *BucketUsage) GetNumObjects() int32 {
	if o == nil || IsNil(o.NumObjects) {
		var ret int32
		return ret
	}
	return *o.NumObjects
}

// GetNumObjectsOk returns a tuple with the NumObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketUsage) GetNumObjectsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumObjects) {
		return nil, false
	}
	return o.NumObjects, true
}

// HasNumObjects returns a boolean if a field has been set.
func (o *BucketUsage) HasNumObjects() bool {
	if o != nil && !IsNil(o.NumObjects) {
		return true
	}

	return false
}

// SetNumObjects gets a reference to the given int32 and assigns it to the NumObjects field.
func (o *BucketUsage) SetNumObjects(v int32) {
	o.NumObjects = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *BucketUsage) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketUsage) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *BucketUsage) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *BucketUsage) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o BucketUsage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketUsage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizeKb) {
		toSerialize["size_kb"] = o.SizeKb
	}
	if !IsNil(o.NumObjects) {
		toSerialize["num_objects"] = o.NumObjects
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableBucketUsage struct {
	value *BucketUsage
	isSet bool
}

func (v NullableBucketUsage) Get() *BucketUsage {
	return v.value
}

func (v *NullableBucketUsage) Set(val *BucketUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketUsage(val *BucketUsage) *NullableBucketUsage {
	return &NullableBucketUsage{value: val, isSet: true}
}

func (v NullableBucketUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



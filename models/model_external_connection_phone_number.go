/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the ExternalConnectionPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalConnectionPhoneNumber{}

// ExternalConnectionPhoneNumber struct for ExternalConnectionPhoneNumber
type ExternalConnectionPhoneNumber struct {
	// Uniquely identifies the resource.
	TicketId *string `json:"ticket_id,omitempty"`
	// Phone number in E164 format.
	TelephoneNumber *string `json:"telephone_number,omitempty"`
	// Phone number ID from the Telnyx API.
	NumberId *string `json:"number_id,omitempty"`
	// Identifies the civic address assigned to the phone number.
	CivicAddressId *string `json:"civic_address_id,omitempty"`
	// Identifies the location assigned to the phone number.
	LocationId *string `json:"location_id,omitempty"`
	// The iso country code that will be displayed to the user when they receive a call from this phone number.
	DisplayedCountryCode *string `json:"displayed_country_code,omitempty"`
	AcquiredCapabilities []string `json:"acquired_capabilities,omitempty"`
}

// NewExternalConnectionPhoneNumber instantiates a new ExternalConnectionPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalConnectionPhoneNumber() *ExternalConnectionPhoneNumber {
	this := ExternalConnectionPhoneNumber{}
	return &this
}

// NewExternalConnectionPhoneNumberWithDefaults instantiates a new ExternalConnectionPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalConnectionPhoneNumberWithDefaults() *ExternalConnectionPhoneNumber {
	this := ExternalConnectionPhoneNumber{}
	return &this
}

// GetTicketId returns the TicketId field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetTicketId() string {
	if o == nil || IsNil(o.TicketId) {
		var ret string
		return ret
	}
	return *o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetTicketIdOk() (*string, bool) {
	if o == nil || IsNil(o.TicketId) {
		return nil, false
	}
	return o.TicketId, true
}

// HasTicketId returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasTicketId() bool {
	if o != nil && !IsNil(o.TicketId) {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given string and assigns it to the TicketId field.
func (o *ExternalConnectionPhoneNumber) SetTicketId(v string) {
	o.TicketId = &v
}

// GetTelephoneNumber returns the TelephoneNumber field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetTelephoneNumber() string {
	if o == nil || IsNil(o.TelephoneNumber) {
		var ret string
		return ret
	}
	return *o.TelephoneNumber
}

// GetTelephoneNumberOk returns a tuple with the TelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetTelephoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TelephoneNumber) {
		return nil, false
	}
	return o.TelephoneNumber, true
}

// HasTelephoneNumber returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasTelephoneNumber() bool {
	if o != nil && !IsNil(o.TelephoneNumber) {
		return true
	}

	return false
}

// SetTelephoneNumber gets a reference to the given string and assigns it to the TelephoneNumber field.
func (o *ExternalConnectionPhoneNumber) SetTelephoneNumber(v string) {
	o.TelephoneNumber = &v
}

// GetNumberId returns the NumberId field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetNumberId() string {
	if o == nil || IsNil(o.NumberId) {
		var ret string
		return ret
	}
	return *o.NumberId
}

// GetNumberIdOk returns a tuple with the NumberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetNumberIdOk() (*string, bool) {
	if o == nil || IsNil(o.NumberId) {
		return nil, false
	}
	return o.NumberId, true
}

// HasNumberId returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasNumberId() bool {
	if o != nil && !IsNil(o.NumberId) {
		return true
	}

	return false
}

// SetNumberId gets a reference to the given string and assigns it to the NumberId field.
func (o *ExternalConnectionPhoneNumber) SetNumberId(v string) {
	o.NumberId = &v
}

// GetCivicAddressId returns the CivicAddressId field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetCivicAddressId() string {
	if o == nil || IsNil(o.CivicAddressId) {
		var ret string
		return ret
	}
	return *o.CivicAddressId
}

// GetCivicAddressIdOk returns a tuple with the CivicAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetCivicAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.CivicAddressId) {
		return nil, false
	}
	return o.CivicAddressId, true
}

// HasCivicAddressId returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasCivicAddressId() bool {
	if o != nil && !IsNil(o.CivicAddressId) {
		return true
	}

	return false
}

// SetCivicAddressId gets a reference to the given string and assigns it to the CivicAddressId field.
func (o *ExternalConnectionPhoneNumber) SetCivicAddressId(v string) {
	o.CivicAddressId = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *ExternalConnectionPhoneNumber) SetLocationId(v string) {
	o.LocationId = &v
}

// GetDisplayedCountryCode returns the DisplayedCountryCode field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetDisplayedCountryCode() string {
	if o == nil || IsNil(o.DisplayedCountryCode) {
		var ret string
		return ret
	}
	return *o.DisplayedCountryCode
}

// GetDisplayedCountryCodeOk returns a tuple with the DisplayedCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetDisplayedCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayedCountryCode) {
		return nil, false
	}
	return o.DisplayedCountryCode, true
}

// HasDisplayedCountryCode returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasDisplayedCountryCode() bool {
	if o != nil && !IsNil(o.DisplayedCountryCode) {
		return true
	}

	return false
}

// SetDisplayedCountryCode gets a reference to the given string and assigns it to the DisplayedCountryCode field.
func (o *ExternalConnectionPhoneNumber) SetDisplayedCountryCode(v string) {
	o.DisplayedCountryCode = &v
}

// GetAcquiredCapabilities returns the AcquiredCapabilities field value if set, zero value otherwise.
func (o *ExternalConnectionPhoneNumber) GetAcquiredCapabilities() []string {
	if o == nil || IsNil(o.AcquiredCapabilities) {
		var ret []string
		return ret
	}
	return o.AcquiredCapabilities
}

// GetAcquiredCapabilitiesOk returns a tuple with the AcquiredCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionPhoneNumber) GetAcquiredCapabilitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.AcquiredCapabilities) {
		return nil, false
	}
	return o.AcquiredCapabilities, true
}

// HasAcquiredCapabilities returns a boolean if a field has been set.
func (o *ExternalConnectionPhoneNumber) HasAcquiredCapabilities() bool {
	if o != nil && !IsNil(o.AcquiredCapabilities) {
		return true
	}

	return false
}

// SetAcquiredCapabilities gets a reference to the given []string and assigns it to the AcquiredCapabilities field.
func (o *ExternalConnectionPhoneNumber) SetAcquiredCapabilities(v []string) {
	o.AcquiredCapabilities = v
}

func (o ExternalConnectionPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalConnectionPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TicketId) {
		toSerialize["ticket_id"] = o.TicketId
	}
	if !IsNil(o.TelephoneNumber) {
		toSerialize["telephone_number"] = o.TelephoneNumber
	}
	if !IsNil(o.NumberId) {
		toSerialize["number_id"] = o.NumberId
	}
	if !IsNil(o.CivicAddressId) {
		toSerialize["civic_address_id"] = o.CivicAddressId
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.DisplayedCountryCode) {
		toSerialize["displayed_country_code"] = o.DisplayedCountryCode
	}
	if !IsNil(o.AcquiredCapabilities) {
		toSerialize["acquired_capabilities"] = o.AcquiredCapabilities
	}
	return toSerialize, nil
}

type NullableExternalConnectionPhoneNumber struct {
	value *ExternalConnectionPhoneNumber
	isSet bool
}

func (v NullableExternalConnectionPhoneNumber) Get() *ExternalConnectionPhoneNumber {
	return v.value
}

func (v *NullableExternalConnectionPhoneNumber) Set(val *ExternalConnectionPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalConnectionPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalConnectionPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalConnectionPhoneNumber(val *ExternalConnectionPhoneNumber) *NullableExternalConnectionPhoneNumber {
	return &NullableExternalConnectionPhoneNumber{value: val, isSet: true}
}

func (v NullableExternalConnectionPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalConnectionPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ESimPurchase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ESimPurchase{}

// ESimPurchase struct for ESimPurchase
type ESimPurchase struct {
	// The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource.
	SimCardGroupId *string `json:"sim_card_group_id,omitempty"`
	// Searchable tags associated with the SIM cards
	Tags []string `json:"tags,omitempty"`
	// Type of product to be purchased, specify \"whitelabel\" to use a custom SPN
	Product *string `json:"product,omitempty"`
	// Service Provider Name (SPN) for the Whitelabel eSIM product. It will be displayed as the mobile service name by operating systems of smartphones. This parameter must only contain letters, numbers and whitespaces.
	WhitelabelName *string `json:"whitelabel_name,omitempty"`
	// The amount of eSIMs to be purchased.
	Amount int32 `json:"amount"`
	// Status on which the SIM cards will be set after being successfully registered.
	Status *string `json:"status,omitempty"`
}

type _ESimPurchase ESimPurchase

// NewESimPurchase instantiates a new ESimPurchase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewESimPurchase(amount int32) *ESimPurchase {
	this := ESimPurchase{}
	this.Amount = amount
	var status string = "enabled"
	this.Status = &status
	return &this
}

// NewESimPurchaseWithDefaults instantiates a new ESimPurchase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewESimPurchaseWithDefaults() *ESimPurchase {
	this := ESimPurchase{}
	var status string = "enabled"
	this.Status = &status
	return &this
}

// GetSimCardGroupId returns the SimCardGroupId field value if set, zero value otherwise.
func (o *ESimPurchase) GetSimCardGroupId() string {
	if o == nil || IsNil(o.SimCardGroupId) {
		var ret string
		return ret
	}
	return *o.SimCardGroupId
}

// GetSimCardGroupIdOk returns a tuple with the SimCardGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetSimCardGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SimCardGroupId) {
		return nil, false
	}
	return o.SimCardGroupId, true
}

// HasSimCardGroupId returns a boolean if a field has been set.
func (o *ESimPurchase) HasSimCardGroupId() bool {
	if o != nil && !IsNil(o.SimCardGroupId) {
		return true
	}

	return false
}

// SetSimCardGroupId gets a reference to the given string and assigns it to the SimCardGroupId field.
func (o *ESimPurchase) SetSimCardGroupId(v string) {
	o.SimCardGroupId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ESimPurchase) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ESimPurchase) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ESimPurchase) SetTags(v []string) {
	o.Tags = v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ESimPurchase) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ESimPurchase) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *ESimPurchase) SetProduct(v string) {
	o.Product = &v
}

// GetWhitelabelName returns the WhitelabelName field value if set, zero value otherwise.
func (o *ESimPurchase) GetWhitelabelName() string {
	if o == nil || IsNil(o.WhitelabelName) {
		var ret string
		return ret
	}
	return *o.WhitelabelName
}

// GetWhitelabelNameOk returns a tuple with the WhitelabelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetWhitelabelNameOk() (*string, bool) {
	if o == nil || IsNil(o.WhitelabelName) {
		return nil, false
	}
	return o.WhitelabelName, true
}

// HasWhitelabelName returns a boolean if a field has been set.
func (o *ESimPurchase) HasWhitelabelName() bool {
	if o != nil && !IsNil(o.WhitelabelName) {
		return true
	}

	return false
}

// SetWhitelabelName gets a reference to the given string and assigns it to the WhitelabelName field.
func (o *ESimPurchase) SetWhitelabelName(v string) {
	o.WhitelabelName = &v
}

// GetAmount returns the Amount field value
func (o *ESimPurchase) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ESimPurchase) SetAmount(v int32) {
	o.Amount = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ESimPurchase) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESimPurchase) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ESimPurchase) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ESimPurchase) SetStatus(v string) {
	o.Status = &v
}

func (o ESimPurchase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ESimPurchase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SimCardGroupId) {
		toSerialize["sim_card_group_id"] = o.SimCardGroupId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.WhitelabelName) {
		toSerialize["whitelabel_name"] = o.WhitelabelName
	}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *ESimPurchase) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varESimPurchase := _ESimPurchase{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varESimPurchase)

	if err != nil {
		return err
	}

	*o = ESimPurchase(varESimPurchase)

	return err
}

type NullableESimPurchase struct {
	value *ESimPurchase
	isSet bool
}

func (v NullableESimPurchase) Get() *ESimPurchase {
	return v.value
}

func (v *NullableESimPurchase) Set(val *ESimPurchase) {
	v.value = val
	v.isSet = true
}

func (v NullableESimPurchase) IsSet() bool {
	return v.isSet
}

func (v *NullableESimPurchase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableESimPurchase(val *ESimPurchase) *NullableESimPurchase {
	return &NullableESimPurchase{value: val, isSet: true}
}

func (v NullableESimPurchase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableESimPurchase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



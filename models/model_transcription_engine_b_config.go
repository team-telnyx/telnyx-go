/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the TranscriptionEngineBConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranscriptionEngineBConfig{}

// TranscriptionEngineBConfig struct for TranscriptionEngineBConfig
type TranscriptionEngineBConfig struct {
	Language *TelnyxTranscriptionLanguage `json:"language,omitempty"`
	// The model to use for transcription.
	TranscriptionModel *string `json:"transcription_model,omitempty"`
}

// NewTranscriptionEngineBConfig instantiates a new TranscriptionEngineBConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptionEngineBConfig() *TranscriptionEngineBConfig {
	this := TranscriptionEngineBConfig{}
	var language TelnyxTranscriptionLanguage = EN
	this.Language = &language
	var transcriptionModel string = "openai/whisper-tiny"
	this.TranscriptionModel = &transcriptionModel
	return &this
}

// NewTranscriptionEngineBConfigWithDefaults instantiates a new TranscriptionEngineBConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptionEngineBConfigWithDefaults() *TranscriptionEngineBConfig {
	this := TranscriptionEngineBConfig{}
	var language TelnyxTranscriptionLanguage = EN
	this.Language = &language
	var transcriptionModel string = "openai/whisper-tiny"
	this.TranscriptionModel = &transcriptionModel
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *TranscriptionEngineBConfig) GetLanguage() TelnyxTranscriptionLanguage {
	if o == nil || IsNil(o.Language) {
		var ret TelnyxTranscriptionLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionEngineBConfig) GetLanguageOk() (*TelnyxTranscriptionLanguage, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *TranscriptionEngineBConfig) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given TelnyxTranscriptionLanguage and assigns it to the Language field.
func (o *TranscriptionEngineBConfig) SetLanguage(v TelnyxTranscriptionLanguage) {
	o.Language = &v
}

// GetTranscriptionModel returns the TranscriptionModel field value if set, zero value otherwise.
func (o *TranscriptionEngineBConfig) GetTranscriptionModel() string {
	if o == nil || IsNil(o.TranscriptionModel) {
		var ret string
		return ret
	}
	return *o.TranscriptionModel
}

// GetTranscriptionModelOk returns a tuple with the TranscriptionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscriptionEngineBConfig) GetTranscriptionModelOk() (*string, bool) {
	if o == nil || IsNil(o.TranscriptionModel) {
		return nil, false
	}
	return o.TranscriptionModel, true
}

// HasTranscriptionModel returns a boolean if a field has been set.
func (o *TranscriptionEngineBConfig) HasTranscriptionModel() bool {
	if o != nil && !IsNil(o.TranscriptionModel) {
		return true
	}

	return false
}

// SetTranscriptionModel gets a reference to the given string and assigns it to the TranscriptionModel field.
func (o *TranscriptionEngineBConfig) SetTranscriptionModel(v string) {
	o.TranscriptionModel = &v
}

func (o TranscriptionEngineBConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranscriptionEngineBConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.TranscriptionModel) {
		toSerialize["transcription_model"] = o.TranscriptionModel
	}
	return toSerialize, nil
}

type NullableTranscriptionEngineBConfig struct {
	value *TranscriptionEngineBConfig
	isSet bool
}

func (v NullableTranscriptionEngineBConfig) Get() *TranscriptionEngineBConfig {
	return v.value
}

func (v *NullableTranscriptionEngineBConfig) Set(val *TranscriptionEngineBConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionEngineBConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionEngineBConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionEngineBConfig(val *TranscriptionEngineBConfig) *NullableTranscriptionEngineBConfig {
	return &NullableTranscriptionEngineBConfig{value: val, isSet: true}
}

func (v NullableTranscriptionEngineBConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionEngineBConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



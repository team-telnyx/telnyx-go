/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DynamicEmergencyAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicEmergencyAddress{}

// DynamicEmergencyAddress struct for DynamicEmergencyAddress
type DynamicEmergencyAddress struct {
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// Unique location reference string to be used in SIP INVITE from / p-asserted headers.
	SipGeolocationId *string `json:"sip_geolocation_id,omitempty"`
	// Status of dynamic emergency address
	Status *string `json:"status,omitempty"`
	HouseNumber string `json:"house_number"`
	HouseSuffix *string `json:"house_suffix,omitempty"`
	StreetPreDirectional *string `json:"street_pre_directional,omitempty"`
	StreetName string `json:"street_name"`
	StreetSuffix *string `json:"street_suffix,omitempty"`
	StreetPostDirectional *string `json:"street_post_directional,omitempty"`
	ExtendedAddress *string `json:"extended_address,omitempty"`
	Locality string `json:"locality"`
	AdministrativeArea string `json:"administrative_area"`
	PostalCode string `json:"postal_code"`
	CountryCode *string `json:"country_code,omitempty"`
	// ISO 8601 formatted date of when the resource was created
	CreatedAt *string `json:"created_at,omitempty"`
	// ISO 8601 formatted date of when the resource was last updated
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type _DynamicEmergencyAddress DynamicEmergencyAddress

// NewDynamicEmergencyAddress instantiates a new DynamicEmergencyAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicEmergencyAddress(houseNumber string, streetName string, locality string, administrativeArea string, postalCode string) *DynamicEmergencyAddress {
	this := DynamicEmergencyAddress{}
	this.HouseNumber = houseNumber
	this.StreetName = streetName
	this.Locality = locality
	this.AdministrativeArea = administrativeArea
	this.PostalCode = postalCode
	return &this
}

// NewDynamicEmergencyAddressWithDefaults instantiates a new DynamicEmergencyAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicEmergencyAddressWithDefaults() *DynamicEmergencyAddress {
	this := DynamicEmergencyAddress{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DynamicEmergencyAddress) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *DynamicEmergencyAddress) SetRecordType(v string) {
	o.RecordType = &v
}

// GetSipGeolocationId returns the SipGeolocationId field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetSipGeolocationId() string {
	if o == nil || IsNil(o.SipGeolocationId) {
		var ret string
		return ret
	}
	return *o.SipGeolocationId
}

// GetSipGeolocationIdOk returns a tuple with the SipGeolocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetSipGeolocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.SipGeolocationId) {
		return nil, false
	}
	return o.SipGeolocationId, true
}

// HasSipGeolocationId returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasSipGeolocationId() bool {
	if o != nil && !IsNil(o.SipGeolocationId) {
		return true
	}

	return false
}

// SetSipGeolocationId gets a reference to the given string and assigns it to the SipGeolocationId field.
func (o *DynamicEmergencyAddress) SetSipGeolocationId(v string) {
	o.SipGeolocationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DynamicEmergencyAddress) SetStatus(v string) {
	o.Status = &v
}

// GetHouseNumber returns the HouseNumber field value
func (o *DynamicEmergencyAddress) GetHouseNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HouseNumber
}

// GetHouseNumberOk returns a tuple with the HouseNumber field value
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetHouseNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HouseNumber, true
}

// SetHouseNumber sets field value
func (o *DynamicEmergencyAddress) SetHouseNumber(v string) {
	o.HouseNumber = v
}

// GetHouseSuffix returns the HouseSuffix field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetHouseSuffix() string {
	if o == nil || IsNil(o.HouseSuffix) {
		var ret string
		return ret
	}
	return *o.HouseSuffix
}

// GetHouseSuffixOk returns a tuple with the HouseSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetHouseSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.HouseSuffix) {
		return nil, false
	}
	return o.HouseSuffix, true
}

// HasHouseSuffix returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasHouseSuffix() bool {
	if o != nil && !IsNil(o.HouseSuffix) {
		return true
	}

	return false
}

// SetHouseSuffix gets a reference to the given string and assigns it to the HouseSuffix field.
func (o *DynamicEmergencyAddress) SetHouseSuffix(v string) {
	o.HouseSuffix = &v
}

// GetStreetPreDirectional returns the StreetPreDirectional field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetStreetPreDirectional() string {
	if o == nil || IsNil(o.StreetPreDirectional) {
		var ret string
		return ret
	}
	return *o.StreetPreDirectional
}

// GetStreetPreDirectionalOk returns a tuple with the StreetPreDirectional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetStreetPreDirectionalOk() (*string, bool) {
	if o == nil || IsNil(o.StreetPreDirectional) {
		return nil, false
	}
	return o.StreetPreDirectional, true
}

// HasStreetPreDirectional returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasStreetPreDirectional() bool {
	if o != nil && !IsNil(o.StreetPreDirectional) {
		return true
	}

	return false
}

// SetStreetPreDirectional gets a reference to the given string and assigns it to the StreetPreDirectional field.
func (o *DynamicEmergencyAddress) SetStreetPreDirectional(v string) {
	o.StreetPreDirectional = &v
}

// GetStreetName returns the StreetName field value
func (o *DynamicEmergencyAddress) GetStreetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreetName
}

// GetStreetNameOk returns a tuple with the StreetName field value
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetStreetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreetName, true
}

// SetStreetName sets field value
func (o *DynamicEmergencyAddress) SetStreetName(v string) {
	o.StreetName = v
}

// GetStreetSuffix returns the StreetSuffix field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetStreetSuffix() string {
	if o == nil || IsNil(o.StreetSuffix) {
		var ret string
		return ret
	}
	return *o.StreetSuffix
}

// GetStreetSuffixOk returns a tuple with the StreetSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetStreetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.StreetSuffix) {
		return nil, false
	}
	return o.StreetSuffix, true
}

// HasStreetSuffix returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasStreetSuffix() bool {
	if o != nil && !IsNil(o.StreetSuffix) {
		return true
	}

	return false
}

// SetStreetSuffix gets a reference to the given string and assigns it to the StreetSuffix field.
func (o *DynamicEmergencyAddress) SetStreetSuffix(v string) {
	o.StreetSuffix = &v
}

// GetStreetPostDirectional returns the StreetPostDirectional field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetStreetPostDirectional() string {
	if o == nil || IsNil(o.StreetPostDirectional) {
		var ret string
		return ret
	}
	return *o.StreetPostDirectional
}

// GetStreetPostDirectionalOk returns a tuple with the StreetPostDirectional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetStreetPostDirectionalOk() (*string, bool) {
	if o == nil || IsNil(o.StreetPostDirectional) {
		return nil, false
	}
	return o.StreetPostDirectional, true
}

// HasStreetPostDirectional returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasStreetPostDirectional() bool {
	if o != nil && !IsNil(o.StreetPostDirectional) {
		return true
	}

	return false
}

// SetStreetPostDirectional gets a reference to the given string and assigns it to the StreetPostDirectional field.
func (o *DynamicEmergencyAddress) SetStreetPostDirectional(v string) {
	o.StreetPostDirectional = &v
}

// GetExtendedAddress returns the ExtendedAddress field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetExtendedAddress() string {
	if o == nil || IsNil(o.ExtendedAddress) {
		var ret string
		return ret
	}
	return *o.ExtendedAddress
}

// GetExtendedAddressOk returns a tuple with the ExtendedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetExtendedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedAddress) {
		return nil, false
	}
	return o.ExtendedAddress, true
}

// HasExtendedAddress returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasExtendedAddress() bool {
	if o != nil && !IsNil(o.ExtendedAddress) {
		return true
	}

	return false
}

// SetExtendedAddress gets a reference to the given string and assigns it to the ExtendedAddress field.
func (o *DynamicEmergencyAddress) SetExtendedAddress(v string) {
	o.ExtendedAddress = &v
}

// GetLocality returns the Locality field value
func (o *DynamicEmergencyAddress) GetLocality() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetLocalityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locality, true
}

// SetLocality sets field value
func (o *DynamicEmergencyAddress) SetLocality(v string) {
	o.Locality = v
}

// GetAdministrativeArea returns the AdministrativeArea field value
func (o *DynamicEmergencyAddress) GetAdministrativeArea() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdministrativeArea
}

// GetAdministrativeAreaOk returns a tuple with the AdministrativeArea field value
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetAdministrativeAreaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdministrativeArea, true
}

// SetAdministrativeArea sets field value
func (o *DynamicEmergencyAddress) SetAdministrativeArea(v string) {
	o.AdministrativeArea = v
}

// GetPostalCode returns the PostalCode field value
func (o *DynamicEmergencyAddress) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *DynamicEmergencyAddress) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *DynamicEmergencyAddress) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DynamicEmergencyAddress) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DynamicEmergencyAddress) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicEmergencyAddress) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DynamicEmergencyAddress) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *DynamicEmergencyAddress) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o DynamicEmergencyAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicEmergencyAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.SipGeolocationId) {
		toSerialize["sip_geolocation_id"] = o.SipGeolocationId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["house_number"] = o.HouseNumber
	if !IsNil(o.HouseSuffix) {
		toSerialize["house_suffix"] = o.HouseSuffix
	}
	if !IsNil(o.StreetPreDirectional) {
		toSerialize["street_pre_directional"] = o.StreetPreDirectional
	}
	toSerialize["street_name"] = o.StreetName
	if !IsNil(o.StreetSuffix) {
		toSerialize["street_suffix"] = o.StreetSuffix
	}
	if !IsNil(o.StreetPostDirectional) {
		toSerialize["street_post_directional"] = o.StreetPostDirectional
	}
	if !IsNil(o.ExtendedAddress) {
		toSerialize["extended_address"] = o.ExtendedAddress
	}
	toSerialize["locality"] = o.Locality
	toSerialize["administrative_area"] = o.AdministrativeArea
	toSerialize["postal_code"] = o.PostalCode
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *DynamicEmergencyAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"house_number",
		"street_name",
		"locality",
		"administrative_area",
		"postal_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDynamicEmergencyAddress := _DynamicEmergencyAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDynamicEmergencyAddress)

	if err != nil {
		return err
	}

	*o = DynamicEmergencyAddress(varDynamicEmergencyAddress)

	return err
}

type NullableDynamicEmergencyAddress struct {
	value *DynamicEmergencyAddress
	isSet bool
}

func (v NullableDynamicEmergencyAddress) Get() *DynamicEmergencyAddress {
	return v.value
}

func (v *NullableDynamicEmergencyAddress) Set(val *DynamicEmergencyAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicEmergencyAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicEmergencyAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicEmergencyAddress(val *DynamicEmergencyAddress) *NullableDynamicEmergencyAddress {
	return &NullableDynamicEmergencyAddress{value: val, isSet: true}
}

func (v NullableDynamicEmergencyAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicEmergencyAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ClusteringRequestInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusteringRequestInfo{}

// ClusteringRequestInfo struct for ClusteringRequestInfo
type ClusteringRequestInfo struct {
	TaskId string `json:"task_id"`
	Status TaskStatus `json:"status"`
	Bucket string `json:"bucket"`
	CreatedAt time.Time `json:"created_at"`
	FinishedAt time.Time `json:"finished_at"`
	MinClusterSize int32 `json:"min_cluster_size"`
	MinSubclusterSize int32 `json:"min_subcluster_size"`
}

type _ClusteringRequestInfo ClusteringRequestInfo

// NewClusteringRequestInfo instantiates a new ClusteringRequestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusteringRequestInfo(taskId string, status TaskStatus, bucket string, createdAt time.Time, finishedAt time.Time, minClusterSize int32, minSubclusterSize int32) *ClusteringRequestInfo {
	this := ClusteringRequestInfo{}
	this.TaskId = taskId
	this.Status = status
	this.Bucket = bucket
	this.CreatedAt = createdAt
	this.FinishedAt = finishedAt
	this.MinClusterSize = minClusterSize
	this.MinSubclusterSize = minSubclusterSize
	return &this
}

// NewClusteringRequestInfoWithDefaults instantiates a new ClusteringRequestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusteringRequestInfoWithDefaults() *ClusteringRequestInfo {
	this := ClusteringRequestInfo{}
	return &this
}

// GetTaskId returns the TaskId field value
func (o *ClusteringRequestInfo) GetTaskId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskId, true
}

// SetTaskId sets field value
func (o *ClusteringRequestInfo) SetTaskId(v string) {
	o.TaskId = v
}

// GetStatus returns the Status field value
func (o *ClusteringRequestInfo) GetStatus() TaskStatus {
	if o == nil {
		var ret TaskStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetStatusOk() (*TaskStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ClusteringRequestInfo) SetStatus(v TaskStatus) {
	o.Status = v
}

// GetBucket returns the Bucket field value
func (o *ClusteringRequestInfo) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *ClusteringRequestInfo) SetBucket(v string) {
	o.Bucket = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ClusteringRequestInfo) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ClusteringRequestInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetFinishedAt returns the FinishedAt field value
func (o *ClusteringRequestInfo) GetFinishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinishedAt, true
}

// SetFinishedAt sets field value
func (o *ClusteringRequestInfo) SetFinishedAt(v time.Time) {
	o.FinishedAt = v
}

// GetMinClusterSize returns the MinClusterSize field value
func (o *ClusteringRequestInfo) GetMinClusterSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinClusterSize
}

// GetMinClusterSizeOk returns a tuple with the MinClusterSize field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetMinClusterSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinClusterSize, true
}

// SetMinClusterSize sets field value
func (o *ClusteringRequestInfo) SetMinClusterSize(v int32) {
	o.MinClusterSize = v
}

// GetMinSubclusterSize returns the MinSubclusterSize field value
func (o *ClusteringRequestInfo) GetMinSubclusterSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinSubclusterSize
}

// GetMinSubclusterSizeOk returns a tuple with the MinSubclusterSize field value
// and a boolean to check if the value has been set.
func (o *ClusteringRequestInfo) GetMinSubclusterSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinSubclusterSize, true
}

// SetMinSubclusterSize sets field value
func (o *ClusteringRequestInfo) SetMinSubclusterSize(v int32) {
	o.MinSubclusterSize = v
}

func (o ClusteringRequestInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusteringRequestInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["task_id"] = o.TaskId
	toSerialize["status"] = o.Status
	toSerialize["bucket"] = o.Bucket
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["finished_at"] = o.FinishedAt
	toSerialize["min_cluster_size"] = o.MinClusterSize
	toSerialize["min_subcluster_size"] = o.MinSubclusterSize
	return toSerialize, nil
}

func (o *ClusteringRequestInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"task_id",
		"status",
		"bucket",
		"created_at",
		"finished_at",
		"min_cluster_size",
		"min_subcluster_size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusteringRequestInfo := _ClusteringRequestInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusteringRequestInfo)

	if err != nil {
		return err
	}

	*o = ClusteringRequestInfo(varClusteringRequestInfo)

	return err
}

type NullableClusteringRequestInfo struct {
	value *ClusteringRequestInfo
	isSet bool
}

func (v NullableClusteringRequestInfo) Get() *ClusteringRequestInfo {
	return v.value
}

func (v *NullableClusteringRequestInfo) Set(val *ClusteringRequestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusteringRequestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusteringRequestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusteringRequestInfo(val *ClusteringRequestInfo) *NullableClusteringRequestInfo {
	return &NullableClusteringRequestInfo{value: val, isSet: true}
}

func (v NullableClusteringRequestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusteringRequestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



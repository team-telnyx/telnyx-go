/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MediaFeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaFeatures{}

// MediaFeatures The media features settings for a phone number.
type MediaFeatures struct {
	// When RTP Auto-Adjust is enabled, the destination RTP address port will be automatically changed to match the source of the incoming RTP packets.
	RtpAutoAdjustEnabled *bool `json:"rtp_auto_adjust_enabled,omitempty"`
	// When enabled, Telnyx will accept RTP packets from any customer-side IP address and port, not just those to which Telnyx is sending RTP.
	AcceptAnyRtpPacketsEnabled *bool `json:"accept_any_rtp_packets_enabled,omitempty"`
	// Controls whether Telnyx will accept a T.38 re-INVITE for this phone number. Note that Telnyx will not send a T.38 re-INVITE; this option only controls whether one will be accepted.
	T38FaxGatewayEnabled *bool `json:"t38_fax_gateway_enabled,omitempty"`
}

// NewMediaFeatures instantiates a new MediaFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaFeatures() *MediaFeatures {
	this := MediaFeatures{}
	var rtpAutoAdjustEnabled bool = true
	this.RtpAutoAdjustEnabled = &rtpAutoAdjustEnabled
	var acceptAnyRtpPacketsEnabled bool = false
	this.AcceptAnyRtpPacketsEnabled = &acceptAnyRtpPacketsEnabled
	var t38FaxGatewayEnabled bool = false
	this.T38FaxGatewayEnabled = &t38FaxGatewayEnabled
	return &this
}

// NewMediaFeaturesWithDefaults instantiates a new MediaFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaFeaturesWithDefaults() *MediaFeatures {
	this := MediaFeatures{}
	var rtpAutoAdjustEnabled bool = true
	this.RtpAutoAdjustEnabled = &rtpAutoAdjustEnabled
	var acceptAnyRtpPacketsEnabled bool = false
	this.AcceptAnyRtpPacketsEnabled = &acceptAnyRtpPacketsEnabled
	var t38FaxGatewayEnabled bool = false
	this.T38FaxGatewayEnabled = &t38FaxGatewayEnabled
	return &this
}

// GetRtpAutoAdjustEnabled returns the RtpAutoAdjustEnabled field value if set, zero value otherwise.
func (o *MediaFeatures) GetRtpAutoAdjustEnabled() bool {
	if o == nil || IsNil(o.RtpAutoAdjustEnabled) {
		var ret bool
		return ret
	}
	return *o.RtpAutoAdjustEnabled
}

// GetRtpAutoAdjustEnabledOk returns a tuple with the RtpAutoAdjustEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaFeatures) GetRtpAutoAdjustEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RtpAutoAdjustEnabled) {
		return nil, false
	}
	return o.RtpAutoAdjustEnabled, true
}

// HasRtpAutoAdjustEnabled returns a boolean if a field has been set.
func (o *MediaFeatures) HasRtpAutoAdjustEnabled() bool {
	if o != nil && !IsNil(o.RtpAutoAdjustEnabled) {
		return true
	}

	return false
}

// SetRtpAutoAdjustEnabled gets a reference to the given bool and assigns it to the RtpAutoAdjustEnabled field.
func (o *MediaFeatures) SetRtpAutoAdjustEnabled(v bool) {
	o.RtpAutoAdjustEnabled = &v
}

// GetAcceptAnyRtpPacketsEnabled returns the AcceptAnyRtpPacketsEnabled field value if set, zero value otherwise.
func (o *MediaFeatures) GetAcceptAnyRtpPacketsEnabled() bool {
	if o == nil || IsNil(o.AcceptAnyRtpPacketsEnabled) {
		var ret bool
		return ret
	}
	return *o.AcceptAnyRtpPacketsEnabled
}

// GetAcceptAnyRtpPacketsEnabledOk returns a tuple with the AcceptAnyRtpPacketsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaFeatures) GetAcceptAnyRtpPacketsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptAnyRtpPacketsEnabled) {
		return nil, false
	}
	return o.AcceptAnyRtpPacketsEnabled, true
}

// HasAcceptAnyRtpPacketsEnabled returns a boolean if a field has been set.
func (o *MediaFeatures) HasAcceptAnyRtpPacketsEnabled() bool {
	if o != nil && !IsNil(o.AcceptAnyRtpPacketsEnabled) {
		return true
	}

	return false
}

// SetAcceptAnyRtpPacketsEnabled gets a reference to the given bool and assigns it to the AcceptAnyRtpPacketsEnabled field.
func (o *MediaFeatures) SetAcceptAnyRtpPacketsEnabled(v bool) {
	o.AcceptAnyRtpPacketsEnabled = &v
}

// GetT38FaxGatewayEnabled returns the T38FaxGatewayEnabled field value if set, zero value otherwise.
func (o *MediaFeatures) GetT38FaxGatewayEnabled() bool {
	if o == nil || IsNil(o.T38FaxGatewayEnabled) {
		var ret bool
		return ret
	}
	return *o.T38FaxGatewayEnabled
}

// GetT38FaxGatewayEnabledOk returns a tuple with the T38FaxGatewayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaFeatures) GetT38FaxGatewayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.T38FaxGatewayEnabled) {
		return nil, false
	}
	return o.T38FaxGatewayEnabled, true
}

// HasT38FaxGatewayEnabled returns a boolean if a field has been set.
func (o *MediaFeatures) HasT38FaxGatewayEnabled() bool {
	if o != nil && !IsNil(o.T38FaxGatewayEnabled) {
		return true
	}

	return false
}

// SetT38FaxGatewayEnabled gets a reference to the given bool and assigns it to the T38FaxGatewayEnabled field.
func (o *MediaFeatures) SetT38FaxGatewayEnabled(v bool) {
	o.T38FaxGatewayEnabled = &v
}

func (o MediaFeatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaFeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RtpAutoAdjustEnabled) {
		toSerialize["rtp_auto_adjust_enabled"] = o.RtpAutoAdjustEnabled
	}
	if !IsNil(o.AcceptAnyRtpPacketsEnabled) {
		toSerialize["accept_any_rtp_packets_enabled"] = o.AcceptAnyRtpPacketsEnabled
	}
	if !IsNil(o.T38FaxGatewayEnabled) {
		toSerialize["t38_fax_gateway_enabled"] = o.T38FaxGatewayEnabled
	}
	return toSerialize, nil
}

type NullableMediaFeatures struct {
	value *MediaFeatures
	isSet bool
}

func (v NullableMediaFeatures) Get() *MediaFeatures {
	return v.value
}

func (v *NullableMediaFeatures) Set(val *MediaFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaFeatures(val *MediaFeatures) *NullableMediaFeatures {
	return &NullableMediaFeatures{value: val, isSet: true}
}

func (v NullableMediaFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



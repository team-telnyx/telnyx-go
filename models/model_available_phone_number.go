/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the AvailablePhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailablePhoneNumber{}

// AvailablePhoneNumber struct for AvailablePhoneNumber
type AvailablePhoneNumber struct {
	RecordType *string `json:"record_type,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	VanityFormat *string `json:"vanity_format,omitempty"`
	// Specifies whether the phone number is an exact match based on the search criteria or not.
	BestEffort *bool `json:"best_effort,omitempty"`
	// Specifies whether the phone number can receive calls immediately after purchase or not.
	Quickship *bool `json:"quickship,omitempty"`
	// Specifies whether the phone number can be reserved before purchase or not.
	Reservable *bool `json:"reservable,omitempty"`
	RegionInformation []RegionInformation `json:"region_information,omitempty"`
	CostInformation *CostInformation `json:"cost_information,omitempty"`
	Features []Feature `json:"features,omitempty"`
}

// NewAvailablePhoneNumber instantiates a new AvailablePhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailablePhoneNumber() *AvailablePhoneNumber {
	this := AvailablePhoneNumber{}
	return &this
}

// NewAvailablePhoneNumberWithDefaults instantiates a new AvailablePhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailablePhoneNumberWithDefaults() *AvailablePhoneNumber {
	this := AvailablePhoneNumber{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *AvailablePhoneNumber) SetRecordType(v string) {
	o.RecordType = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *AvailablePhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetVanityFormat returns the VanityFormat field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetVanityFormat() string {
	if o == nil || IsNil(o.VanityFormat) {
		var ret string
		return ret
	}
	return *o.VanityFormat
}

// GetVanityFormatOk returns a tuple with the VanityFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetVanityFormatOk() (*string, bool) {
	if o == nil || IsNil(o.VanityFormat) {
		return nil, false
	}
	return o.VanityFormat, true
}

// HasVanityFormat returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasVanityFormat() bool {
	if o != nil && !IsNil(o.VanityFormat) {
		return true
	}

	return false
}

// SetVanityFormat gets a reference to the given string and assigns it to the VanityFormat field.
func (o *AvailablePhoneNumber) SetVanityFormat(v string) {
	o.VanityFormat = &v
}

// GetBestEffort returns the BestEffort field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetBestEffort() bool {
	if o == nil || IsNil(o.BestEffort) {
		var ret bool
		return ret
	}
	return *o.BestEffort
}

// GetBestEffortOk returns a tuple with the BestEffort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetBestEffortOk() (*bool, bool) {
	if o == nil || IsNil(o.BestEffort) {
		return nil, false
	}
	return o.BestEffort, true
}

// HasBestEffort returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasBestEffort() bool {
	if o != nil && !IsNil(o.BestEffort) {
		return true
	}

	return false
}

// SetBestEffort gets a reference to the given bool and assigns it to the BestEffort field.
func (o *AvailablePhoneNumber) SetBestEffort(v bool) {
	o.BestEffort = &v
}

// GetQuickship returns the Quickship field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetQuickship() bool {
	if o == nil || IsNil(o.Quickship) {
		var ret bool
		return ret
	}
	return *o.Quickship
}

// GetQuickshipOk returns a tuple with the Quickship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetQuickshipOk() (*bool, bool) {
	if o == nil || IsNil(o.Quickship) {
		return nil, false
	}
	return o.Quickship, true
}

// HasQuickship returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasQuickship() bool {
	if o != nil && !IsNil(o.Quickship) {
		return true
	}

	return false
}

// SetQuickship gets a reference to the given bool and assigns it to the Quickship field.
func (o *AvailablePhoneNumber) SetQuickship(v bool) {
	o.Quickship = &v
}

// GetReservable returns the Reservable field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetReservable() bool {
	if o == nil || IsNil(o.Reservable) {
		var ret bool
		return ret
	}
	return *o.Reservable
}

// GetReservableOk returns a tuple with the Reservable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetReservableOk() (*bool, bool) {
	if o == nil || IsNil(o.Reservable) {
		return nil, false
	}
	return o.Reservable, true
}

// HasReservable returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasReservable() bool {
	if o != nil && !IsNil(o.Reservable) {
		return true
	}

	return false
}

// SetReservable gets a reference to the given bool and assigns it to the Reservable field.
func (o *AvailablePhoneNumber) SetReservable(v bool) {
	o.Reservable = &v
}

// GetRegionInformation returns the RegionInformation field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetRegionInformation() []RegionInformation {
	if o == nil || IsNil(o.RegionInformation) {
		var ret []RegionInformation
		return ret
	}
	return o.RegionInformation
}

// GetRegionInformationOk returns a tuple with the RegionInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetRegionInformationOk() ([]RegionInformation, bool) {
	if o == nil || IsNil(o.RegionInformation) {
		return nil, false
	}
	return o.RegionInformation, true
}

// HasRegionInformation returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasRegionInformation() bool {
	if o != nil && !IsNil(o.RegionInformation) {
		return true
	}

	return false
}

// SetRegionInformation gets a reference to the given []RegionInformation and assigns it to the RegionInformation field.
func (o *AvailablePhoneNumber) SetRegionInformation(v []RegionInformation) {
	o.RegionInformation = v
}

// GetCostInformation returns the CostInformation field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetCostInformation() CostInformation {
	if o == nil || IsNil(o.CostInformation) {
		var ret CostInformation
		return ret
	}
	return *o.CostInformation
}

// GetCostInformationOk returns a tuple with the CostInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetCostInformationOk() (*CostInformation, bool) {
	if o == nil || IsNil(o.CostInformation) {
		return nil, false
	}
	return o.CostInformation, true
}

// HasCostInformation returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasCostInformation() bool {
	if o != nil && !IsNil(o.CostInformation) {
		return true
	}

	return false
}

// SetCostInformation gets a reference to the given CostInformation and assigns it to the CostInformation field.
func (o *AvailablePhoneNumber) SetCostInformation(v CostInformation) {
	o.CostInformation = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *AvailablePhoneNumber) GetFeatures() []Feature {
	if o == nil || IsNil(o.Features) {
		var ret []Feature
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailablePhoneNumber) GetFeaturesOk() ([]Feature, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *AvailablePhoneNumber) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []Feature and assigns it to the Features field.
func (o *AvailablePhoneNumber) SetFeatures(v []Feature) {
	o.Features = v
}

func (o AvailablePhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailablePhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.VanityFormat) {
		toSerialize["vanity_format"] = o.VanityFormat
	}
	if !IsNil(o.BestEffort) {
		toSerialize["best_effort"] = o.BestEffort
	}
	if !IsNil(o.Quickship) {
		toSerialize["quickship"] = o.Quickship
	}
	if !IsNil(o.Reservable) {
		toSerialize["reservable"] = o.Reservable
	}
	if !IsNil(o.RegionInformation) {
		toSerialize["region_information"] = o.RegionInformation
	}
	if !IsNil(o.CostInformation) {
		toSerialize["cost_information"] = o.CostInformation
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	return toSerialize, nil
}

type NullableAvailablePhoneNumber struct {
	value *AvailablePhoneNumber
	isSet bool
}

func (v NullableAvailablePhoneNumber) Get() *AvailablePhoneNumber {
	return v.value
}

func (v *NullableAvailablePhoneNumber) Set(val *AvailablePhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailablePhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailablePhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailablePhoneNumber(val *AvailablePhoneNumber) *NullableAvailablePhoneNumber {
	return &NullableAvailablePhoneNumber{value: val, isSet: true}
}

func (v NullableAvailablePhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailablePhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



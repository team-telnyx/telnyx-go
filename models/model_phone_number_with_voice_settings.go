/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the PhoneNumberWithVoiceSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneNumberWithVoiceSettings{}

// PhoneNumberWithVoiceSettings struct for PhoneNumberWithVoiceSettings
type PhoneNumberWithVoiceSettings struct {
	// Identifies the type of resource.
	Id *string `json:"id,omitempty"`
	// Identifies the type of the resource.
	RecordType *string `json:"record_type,omitempty"`
	// The phone number in +E164 format.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Identifies the connection associated with this phone number.
	ConnectionId *string `json:"connection_id,omitempty"`
	// A customer reference string for customer look ups.
	CustomerReference *string `json:"customer_reference,omitempty"`
	// Controls whether a tech prefix is enabled for this phone number.
	TechPrefixEnabled *bool `json:"tech_prefix_enabled,omitempty"`
	// This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed.
	TranslatedNumber *string `json:"translated_number,omitempty"`
	CallForwarding *CallForwarding `json:"call_forwarding,omitempty"`
	CnamListing *CnamListing `json:"cnam_listing,omitempty"`
	Emergency *EmergencySettings `json:"emergency,omitempty"`
	// Controls whether a number is billed per minute or uses your concurrent channels.
	UsagePaymentMethod *string `json:"usage_payment_method,omitempty"`
	MediaFeatures *MediaFeatures `json:"media_features,omitempty"`
	CallRecording *CallRecording `json:"call_recording,omitempty"`
	// The inbound_call_screening setting is a phone number configuration option variable that allows users to configure their settings to block or flag fraudulent calls. It can be set to disabled, reject_calls, or flag_calls. This feature has an additional per-number monthly cost associated with it.
	InboundCallScreening *string `json:"inbound_call_screening,omitempty"`
}

// NewPhoneNumberWithVoiceSettings instantiates a new PhoneNumberWithVoiceSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumberWithVoiceSettings() *PhoneNumberWithVoiceSettings {
	this := PhoneNumberWithVoiceSettings{}
	var techPrefixEnabled bool = false
	this.TechPrefixEnabled = &techPrefixEnabled
	var translatedNumber string = ""
	this.TranslatedNumber = &translatedNumber
	var usagePaymentMethod string = "pay-per-minute"
	this.UsagePaymentMethod = &usagePaymentMethod
	var inboundCallScreening string = "disabled"
	this.InboundCallScreening = &inboundCallScreening
	return &this
}

// NewPhoneNumberWithVoiceSettingsWithDefaults instantiates a new PhoneNumberWithVoiceSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumberWithVoiceSettingsWithDefaults() *PhoneNumberWithVoiceSettings {
	this := PhoneNumberWithVoiceSettings{}
	var techPrefixEnabled bool = false
	this.TechPrefixEnabled = &techPrefixEnabled
	var translatedNumber string = ""
	this.TranslatedNumber = &translatedNumber
	var usagePaymentMethod string = "pay-per-minute"
	this.UsagePaymentMethod = &usagePaymentMethod
	var inboundCallScreening string = "disabled"
	this.InboundCallScreening = &inboundCallScreening
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PhoneNumberWithVoiceSettings) SetId(v string) {
	o.Id = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *PhoneNumberWithVoiceSettings) SetRecordType(v string) {
	o.RecordType = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *PhoneNumberWithVoiceSettings) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *PhoneNumberWithVoiceSettings) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCustomerReference returns the CustomerReference field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetCustomerReference() string {
	if o == nil || IsNil(o.CustomerReference) {
		var ret string
		return ret
	}
	return *o.CustomerReference
}

// GetCustomerReferenceOk returns a tuple with the CustomerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetCustomerReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReference) {
		return nil, false
	}
	return o.CustomerReference, true
}

// HasCustomerReference returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasCustomerReference() bool {
	if o != nil && !IsNil(o.CustomerReference) {
		return true
	}

	return false
}

// SetCustomerReference gets a reference to the given string and assigns it to the CustomerReference field.
func (o *PhoneNumberWithVoiceSettings) SetCustomerReference(v string) {
	o.CustomerReference = &v
}

// GetTechPrefixEnabled returns the TechPrefixEnabled field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetTechPrefixEnabled() bool {
	if o == nil || IsNil(o.TechPrefixEnabled) {
		var ret bool
		return ret
	}
	return *o.TechPrefixEnabled
}

// GetTechPrefixEnabledOk returns a tuple with the TechPrefixEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetTechPrefixEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TechPrefixEnabled) {
		return nil, false
	}
	return o.TechPrefixEnabled, true
}

// HasTechPrefixEnabled returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasTechPrefixEnabled() bool {
	if o != nil && !IsNil(o.TechPrefixEnabled) {
		return true
	}

	return false
}

// SetTechPrefixEnabled gets a reference to the given bool and assigns it to the TechPrefixEnabled field.
func (o *PhoneNumberWithVoiceSettings) SetTechPrefixEnabled(v bool) {
	o.TechPrefixEnabled = &v
}

// GetTranslatedNumber returns the TranslatedNumber field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetTranslatedNumber() string {
	if o == nil || IsNil(o.TranslatedNumber) {
		var ret string
		return ret
	}
	return *o.TranslatedNumber
}

// GetTranslatedNumberOk returns a tuple with the TranslatedNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetTranslatedNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TranslatedNumber) {
		return nil, false
	}
	return o.TranslatedNumber, true
}

// HasTranslatedNumber returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasTranslatedNumber() bool {
	if o != nil && !IsNil(o.TranslatedNumber) {
		return true
	}

	return false
}

// SetTranslatedNumber gets a reference to the given string and assigns it to the TranslatedNumber field.
func (o *PhoneNumberWithVoiceSettings) SetTranslatedNumber(v string) {
	o.TranslatedNumber = &v
}

// GetCallForwarding returns the CallForwarding field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetCallForwarding() CallForwarding {
	if o == nil || IsNil(o.CallForwarding) {
		var ret CallForwarding
		return ret
	}
	return *o.CallForwarding
}

// GetCallForwardingOk returns a tuple with the CallForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetCallForwardingOk() (*CallForwarding, bool) {
	if o == nil || IsNil(o.CallForwarding) {
		return nil, false
	}
	return o.CallForwarding, true
}

// HasCallForwarding returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasCallForwarding() bool {
	if o != nil && !IsNil(o.CallForwarding) {
		return true
	}

	return false
}

// SetCallForwarding gets a reference to the given CallForwarding and assigns it to the CallForwarding field.
func (o *PhoneNumberWithVoiceSettings) SetCallForwarding(v CallForwarding) {
	o.CallForwarding = &v
}

// GetCnamListing returns the CnamListing field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetCnamListing() CnamListing {
	if o == nil || IsNil(o.CnamListing) {
		var ret CnamListing
		return ret
	}
	return *o.CnamListing
}

// GetCnamListingOk returns a tuple with the CnamListing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetCnamListingOk() (*CnamListing, bool) {
	if o == nil || IsNil(o.CnamListing) {
		return nil, false
	}
	return o.CnamListing, true
}

// HasCnamListing returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasCnamListing() bool {
	if o != nil && !IsNil(o.CnamListing) {
		return true
	}

	return false
}

// SetCnamListing gets a reference to the given CnamListing and assigns it to the CnamListing field.
func (o *PhoneNumberWithVoiceSettings) SetCnamListing(v CnamListing) {
	o.CnamListing = &v
}

// GetEmergency returns the Emergency field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetEmergency() EmergencySettings {
	if o == nil || IsNil(o.Emergency) {
		var ret EmergencySettings
		return ret
	}
	return *o.Emergency
}

// GetEmergencyOk returns a tuple with the Emergency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetEmergencyOk() (*EmergencySettings, bool) {
	if o == nil || IsNil(o.Emergency) {
		return nil, false
	}
	return o.Emergency, true
}

// HasEmergency returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasEmergency() bool {
	if o != nil && !IsNil(o.Emergency) {
		return true
	}

	return false
}

// SetEmergency gets a reference to the given EmergencySettings and assigns it to the Emergency field.
func (o *PhoneNumberWithVoiceSettings) SetEmergency(v EmergencySettings) {
	o.Emergency = &v
}

// GetUsagePaymentMethod returns the UsagePaymentMethod field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetUsagePaymentMethod() string {
	if o == nil || IsNil(o.UsagePaymentMethod) {
		var ret string
		return ret
	}
	return *o.UsagePaymentMethod
}

// GetUsagePaymentMethodOk returns a tuple with the UsagePaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetUsagePaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.UsagePaymentMethod) {
		return nil, false
	}
	return o.UsagePaymentMethod, true
}

// HasUsagePaymentMethod returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasUsagePaymentMethod() bool {
	if o != nil && !IsNil(o.UsagePaymentMethod) {
		return true
	}

	return false
}

// SetUsagePaymentMethod gets a reference to the given string and assigns it to the UsagePaymentMethod field.
func (o *PhoneNumberWithVoiceSettings) SetUsagePaymentMethod(v string) {
	o.UsagePaymentMethod = &v
}

// GetMediaFeatures returns the MediaFeatures field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetMediaFeatures() MediaFeatures {
	if o == nil || IsNil(o.MediaFeatures) {
		var ret MediaFeatures
		return ret
	}
	return *o.MediaFeatures
}

// GetMediaFeaturesOk returns a tuple with the MediaFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetMediaFeaturesOk() (*MediaFeatures, bool) {
	if o == nil || IsNil(o.MediaFeatures) {
		return nil, false
	}
	return o.MediaFeatures, true
}

// HasMediaFeatures returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasMediaFeatures() bool {
	if o != nil && !IsNil(o.MediaFeatures) {
		return true
	}

	return false
}

// SetMediaFeatures gets a reference to the given MediaFeatures and assigns it to the MediaFeatures field.
func (o *PhoneNumberWithVoiceSettings) SetMediaFeatures(v MediaFeatures) {
	o.MediaFeatures = &v
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetCallRecording() CallRecording {
	if o == nil || IsNil(o.CallRecording) {
		var ret CallRecording
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetCallRecordingOk() (*CallRecording, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given CallRecording and assigns it to the CallRecording field.
func (o *PhoneNumberWithVoiceSettings) SetCallRecording(v CallRecording) {
	o.CallRecording = &v
}

// GetInboundCallScreening returns the InboundCallScreening field value if set, zero value otherwise.
func (o *PhoneNumberWithVoiceSettings) GetInboundCallScreening() string {
	if o == nil || IsNil(o.InboundCallScreening) {
		var ret string
		return ret
	}
	return *o.InboundCallScreening
}

// GetInboundCallScreeningOk returns a tuple with the InboundCallScreening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNumberWithVoiceSettings) GetInboundCallScreeningOk() (*string, bool) {
	if o == nil || IsNil(o.InboundCallScreening) {
		return nil, false
	}
	return o.InboundCallScreening, true
}

// HasInboundCallScreening returns a boolean if a field has been set.
func (o *PhoneNumberWithVoiceSettings) HasInboundCallScreening() bool {
	if o != nil && !IsNil(o.InboundCallScreening) {
		return true
	}

	return false
}

// SetInboundCallScreening gets a reference to the given string and assigns it to the InboundCallScreening field.
func (o *PhoneNumberWithVoiceSettings) SetInboundCallScreening(v string) {
	o.InboundCallScreening = &v
}

func (o PhoneNumberWithVoiceSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneNumberWithVoiceSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.CustomerReference) {
		toSerialize["customer_reference"] = o.CustomerReference
	}
	if !IsNil(o.TechPrefixEnabled) {
		toSerialize["tech_prefix_enabled"] = o.TechPrefixEnabled
	}
	if !IsNil(o.TranslatedNumber) {
		toSerialize["translated_number"] = o.TranslatedNumber
	}
	if !IsNil(o.CallForwarding) {
		toSerialize["call_forwarding"] = o.CallForwarding
	}
	if !IsNil(o.CnamListing) {
		toSerialize["cnam_listing"] = o.CnamListing
	}
	if !IsNil(o.Emergency) {
		toSerialize["emergency"] = o.Emergency
	}
	if !IsNil(o.UsagePaymentMethod) {
		toSerialize["usage_payment_method"] = o.UsagePaymentMethod
	}
	if !IsNil(o.MediaFeatures) {
		toSerialize["media_features"] = o.MediaFeatures
	}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.InboundCallScreening) {
		toSerialize["inbound_call_screening"] = o.InboundCallScreening
	}
	return toSerialize, nil
}

type NullablePhoneNumberWithVoiceSettings struct {
	value *PhoneNumberWithVoiceSettings
	isSet bool
}

func (v NullablePhoneNumberWithVoiceSettings) Get() *PhoneNumberWithVoiceSettings {
	return v.value
}

func (v *NullablePhoneNumberWithVoiceSettings) Set(val *PhoneNumberWithVoiceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumberWithVoiceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumberWithVoiceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumberWithVoiceSettings(val *PhoneNumberWithVoiceSettings) *NullablePhoneNumberWithVoiceSettings {
	return &NullablePhoneNumberWithVoiceSettings{value: val, isSet: true}
}

func (v NullablePhoneNumberWithVoiceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumberWithVoiceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



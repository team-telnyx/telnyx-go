/*
Telnyx API

SIP trunking, SMS, MMS, Call Control and Telephony Data Services.

API version: 2.0.0
Contact: support@telnyx.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package telnyx

import (
	"encoding/json"
)

// checks if the MessagingProfileHighLevelMetricsInbound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessagingProfileHighLevelMetricsInbound{}

// MessagingProfileHighLevelMetricsInbound struct for MessagingProfileHighLevelMetricsInbound
type MessagingProfileHighLevelMetricsInbound struct {
	// The number of inbound messages received.
	Received *float32 `json:"received,omitempty"`
}

// NewMessagingProfileHighLevelMetricsInbound instantiates a new MessagingProfileHighLevelMetricsInbound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagingProfileHighLevelMetricsInbound() *MessagingProfileHighLevelMetricsInbound {
	this := MessagingProfileHighLevelMetricsInbound{}
	return &this
}

// NewMessagingProfileHighLevelMetricsInboundWithDefaults instantiates a new MessagingProfileHighLevelMetricsInbound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagingProfileHighLevelMetricsInboundWithDefaults() *MessagingProfileHighLevelMetricsInbound {
	this := MessagingProfileHighLevelMetricsInbound{}
	return &this
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *MessagingProfileHighLevelMetricsInbound) GetReceived() float32 {
	if o == nil || IsNil(o.Received) {
		var ret float32
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingProfileHighLevelMetricsInbound) GetReceivedOk() (*float32, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *MessagingProfileHighLevelMetricsInbound) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given float32 and assigns it to the Received field.
func (o *MessagingProfileHighLevelMetricsInbound) SetReceived(v float32) {
	o.Received = &v
}

func (o MessagingProfileHighLevelMetricsInbound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagingProfileHighLevelMetricsInbound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	return toSerialize, nil
}

type NullableMessagingProfileHighLevelMetricsInbound struct {
	value *MessagingProfileHighLevelMetricsInbound
	isSet bool
}

func (v NullableMessagingProfileHighLevelMetricsInbound) Get() *MessagingProfileHighLevelMetricsInbound {
	return v.value
}

func (v *NullableMessagingProfileHighLevelMetricsInbound) Set(val *MessagingProfileHighLevelMetricsInbound) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagingProfileHighLevelMetricsInbound) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagingProfileHighLevelMetricsInbound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagingProfileHighLevelMetricsInbound(val *MessagingProfileHighLevelMetricsInbound) *NullableMessagingProfileHighLevelMetricsInbound {
	return &NullableMessagingProfileHighLevelMetricsInbound{value: val, isSet: true}
}

func (v NullableMessagingProfileHighLevelMetricsInbound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagingProfileHighLevelMetricsInbound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



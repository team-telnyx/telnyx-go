/*
Telnyx API

Testing CallRecordingsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package telnyx

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/telnyx/telnyx-go"
)

func Test_telnyx_CallRecordingsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CallRecordingsAPIService CreateCustomStorageCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectionId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.CreateCustomStorageCredentials(context.Background(), connectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService DeleteCustomStorageCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectionId string

		httpRes, err := apiClient.CallRecordingsAPI.DeleteCustomStorageCredentials(context.Background(), connectionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService DeleteRecording", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var recordingId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.DeleteRecording(context.Background(), recordingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService DeleteRecordingTranscription", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var recordingTranscriptionId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.DeleteRecordingTranscription(context.Background(), recordingTranscriptionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService DeleteRecordings", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.CallRecordingsAPI.DeleteRecordings(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService GetCustomStorageCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectionId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.GetCustomStorageCredentials(context.Background(), connectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService GetRecording", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var recordingId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.GetRecording(context.Background(), recordingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService GetRecordingTranscription", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var recordingTranscriptionId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.GetRecordingTranscription(context.Background(), recordingTranscriptionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService GetRecordingTranscriptions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CallRecordingsAPI.GetRecordingTranscriptions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService GetRecordings", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CallRecordingsAPI.GetRecordings(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CallRecordingsAPIService UpdateCustomStorageCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectionId string

		resp, httpRes, err := apiClient.CallRecordingsAPI.UpdateCustomStorageCredentials(context.Background(), connectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}

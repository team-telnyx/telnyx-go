/*
Telnyx API

Testing RoomsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package telnyx

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/telnyx/telnyx-go"
)

func Test_telnyx_RoomsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RoomsAPIService CreateRoom", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RoomsAPI.CreateRoom(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoomsAPIService DeleteRoom", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var roomId string

		httpRes, err := apiClient.RoomsAPI.DeleteRoom(context.Background(), roomId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoomsAPIService ListRooms", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RoomsAPI.ListRooms(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoomsAPIService RetrieveListRoomSessions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var roomId string

		resp, httpRes, err := apiClient.RoomsAPI.RetrieveListRoomSessions(context.Background(), roomId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoomsAPIService UpdateRoom", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var roomId string

		resp, httpRes, err := apiClient.RoomsAPI.UpdateRoom(context.Background(), roomId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoomsAPIService ViewRoom", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var roomId string

		resp, httpRes, err := apiClient.RoomsAPI.ViewRoom(context.Background(), roomId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
